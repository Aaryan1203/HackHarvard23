var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var objectIdentityKey_exports = {};
__export(objectIdentityKey_exports, {
  objectIdentityKey: () => objectIdentityKey
});
module.exports = __toCommonJS(objectIdentityKey_exports);
function objectIdentityKey(obj) {
  let k = "";
  for (const key in obj) {
    k += key;
    const arg = obj[key];
    let type = typeof arg;
    if (!arg || type !== "object")
      k += type + arg;
    else if (cache.has(arg))
      k += cache.get(arg);
    else {
      let v = Math.random();
      cache.set(arg, v), k += v;
    }
  }
  return k;
}
const cache = /* @__PURE__ */ new WeakMap();
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  objectIdentityKey
});
//# sourceMappingURL=objectIdentityKey.js.map
