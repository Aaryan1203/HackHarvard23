var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var proxyThemeToParents_exports = {};
__export(proxyThemeToParents_exports, {
  proxyThemeToParents: () => proxyThemeToParents,
  proxyThemesToParents: () => proxyThemesToParents,
  themesRaw: () => themesRaw
});
module.exports = __toCommonJS(proxyThemeToParents_exports);
var import_config = require("../config"), import_getThemeUnwrapped = require("../hooks/getThemeUnwrapped");
const themesRaw = {};
function proxyThemesToParents(dedupedThemes) {
  for (const { names, theme } of dedupedThemes)
    for (const name of names)
      themesRaw[name] = theme;
  const themes = {};
  for (const { names, theme } of dedupedThemes)
    for (const themeName of names) {
      const proxiedTheme = proxyThemeToParents(themeName, theme);
      themes[themeName] = proxiedTheme;
    }
  return themes;
}
function proxyThemeToParents(themeName, theme) {
  const cur = [], parents = themeName.split("_").slice(0, -1).map((part) => (cur.push(part), cur.join("_"))), numParents = parents.length;
  return new Proxy(theme, {
    get(target, key) {
      if (key === import_getThemeUnwrapped.GetThemeUnwrapped)
        return theme;
      if (key == null || // dont ask me, idk why but on hermes you can see that useTheme()[undefined] passes in STRING undefined to proxy
      // if someone is crazy enough to use "undefined" as a theme key then this not working is on them
      key == "undefined" || Reflect.has(target, key))
        return Reflect.get(target, key);
      for (let i = numParents - 1; i >= 0; i--) {
        const parent = themesRaw[parents[i]];
        if (parent && Reflect.has(parent, key))
          return Reflect.get(parent, key);
      }
      return (0, import_config.getTokenObject)(key) ?? Reflect.get(target, key);
    }
  });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  proxyThemeToParents,
  proxyThemesToParents,
  themesRaw
});
//# sourceMappingURL=proxyThemeToParents.js.map
