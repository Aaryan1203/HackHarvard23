var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var themeable_exports = {};
__export(themeable_exports, {
  themeable: () => themeable
});
module.exports = __toCommonJS(themeable_exports);
var import_react = require("react"), import_Theme = require("../views/Theme"), import_jsx_runtime = require("react/jsx-runtime");
function themeable(Component, staticConfig) {
  const withTheme = (0, import_react.forwardRef)(function(props, ref) {
    const { themeInverse, theme, componentName, themeReset, ...rest } = props, element = /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Component, { ref, ...rest, "data-disable-theme": !0 });
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_Theme.Theme,
      {
        componentName: componentName || (staticConfig == null ? void 0 : staticConfig.componentName),
        name: theme,
        "disable-child-theme": !0,
        debug: props.debug,
        inverse: themeInverse,
        reset: themeReset,
        children: element
      }
    );
  });
  return withTheme.displayName = `Themed(${(Component == null ? void 0 : Component.displayName) || (Component == null ? void 0 : Component.name) || "Anonymous"})`, withTheme;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  themeable
});
//# sourceMappingURL=themeable.js.map
