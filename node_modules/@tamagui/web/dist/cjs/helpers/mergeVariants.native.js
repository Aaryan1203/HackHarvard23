"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var mergeVariants_exports = {};
__export(mergeVariants_exports, {
  mergeVariants: () => mergeVariants
});
module.exports = __toCommonJS(mergeVariants_exports);
const mergeVariants = (parentVariants, ourVariants) => {
  const variants = {};
  for (const key in ourVariants) {
    const parentVariant = parentVariants == null ? void 0 : parentVariants[key], ourVariant = ourVariants[key];
    if (!parentVariant || typeof ourVariant == "function") {
      variants[key] = ourVariant;
      continue;
    }
    if (parentVariant && !ourVariant) {
      variants[key] = parentVariant[key];
      continue;
    }
    variants[key] = {};
    for (const subKey in ourVariant) {
      const val = ourVariant[subKey], parentVal = parentVariant == null ? void 0 : parentVariant[subKey];
      typeof val == "function" || !parentVal || typeof parentVal == "function" ? variants[key][subKey] = val : variants[key][subKey] = {
        // keep order
        ...parentVal,
        ...val
      };
    }
    parentVariant && (variants[key] = {
      ...parentVariant,
      ...variants[key]
    });
  }
  return {
    ...parentVariants,
    ...variants
  };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  mergeVariants
});
//# sourceMappingURL=mergeVariants.js.map
