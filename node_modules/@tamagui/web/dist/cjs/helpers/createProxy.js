var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var createProxy_exports = {};
__export(createProxy_exports, {
  createProxy: () => createProxy
});
module.exports = __toCommonJS(createProxy_exports);
function createProxy(target, handler) {
  return process.env.NODE_ENV === "development" && (typeof target != "object" || !target) && console.warn(
    "Invalid object given for proxy:",
    target,
    `
  
  This can be due to a missing theme or configuration given to Tamagui.`,
    new Error().stack
  ), new Proxy(target || {}, handler);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createProxy
});
//# sourceMappingURL=createProxy.js.map
