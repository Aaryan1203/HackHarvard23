"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var normalizeColor_exports = {};
__export(normalizeColor_exports, {
  normalizeColor: () => normalizeColor,
  rgba: () => import_normalize_css_color2.rgba
});
module.exports = __toCommonJS(normalizeColor_exports);
var import_constants = require("@tamagui/constants"), import_normalize_css_color = require("@tamagui/normalize-css-color"), import_normalize_css_color2 = require("@tamagui/normalize-css-color");
const normalizeColor = (color, opacity) => {
  if (!color)
    return;
  if (color[0] === "$" || color[0] === "v" && color.startsWith("var(") || import_constants.isWeb && opacity === 1)
    return color;
  const colorProcessed = (0, import_normalize_css_color.normalizeCSSColor)(color);
  if (colorProcessed != null) {
    const { r, g, b, a } = (0, import_normalize_css_color.rgba)(colorProcessed), alpha = (opacity ?? a ?? 1).toFixed(2);
    return `rgba(${r},${g},${b},${alpha})`;
  }
  process.env.NODE_ENV === "development" && console.warn(`Unknown color value: ${color}`);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  normalizeColor,
  rgba
});
//# sourceMappingURL=normalizeColor.js.map
