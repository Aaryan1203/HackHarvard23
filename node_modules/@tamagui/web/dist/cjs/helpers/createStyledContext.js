var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var createStyledContext_exports = {};
__export(createStyledContext_exports, {
  createStyledContext: () => createStyledContext
});
module.exports = __toCommonJS(createStyledContext_exports);
var import_react = require("react"), import_objectIdentityKey = require("./objectIdentityKey"), import_jsx_runtime = require("react/jsx-runtime");
function createStyledContext(defaultValues) {
  const OGContext = (0, import_react.createContext)(defaultValues), OGProvider = OGContext.Provider, Context = OGContext, scopedContexts = /* @__PURE__ */ new Map(), Provider = ({
    children,
    scope,
    ...values
  }) => {
    const value = (0, import_react.useMemo)(() => ({
      // this ! is a workaround for ts error
      ...defaultValues,
      ...values
    }), [(0, import_objectIdentityKey.objectIdentityKey)(values)]);
    let Provider2 = OGProvider;
    if (scope) {
      let ScopedContext = scopedContexts.get(scope);
      ScopedContext || (ScopedContext = (0, import_react.createContext)(defaultValues), scopedContexts.set(scope, ScopedContext)), Provider2 = ScopedContext.Provider;
    }
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Provider2, { value, children });
  }, useStyledContext = (scope) => {
    const context = scope ? scopedContexts.get(scope) : OGContext;
    return (0, import_react.useContext)(context);
  };
  return Context.Provider = Provider, Context.props = defaultValues, Context.context = OGContext, Context.useStyledContext = useStyledContext, Context;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createStyledContext
});
//# sourceMappingURL=createStyledContext.js.map
