"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var Tamagui_exports = {};
__export(Tamagui_exports, {
  Tamagui: () => Tamagui,
  getValueFromIdentifier: () => getValueFromIdentifier,
  setIdentifierValue: () => setIdentifierValue
});
module.exports = __toCommonJS(Tamagui_exports);
var Helpers = __toESM(require("@tamagui/helpers")), import_config = require("./config"), import_insertStyleRule = require("./helpers/insertStyleRule"), import_useMedia = require("./hooks/useMedia");
class TamaguiManager {
  constructor() {
    this.Helpers = Helpers;
  }
  get mediaState() {
    return { ...import_useMedia.mediaState };
  }
  get config() {
    return (0, import_config.getConfig)();
  }
  get insertedRules() {
    return (0, import_insertStyleRule.getAllRules)();
  }
  get allSelectors() {
    return (0, import_insertStyleRule.getAllSelectors)();
  }
  get allTransforms() {
    return (0, import_insertStyleRule.getAllTransforms)();
  }
  get identifierToValue() {
    return identifierToValue;
  }
}
const Tamagui = new TamaguiManager(), identifierToValue = /* @__PURE__ */ new Map(), getValueFromIdentifier = (identifier) => identifierToValue.get(identifier), setIdentifierValue = (identifier, value) => {
  identifierToValue.set(identifier, value);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Tamagui,
  getValueFromIdentifier,
  setIdentifierValue
});
//# sourceMappingURL=Tamagui.js.map
