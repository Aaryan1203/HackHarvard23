const createChainedWeakCache = () => {
  const baseMap = /* @__PURE__ */ new WeakMap();
  return {
    get: (args) => {
      let cur = baseMap;
      for (let arg of args)
        if (cur.has(arg))
          cur = cur.get(arg);
        else
          return;
      return cur;
    },
    set(args, result) {
      const len = args.length;
      let cur = baseMap;
      for (let i = 0; i < len; i++) {
        const arg = args[i];
        if (i === len - 1)
          cur.set(arg, result);
        else if (cur.has(arg))
          cur = cur.get(arg);
        else {
          const next = /* @__PURE__ */ new WeakMap();
          cur.set(arg, next), cur = next;
        }
      }
    }
  };
};
export {
  createChainedWeakCache
};
//# sourceMappingURL=createChainedWeakCache.js.map
