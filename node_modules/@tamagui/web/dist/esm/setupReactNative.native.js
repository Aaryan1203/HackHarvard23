const ReactNativeStaticConfigs = /* @__PURE__ */ new WeakMap();
function getReactNativeConfig(Component) {
  if (Component)
    return Component.propTypes?.onTextInput || Component.propTypes?.onChangeText ? RNConfigs.TextInput : Component.getSizeWithHeaders ? RNConfigs.Image : Component.propTypes?.textBreakStrategy ? RNConfigs.Text : RNConfigs.default;
}
const RNConfigs = {
  Image: {
    isReactNative: !0,
    inlineProps: /* @__PURE__ */ new Set(["src", "width", "height"])
  },
  Text: {
    isReactNative: !0,
    isText: !0
  },
  TextInput: {
    isReactNative: !0,
    isInput: !0,
    isText: !0
  },
  default: {
    isReactNative: !0
  }
};
function setupReactNative(rnExports) {
}
export {
  getReactNativeConfig,
  setupReactNative
};
//# sourceMappingURL=setupReactNative.js.map
