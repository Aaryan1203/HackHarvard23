import * as Helpers from "@tamagui/helpers";
import { getConfig } from "./config";
import { getAllRules, getAllSelectors, getAllTransforms } from "./helpers/insertStyleRule";
import { mediaState } from "./hooks/useMedia";
class TamaguiManager {
  constructor() {
    this.Helpers = Helpers;
  }
  get mediaState() {
    return { ...mediaState };
  }
  get config() {
    return getConfig();
  }
  get insertedRules() {
    return getAllRules();
  }
  get allSelectors() {
    return getAllSelectors();
  }
  get allTransforms() {
    return getAllTransforms();
  }
  get identifierToValue() {
    return identifierToValue;
  }
}
const Tamagui = new TamaguiManager(), identifierToValue = /* @__PURE__ */ new Map(), getValueFromIdentifier = (identifier) => identifierToValue.get(identifier), setIdentifierValue = (identifier, value) => {
  identifierToValue.set(identifier, value);
};
export {
  Tamagui,
  getValueFromIdentifier,
  setIdentifierValue
};
//# sourceMappingURL=Tamagui.js.map
