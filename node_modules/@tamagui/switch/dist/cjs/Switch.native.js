"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var Switch_exports = {};
__export(Switch_exports, {
  SwitchFrame: () => SwitchFrame,
  SwitchThumb: () => SwitchThumb
});
module.exports = __toCommonJS(Switch_exports);
var import_core = require("@tamagui/core"), import_get_token = require("@tamagui/get-token"), import_stacks = require("@tamagui/stacks"), import_SwitchContext = require("./SwitchContext");
const SwitchThumb = (0, import_core.styled)(import_stacks.ThemeableStack, {
  name: "SwitchThumb",
  context: import_SwitchContext.SwitchContext,
  variants: {
    unstyled: {
      false: {
        size: "$true",
        backgroundColor: "$background",
        borderRadius: 1e3
      }
    },
    checked: {
      true: {}
    },
    size: {
      "...size": (val) => {
        const size = getSwitchHeight(val);
        return {
          height: size,
          width: size
        };
      }
    }
  },
  defaultVariants: {
    unstyled: !1
  }
}), getSwitchHeight = (val) => Math.round((0, import_core.getVariableValue)((0, import_get_token.getSize)(val)) * 0.65), getSwitchWidth = (val) => getSwitchHeight(val) * 2, SwitchFrame = (0, import_core.styled)(import_stacks.YStack, {
  name: "Switch",
  context: import_SwitchContext.SwitchContext,
  variants: {
    unstyled: {
      false: {
        size: "$true",
        borderRadius: 1e3,
        backgroundColor: "$background",
        borderWidth: 2,
        borderColor: "$background",
        focusStyle: {
          outlineColor: "$borderColorFocus",
          outlineStyle: "solid",
          outlineWidth: 2
        }
      }
    },
    checked: {
      true: {}
    },
    frameWidth: {
      ":number": () => null
    },
    size: {
      "...size": (val) => {
        const height = getSwitchHeight(val) + 4, width = getSwitchWidth(val) + 4;
        return {
          height,
          minHeight: height,
          width
        };
      }
    }
  },
  defaultVariants: {
    unstyled: !1
  }
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SwitchFrame,
  SwitchThumb
});
//# sourceMappingURL=Switch.js.map
