"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var SizableStack_exports = {};
__export(SizableStack_exports, {
  SizableStack: () => SizableStack
});
module.exports = __toCommonJS(SizableStack_exports);
var import_core = require("@tamagui/core"), import_get_button_sized = require("@tamagui/get-button-sized"), import_Stacks = require("./Stacks"), import_variants = require("./variants");
const SizableStack = (0, import_core.styled)(import_Stacks.XStack, {
  name: "SizableStack",
  variants: {
    unstyled: {
      true: {
        hoverTheme: !1,
        pressTheme: !1,
        focusTheme: !1,
        elevate: !1,
        bordered: !1
      }
    },
    hoverTheme: import_variants.hoverTheme,
    pressTheme: import_variants.pressTheme,
    focusTheme: import_variants.focusTheme,
    circular: import_variants.circular,
    elevate: import_variants.elevate,
    bordered: import_variants.bordered,
    size: {
      "...size": (val, extras) => (0, import_get_button_sized.getButtonSized)(val, extras)
    }
  }
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SizableStack
});
//# sourceMappingURL=SizableStack.js.map
