"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var src_exports = {};
__export(src_exports, {
  configureInitialWindowDimensions: () => configureInitialWindowDimensions,
  useWindowDimensions: () => useWindowDimensions
});
module.exports = __toCommonJS(src_exports);
var import_constants = require("@tamagui/constants"), import_react = require("react"), import_react_native = require("react-native");
const initialValue = {
  height: 800,
  width: 600
};
function configureInitialWindowDimensions(next) {
  Object.assign(initialValue, next);
}
import_react_native.Dimensions.addEventListener("change", () => {
  cbs.forEach((cb) => cb(window));
});
const cbs = /* @__PURE__ */ new Set();
function subscribe(cb) {
  return cbs.add(cb), () => cbs.delete(cb);
}
function useWindowDimensions({
  serverValue = initialValue
} = {}) {
  return (0, import_react.useSyncExternalStore)(
    subscribe,
    () => import_react_native.Dimensions.get("window"),
    () => import_constants.isWeb ? serverValue : import_react_native.Dimensions.get("window")
  );
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  configureInitialWindowDimensions,
  useWindowDimensions
});
//# sourceMappingURL=index.js.map
