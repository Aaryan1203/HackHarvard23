"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var SheetScrollView_exports = {};
__export(SheetScrollView_exports, {
  SheetScrollView: () => SheetScrollView
});
module.exports = __toCommonJS(SheetScrollView_exports);
var import_core = require("@tamagui/core"), import_scroll_view = require("@tamagui/scroll-view"), import_react = require("react"), import_SheetContext = require("./SheetContext"), import_jsx_runtime = require("react/jsx-runtime");
const SHEET_SCROLL_VIEW_NAME = "SheetScrollView", SheetScrollView = (0, import_react.forwardRef)(
  ({ __scopeSheet, children, ...props }, ref) => {
    const context = (0, import_SheetContext.useSheetContext)(SHEET_SCROLL_VIEW_NAME, __scopeSheet), { scrollBridge } = context, scrollRef = (0, import_react.useRef)(null), state = (0, import_react.useRef)({
      lastPageY: 0,
      dragAt: 0,
      dys: [],
      // store a few recent dys to get velocity on release
      isScrolling: !1,
      isDragging: !1
    }), release = () => {
      if (!state.current.isDragging)
        return;
      state.current.isDragging = !1, scrollBridge.scrollStartY = -1, state.current.isScrolling = !1;
      let vy = 0;
      if (state.current.dys.length) {
        const recentDys = state.current.dys.slice(-10);
        vy = (recentDys.length ? recentDys.reduce((a, b) => a + b, 0) : 0) / recentDys.length * 0.04;
      }
      state.current.dys = [], scrollBridge.release({
        dragAt: state.current.dragAt,
        vy
      });
    };
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_scroll_view.ScrollView,
      {
        ref: (0, import_core.composeRefs)(scrollRef, ref),
        flex: 1,
        scrollEventThrottle: 8,
        onScroll: (e) => {
          const { y } = e.nativeEvent.contentOffset;
          scrollBridge.y = y, y > 0 && (scrollBridge.scrollStartY = -1);
        },
        onStartShouldSetResponder: () => (scrollBridge.scrollStartY = -1, state.current.isDragging = !0, !0),
        onMoveShouldSetResponder: () => !1,
        onResponderRelease: release,
        className: "_ovs-contain",
        ...props,
        children: (0, import_react.useMemo)(() => children, [children])
      }
    );
  }
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SheetScrollView
});
//# sourceMappingURL=SheetScrollView.js.map
