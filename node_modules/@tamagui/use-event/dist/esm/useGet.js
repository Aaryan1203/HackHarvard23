import { useCallback, useEffect, useLayoutEffect, useRef } from "react";
const isWeb = !0, isClient = typeof window < "u", useIsomorphicLayoutEffect = !isWeb || isClient ? useLayoutEffect : useEffect;
function useGet(currentValue, initialValue, forwardToFunction) {
  const curRef = useRef(initialValue ?? currentValue);
  return useIsomorphicLayoutEffect(() => {
    curRef.current = currentValue;
  }), useCallback(
    forwardToFunction ? (...args) => curRef.current?.apply(null, args) : () => curRef.current,
    []
  );
}
export {
  useGet
};
//# sourceMappingURL=useGet.js.map
