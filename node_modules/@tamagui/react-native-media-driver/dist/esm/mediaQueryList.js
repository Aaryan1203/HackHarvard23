import { Dimensions } from "react-native";
import { matchQuery } from "./matchQuery";
class NativeMediaQueryList {
  constructor(query) {
    this.query = query;
    this.notify(), Dimensions.addEventListener("change", () => {
      this.notify();
    });
  }
  listeners = [];
  get orientation() {
    const windowDimensions = Dimensions.get("window");
    return windowDimensions.height > windowDimensions.width ? "portrait" : "landscape";
  }
  notify() {
    this.listeners.forEach((listener) => {
      listener(this.orientation);
    });
  }
  addListener(listener) {
    this.listeners.push(listener);
  }
  removeListener(listener) {
    const index = this.listeners.indexOf(listener);
    index !== -1 && this.listeners.splice(index, 1);
  }
  match(query, { width, height }) {
    return matchQuery(query, {
      type: "screen",
      orientation: height > width ? "portrait" : "landscape",
      "device-width": width,
      "device-height": height
    });
  }
  get matches() {
    const windowDimensions = Dimensions.get("window");
    return matchQuery(this.query, {
      type: "screen",
      orientation: this.orientation,
      ...windowDimensions,
      "device-width": windowDimensions.width,
      "device-height": windowDimensions.height
    });
  }
}
export {
  NativeMediaQueryList
};
//# sourceMappingURL=mediaQueryList.js.map
