import { useDelayGroupContext } from "@floating-ui/react";
import { Paragraph } from "@tamagui/text";
import { Tooltip, TooltipGroup } from "./Tooltip";
const TooltipSimple = ({
  label,
  children,
  contentProps,
  ...tooltipProps
}) => {
  let context;
  try {
    context = useDelayGroupContext();
  } catch {
  }
  const contents = <Tooltip offset={18} {...tooltipProps}>
    <Tooltip.Trigger
      {...typeof label == "string" && {
        "aria-label": label
      }}
      asChild
    >{children}</Tooltip.Trigger>
    <Tooltip.Content
      zIndex={1e9}
      enterStyle={{ x: 0, y: -8, opacity: 0, scale: 0.93 }}
      exitStyle={{ x: 0, y: -8, opacity: 0, scale: 0.93 }}
      x={0}
      scale={1}
      y={0}
      elevation="$1"
      opacity={1}
      animateOnly={["transform", "opacity"]}
      animation={[
        "quick",
        {
          opacity: {
            overshootClamping: !0
          }
        }
      ]}
      {...contentProps}
    >
      <Tooltip.Arrow />
      <Paragraph size="$2">{label}</Paragraph>
    </Tooltip.Content>
  </Tooltip>;
  return context ? contents : <TooltipGroup delay={defaultTooltipDelay}>{contents}</TooltipGroup>;
}, defaultTooltipDelay = { open: 3e3, close: 100 };
export {
  TooltipSimple
};
//# sourceMappingURL=TooltipSimple.js.map
