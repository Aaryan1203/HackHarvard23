import { useDelayGroupContext } from "@floating-ui/react";
import { Paragraph } from "@tamagui/text";
import { Tooltip, TooltipGroup } from "./Tooltip";
import { jsx, jsxs } from "react/jsx-runtime";
const TooltipSimple = ({
  label,
  children,
  contentProps,
  ...tooltipProps
}) => {
  let context;
  try {
    context = useDelayGroupContext();
  } catch {
  }
  const contents = /* @__PURE__ */ jsxs(Tooltip, { offset: 18, ...tooltipProps, children: [
    /* @__PURE__ */ jsx(
      Tooltip.Trigger,
      {
        ...typeof label == "string" && {
          "aria-label": label
        },
        asChild: !0,
        children
      }
    ),
    /* @__PURE__ */ jsxs(
      Tooltip.Content,
      {
        zIndex: 1e9,
        enterStyle: { x: 0, y: -8, opacity: 0, scale: 0.93 },
        exitStyle: { x: 0, y: -8, opacity: 0, scale: 0.93 },
        x: 0,
        scale: 1,
        y: 0,
        elevation: "$1",
        opacity: 1,
        animateOnly: ["transform", "opacity"],
        animation: [
          "quick",
          {
            opacity: {
              overshootClamping: !0
            }
          }
        ],
        ...contentProps,
        children: [
          /* @__PURE__ */ jsx(Tooltip.Arrow, {}),
          /* @__PURE__ */ jsx(Paragraph, { size: "$2", children: label })
        ]
      }
    )
  ] });
  return context ? contents : /* @__PURE__ */ jsx(TooltipGroup, { delay: defaultTooltipDelay, children: contents });
}, defaultTooltipDelay = { open: 3e3, close: 100 };
export {
  TooltipSimple
};
//# sourceMappingURL=TooltipSimple.js.map
