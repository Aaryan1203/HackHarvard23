"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
}, __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default")), __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// ../polyfill-dev/index.js
var require_polyfill_dev = __commonJS({
  "../polyfill-dev/index.js"() {
    "use strict";
    typeof globalThis.__DEV__ > "u" && (globalThis.__DEV__ = process.env.NODE_ENV === "development");
  }
});

// ../use-force-update/dist/cjs/index.native.js
var require_index_native = __commonJS({
  "../use-force-update/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      isServerSide: () => isServerSide,
      useForceUpdate: () => useForceUpdate
    });
    module2.exports = __toCommonJS2(src_exports2);
    var import_react2 = require("react"), isServerSide = !1, idFn = () => {
    };
    function useForceUpdate() {
      return isServerSide ? idFn : (0, import_react2.useReducer)((x) => Math.random(), 0)[1];
    }
  }
});

// ../helpers/dist/cjs/clamp.native.js
var require_clamp_native = __commonJS({
  "../helpers/dist/cjs/clamp.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), clamp_exports = {};
    __export2(clamp_exports, {
      clamp: () => clamp
    });
    module2.exports = __toCommonJS2(clamp_exports);
    function clamp(value, [min2, max2]) {
      return Math.min(max2, Math.max(min2, value));
    }
  }
});

// ../helpers/dist/cjs/composeEventHandlers.native.js
var require_composeEventHandlers_native = __commonJS({
  "../helpers/dist/cjs/composeEventHandlers.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), composeEventHandlers_exports = {};
    __export2(composeEventHandlers_exports, {
      composeEventHandlers: () => composeEventHandlers
    });
    module2.exports = __toCommonJS2(composeEventHandlers_exports);
    function composeEventHandlers(og, next, { checkDefaultPrevented = !0 } = {}) {
      return !og || !next ? next || og || void 0 : function(event) {
        if (og == null || og(event), !event || !(checkDefaultPrevented && "defaultPrevented" in event) || // @ts-ignore
        "defaultPrevented" in event && !event.defaultPrevented)
          return next == null ? void 0 : next(event);
      };
    }
  }
});

// ../helpers/dist/cjs/concatClassName.native.js
var require_concatClassName_native = __commonJS({
  "../helpers/dist/cjs/concatClassName.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), concatClassName_exports = {};
    __export2(concatClassName_exports, {
      concatClassName: () => concatClassName
    });
    module2.exports = __toCommonJS2(concatClassName_exports);
    function concatClassName(_cn) {
      let args = arguments, usedPrefixes = [], final = "", len = args.length, propObjects = null;
      for (let x = len; x >= 0; x--) {
        let cns = args[x];
        if (!cns)
          continue;
        if (!Array.isArray(cns) && typeof cns != "string") {
          propObjects = propObjects || [], propObjects.push(cns);
          continue;
        }
        let names = Array.isArray(cns) ? cns : cns.split(" "), numNames = names.length;
        for (let i = numNames - 1; i >= 0; i--) {
          let name = names[i];
          if (!name || name === " ")
            continue;
          if (name[0] !== "_") {
            final = name + " " + final;
            continue;
          }
          let splitIndex = name.indexOf("-");
          if (splitIndex < 1) {
            final = name + " " + final;
            continue;
          }
          let isMediaQuery = name[splitIndex + 1] === "_", styleKey = name.slice(1, name.lastIndexOf("-")), mediaKey = isMediaQuery ? name.slice(splitIndex + 2, splitIndex + 7) : null, uid = mediaKey ? styleKey + mediaKey : styleKey;
          if (usedPrefixes.indexOf(uid) > -1)
            continue;
          usedPrefixes.push(uid);
          let propName = styleKey;
          propName && propObjects && propObjects.some((po) => {
            if (mediaKey) {
              let propKey = pseudoInvert[mediaKey];
              return po && po[propKey] && propName in po[propKey] && po[propKey] !== null;
            }
            return po && propName in po && po[propName] !== null;
          }) || (final = name + " " + final);
        }
      }
      return final;
    }
    var pseudoInvert = {
      hover: "hoverStyle",
      focus: "focusStyle",
      press: "pressStyle"
    };
  }
});

// ../constants/dist/cjs/constants.native.js
var require_constants_native = __commonJS({
  "../constants/dist/cjs/constants.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), constants_native_exports = {};
    __export2(constants_native_exports, {
      currentPlatform: () => currentPlatform,
      isAndroid: () => isAndroid,
      isChrome: () => isChrome2,
      isClient: () => isClient2,
      isIos: () => isIos,
      isServer: () => isServer2,
      isTouchable: () => isTouchable2,
      isWeb: () => isWeb6,
      isWebTouchable: () => isWebTouchable2,
      isWindowDefined: () => isWindowDefined,
      useIsomorphicLayoutEffect: () => useIsomorphicLayoutEffect2
    });
    module2.exports = __toCommonJS2(constants_native_exports);
    var import_react2 = require("react"), isWeb6 = !1, isWindowDefined = !1, isServer2 = !1, isClient2 = !1, useIsomorphicLayoutEffect2 = import_react2.useLayoutEffect, isChrome2 = !1, isWebTouchable2 = !1, isTouchable2 = !0, isAndroid = !1, isIos = !1, currentPlatform = "native";
  }
});

// ../constants/dist/cjs/index.native.js
var require_index_native2 = __commonJS({
  "../constants/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_constants_native(), module2.exports);
  }
});

// ../helpers/dist/cjs/validStyleProps.native.js
var require_validStyleProps_native = __commonJS({
  "../helpers/dist/cjs/validStyleProps.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), validStyleProps_exports = {};
    __export2(validStyleProps_exports, {
      stylePropsAll: () => stylePropsAll,
      stylePropsFont: () => stylePropsFont,
      stylePropsText: () => stylePropsText,
      stylePropsTextOnly: () => stylePropsTextOnly,
      stylePropsTransform: () => stylePropsTransform,
      stylePropsUnitless: () => stylePropsUnitless,
      stylePropsView: () => stylePropsView,
      tokenCategories: () => tokenCategories,
      validPseudoKeys: () => validPseudoKeys,
      validStyles: () => validStyles,
      validStylesOnBaseProps: () => validStylesOnBaseProps
    });
    module2.exports = __toCommonJS2(validStyleProps_exports);
    var import_constants = require_index_native2(), placeHolderTextColors = {
      placeholderTextColor: !0
    }, validStylesOnBaseProps = {
      ...placeHolderTextColors
    }, textColors = {
      color: !0,
      ...placeHolderTextColors,
      textDecorationColor: !0,
      textShadowColor: !0
    }, tokenCategories = {
      radius: {
        borderRadius: !0,
        borderTopLeftRadius: !0,
        borderTopRightRadius: !0,
        borderBottomLeftRadius: !0,
        borderBottomRightRadius: !0,
        // logical
        borderStartStartRadius: !0,
        borderStartEndRadius: !0,
        borderEndStartRadius: !0,
        borderEndEndRadius: !0
      },
      size: {
        width: !0,
        height: !0,
        minWidth: !0,
        minHeight: !0,
        maxWidth: !0,
        maxHeight: !0
      },
      zIndex: {
        zIndex: !0
      },
      color: {
        backgroundColor: !0,
        borderColor: !0,
        borderBlockStartColor: !0,
        borderBlockEndColor: !0,
        borderBlockColor: !0,
        borderBottomColor: !0,
        borderTopColor: !0,
        borderLeftColor: !0,
        borderRightColor: !0,
        borderEndColor: !0,
        borderStartColor: !0,
        shadowColor: !0,
        ...textColors
      }
    }, stylePropsUnitless = {
      WebkitLineClamp: !0,
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      columnCount: !0,
      flex: !0,
      flexGrow: !0,
      flexOrder: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      fontWeight: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowGap: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnGap: !0,
      gridColumnStart: !0,
      lineClamp: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      scale: !0,
      scaleX: !0,
      scaleY: !0,
      scaleZ: !0,
      shadowOpacity: !0
    }, stylePropsTransform = {
      x: !0,
      y: !0,
      scale: !0,
      perspective: !0,
      scaleX: !0,
      scaleY: !0,
      skewX: !0,
      skewY: !0,
      matrix: !0,
      rotate: !0,
      rotateY: !0,
      rotateX: !0,
      rotateZ: !0
    }, stylePropsView = {
      backfaceVisibility: !0,
      borderBottomEndRadius: !0,
      borderBottomStartRadius: !0,
      borderBottomWidth: !0,
      borderLeftWidth: !0,
      borderRightWidth: !0,
      borderStyle: !0,
      borderTopEndRadius: !0,
      borderTopStartRadius: !0,
      borderTopWidth: !0,
      borderWidth: !0,
      transform: !0,
      alignContent: !0,
      alignItems: !0,
      alignSelf: !0,
      borderEndWidth: !0,
      borderStartWidth: !0,
      bottom: !0,
      display: !0,
      end: !0,
      flexBasis: !0,
      flexDirection: !0,
      flexWrap: !0,
      gap: !0,
      columnGap: !0,
      rowGap: !0,
      justifyContent: !0,
      left: !0,
      margin: !0,
      marginBlockEnd: !0,
      marginBlockStart: !0,
      marginInlineEnd: !0,
      marginInline: !0,
      marginInlineStart: !0,
      marginBottom: !0,
      marginEnd: !0,
      marginHorizontal: !0,
      marginLeft: !0,
      marginRight: !0,
      marginStart: !0,
      marginTop: !0,
      marginVertical: !0,
      overflow: !0,
      padding: !0,
      paddingBottom: !0,
      paddingInline: !0,
      paddingBlock: !0,
      paddingBlockStart: !0,
      paddingInlineEnd: !0,
      paddingInlineStart: !0,
      paddingEnd: !0,
      paddingHorizontal: !0,
      paddingLeft: !0,
      paddingRight: !0,
      paddingStart: !0,
      paddingTop: !0,
      paddingVertical: !0,
      position: !0,
      right: !0,
      start: !0,
      top: !0,
      direction: !0,
      shadowOffset: !0,
      shadowRadius: !0,
      ...tokenCategories.color,
      ...tokenCategories.radius,
      ...tokenCategories.size,
      ...tokenCategories.radius,
      ...validStylesOnBaseProps,
      ...stylePropsTransform,
      ...stylePropsUnitless,
      ...import_constants.isAndroid ? { elevationAndroid: !0 } : {}
    }, stylePropsFont = {
      fontFamily: !0,
      fontSize: !0,
      fontStyle: !0,
      fontWeight: !0,
      letterSpacing: !0,
      lineHeight: !0,
      textTransform: !0
    }, stylePropsTextOnly = {
      ...stylePropsFont,
      textAlign: !0,
      textDecorationLine: !0,
      textDecorationStyle: !0,
      ...textColors,
      textShadowOffset: !0,
      textShadowRadius: !0
    }, stylePropsText = {
      ...stylePropsView,
      ...stylePropsTextOnly
    }, stylePropsAll = stylePropsText, validPseudoKeys = {
      enterStyle: !0,
      exitStyle: !0,
      hoverStyle: !0,
      pressStyle: !0,
      focusStyle: !0
    }, validStyles = {
      ...validPseudoKeys,
      ...stylePropsView
    };
  }
});

// ../helpers/dist/cjs/types.native.js
var require_types_native = __commonJS({
  "../helpers/dist/cjs/types.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), types_exports = {};
    module2.exports = __toCommonJS2(types_exports);
  }
});

// ../simple-hash/dist/cjs/index.native.js
var require_index_native3 = __commonJS({
  "../simple-hash/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      simpleHash: () => simpleHash
    });
    module2.exports = __toCommonJS2(src_exports2);
    var cache = /* @__PURE__ */ new Map(), simpleHash = (str, hashMin = 10) => {
      if (cache.has(str))
        return cache.get(str);
      let hash = 0, valids = "", len = str.length;
      for (let i = 0; i < len; i++) {
        let char = str.charCodeAt(i);
        if (hashMin !== "strict" && (char === 46 && (valids += "d0t"), isValidCSSCharCode(char) && len <= hashMin)) {
          valids += str[i];
          continue;
        }
        hash = hashChar(hash, str[i]);
      }
      let res = valids + (hash ? Math.abs(hash) : "");
      return cache.size > 1e4 && cache.clear(), cache.set(str, res), res;
    }, hashChar = (hash, c) => Math.imul(31, hash) + c.charCodeAt(0) | 0;
    function isValidCSSCharCode(code) {
      return (
        // A-Z
        code >= 65 && code <= 90 || // a-z
        code >= 97 && code <= 122 || // _
        code === 95 || // -
        code === 45 || // 0-9
        code >= 48 && code <= 57
      );
    }
  }
});

// ../helpers/dist/cjs/index.native.js
var require_index_native4 = __commonJS({
  "../helpers/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_clamp_native(), module2.exports);
    __reExport2(src_exports2, require_composeEventHandlers_native(), module2.exports);
    __reExport2(src_exports2, require_concatClassName_native(), module2.exports);
    __reExport2(src_exports2, require_validStyleProps_native(), module2.exports);
    __reExport2(src_exports2, require_types_native(), module2.exports);
    __reExport2(src_exports2, require_index_native3(), module2.exports);
  }
});

// ../web/dist/cjs/config.native.js
var require_config_native = __commonJS({
  "../web/dist/cjs/config.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), config_exports = {};
    __export2(config_exports, {
      configListeners: () => configListeners,
      devConfig: () => devConfig,
      getConfig: () => getConfig3,
      getFont: () => getFont,
      getThemes: () => getThemes3,
      getToken: () => getToken3,
      getTokenObject: () => getTokenObject,
      getTokenValue: () => getTokenValue3,
      getTokens: () => getTokens3,
      onConfiguredOnce: () => onConfiguredOnce,
      setConfig: () => setConfig,
      setConfigFont: () => setConfigFont,
      setTokens: () => setTokens,
      setupDev: () => setupDev3,
      updateConfig: () => updateConfig2,
      useTokens: () => useTokens
    });
    module2.exports = __toCommonJS2(config_exports);
    var import_constants = require_index_native2(), conf, setConfig = (next) => {
      conf = next, configListeners.forEach((cb) => cb(next));
    }, setConfigFont = (name, font, fontParsed) => {
      if (process.env.NODE_ENV === "development" && !conf)
        throw new Error("Haven't called createTamagui yet");
      conf.fonts[name] = font, conf.fontsParsed[`$${name}`] = fontParsed;
    }, getConfig3 = () => {
      if (!conf)
        throw new Error(
          process.env.NODE_ENV !== "production" ? "Missing tamagui config, you either have a duplicate config, or haven't set it up. Be sure createTamagui is called before rendering. Also, make sure all of your tamagui dependencies are on the same version (`tamagui`, `@tamagui/package-name`, etc.)" : "Err0"
        );
      return conf;
    }, tokensMerged;
    function setTokens(_) {
      tokensMerged = _;
    }
    var getTokens3 = ({
      prefixed
    } = {}) => {
      if (process.env.NODE_ENV === "development" && !conf)
        throw new Error("Haven't called createTamagui yet");
      let { tokens, tokensParsed } = conf;
      return prefixed === !1 ? tokens : prefixed === !0 ? tokensParsed : tokensMerged;
    }, getTokenObject = (value, group) => {
      var _a, _b;
      return conf.specificTokens[value] ?? (group ? (_a = tokensMerged[group]) == null ? void 0 : _a[value] : (_b = tokensMerged[Object.keys(tokensMerged).find((cat) => tokensMerged[cat][value]) || ""]) == null ? void 0 : _b[value]);
    }, getToken3 = (value, group, useVariable = import_constants.isWeb) => {
      let token = getTokenObject(value, group);
      return useVariable ? token == null ? void 0 : token.variable : token == null ? void 0 : token.val;
    }, getTokenValue3 = (value, group) => getToken3(value, group, !1), useTokens = getTokens3, getThemes3 = () => conf.themes, configListeners = /* @__PURE__ */ new Set(), onConfiguredOnce = (cb) => {
      conf ? cb(conf) : configListeners.add(cb);
    }, updateConfig2 = (key, value) => {
      Object.assign(conf[key], value);
    }, getFont = (name) => {
      var _a;
      let conf2 = getConfig3();
      return conf2.fontsParsed[name] ?? ((_a = Object.entries(conf2.fontsParsed).find(
        ([k]) => {
          var _a2, _b;
          return ((_b = (_a2 = conf2.fontsParsed[k]) == null ? void 0 : _a2.family) == null ? void 0 : _b.val) === name;
        }
      )) == null ? void 0 : _a[1]);
    }, devConfig;
    function setupDev3(conf2) {
      process.env.NODE_ENV === "development" && (devConfig = conf2);
    }
  }
});

// ../web/dist/cjs/createVariable.native.js
var require_createVariable_native = __commonJS({
  "../web/dist/cjs/createVariable.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createVariable_exports = {};
    __export2(createVariable_exports, {
      createCSSVariable: () => createCSSVariable,
      createVariable: () => createVariable2,
      didGetVariableValue: () => didGetVariableValue,
      getVariable: () => getVariable2,
      getVariableName: () => getVariableName2,
      getVariableValue: () => getVariableValue3,
      getVariableVariable: () => getVariableVariable,
      isVariable: () => isVariable2,
      setDidGetVariableValue: () => setDidGetVariableValue,
      variableToString: () => variableToString3
    });
    module2.exports = __toCommonJS2(createVariable_exports);
    var import_constants = require_index_native2(), import_helpers = require_index_native4(), import_config = require_config_native(), IS_VAR = "isVar", createVariable2 = (props, skipHash = !1) => {
      if (!skipHash && isVariable2(props))
        return props;
      let { key, name, val } = props;
      return {
        [IS_VAR]: !0,
        key,
        name: skipHash ? "" : (0, import_helpers.simpleHash)(name, 40),
        val,
        variable: import_constants.isWeb ? skipHash ? `var(--${name})` : createCSSVariable(name) : ""
      };
    };
    function variableToString3(vrble, getValue = !1) {
      return isVariable2(vrble) ? !getValue && import_constants.isWeb && vrble.variable ? vrble.variable : `${vrble.val}` : `${vrble || ""}`;
    }
    function isVariable2(v) {
      return v && typeof v == "object" && IS_VAR in v;
    }
    function getVariable2(nameOrVariable) {
      if (setDidGetVariableValue(!0), isVariable2(nameOrVariable))
        return variableToString3(nameOrVariable);
      let tokens = (0, import_config.getConfig)().tokensParsed;
      return variableToString3(tokens[nameOrVariable] ?? nameOrVariable);
    }
    var accessed = !1, setDidGetVariableValue = (val) => accessed = val, didGetVariableValue = () => accessed;
    function getVariableValue3(v) {
      return isVariable2(v) ? (setDidGetVariableValue(!0), v.val) : v;
    }
    function getVariableName2(v) {
      return isVariable2(v) ? v.name : v;
    }
    function getVariableVariable(v) {
      return isVariable2(v) ? v.variable : v;
    }
    var createCSSVariable = (nameProp, includeVar = !0) => {
      if (process.env.NODE_ENV === "development" && (!nameProp || typeof nameProp != "string"))
        throw new Error(`createCSSVariable expected string, got: ${nameProp}`);
      let name = (0, import_helpers.simpleHash)(nameProp, 60);
      return includeVar ? `var(--${name})` : name;
    };
  }
});

// ../web/dist/cjs/helpers/insertStyleRule.native.js
var require_insertStyleRule_native = __commonJS({
  "../web/dist/cjs/helpers/insertStyleRule.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), insertStyleRule_exports = {};
    __export2(insertStyleRule_exports, {
      getAllRules: () => getAllRules,
      getAllSelectors: () => getAllSelectors,
      getAllTransforms: () => getAllTransforms,
      insertStyleRules: () => insertStyleRules,
      insertedTransforms: () => insertedTransforms,
      listenForSheetChanges: () => listenForSheetChanges,
      scanAllSheets: () => scanAllSheets,
      shouldInsertStyleRules: () => shouldInsertStyleRules,
      updateRules: () => updateRules
    });
    module2.exports = __toCommonJS2(insertStyleRule_exports);
    var import_constants = require_index_native2(), import_createVariable = require_createVariable_native(), scannedCache = /* @__PURE__ */ new WeakMap(), totalSelectorsInserted = /* @__PURE__ */ new Map(), allSelectors = {}, allRules = {}, insertedTransforms = {}, getAllSelectors = () => allSelectors, getAllRules = () => Object.values(allRules), getAllTransforms = () => insertedTransforms;
    function addTransform(identifier, css, rule) {
      let s = css.indexOf("transform:");
      if (s === -1) {
        process.env.NODE_ENV === "development" && console.error(`\u274C Invalid transform, likely used deg/% improperly ${identifier}`);
        return;
      }
      let startI = s + 10, endI = css.indexOf(";"), value = css.slice(startI, endI);
      if (!insertedTransforms[identifier])
        return insertedTransforms[identifier] = value, !0;
    }
    function listenForSheetChanges() {
      import_constants.isClient && new MutationObserver((entries) => {
        for (let entry of entries)
          if (entry instanceof HTMLStyleElement && entry.sheet || entry instanceof HTMLLinkElement && entry.href.endsWith(".css")) {
            scanAllSheets();
            break;
          }
      }).observe(document.head, {
        childList: !0
      });
    }
    var lastScannedSheets = null;
    function scanAllSheets(collectThemes = !1, tokens) {
      if (process.env.NODE_ENV === "test" || !import_constants.isClient)
        return;
      let themes, sheets = document.styleSheets || [], prev = lastScannedSheets, current = new Set(sheets);
      if (document.styleSheets) {
        for (let sheet2 of current)
          if (sheet2) {
            let out = updateSheetStyles(sheet2, !1, collectThemes, tokens);
            out && (themes = out);
          }
        lastScannedSheets = current;
      }
      if (prev)
        for (let sheet2 of prev)
          sheet2 && !current.has(sheet2) && updateSheetStyles(sheet2, !0);
      return themes;
    }
    function track(id, remove = !1) {
      let next = (totalSelectorsInserted.get(id) || 0) + (remove ? -1 : 1);
      return totalSelectorsInserted.set(id, next), next;
    }
    var bailAfterEnv = process.env.TAMAGUI_BAIL_AFTER_SCANNING_X_CSS_RULES, bailAfter = bailAfterEnv ? +bailAfterEnv : 250;
    function updateSheetStyles(sheet2, remove = !1, collectThemes = !1, tokens) {
      var _a, _b;
      let rules;
      try {
        if (rules = sheet2.cssRules, !rules)
          return;
      } catch {
        return;
      }
      let firstSelector = (_a = getTamaguiSelector(rules[0], collectThemes)) == null ? void 0 : _a[0], lastSelector = (_b = getTamaguiSelector(rules[rules.length - 1], collectThemes)) == null ? void 0 : _b[0], cacheKey = `${rules.length}${firstSelector}${lastSelector}`, lastScanned = scannedCache.get(sheet2);
      if (!remove && lastScanned === cacheKey)
        return;
      let len = rules.length, fails = 0, dedupedThemes;
      for (let i = 0; i < len; i++) {
        let rule = rules[i];
        if (!(rule instanceof CSSStyleRule))
          continue;
        let response = getTamaguiSelector(rule, collectThemes);
        if (response)
          fails = 0;
        else {
          if (fails++, fails > bailAfter)
            return;
          continue;
        }
        let [identifier, cssRule, isTheme] = response;
        if (isTheme) {
          let deduped = addThemesFromCSS(cssRule, tokens);
          deduped && (dedupedThemes ||= [], dedupedThemes.push(deduped));
          continue;
        }
        let total = track(identifier, remove);
        remove ? total === 0 && delete allSelectors[identifier] : identifier in allSelectors || (!identifier.startsWith("_transform") || addTransform(identifier, cssRule.cssText, cssRule)) && (allSelectors[identifier] = cssRule.cssText);
      }
      return scannedCache.set(sheet2, cacheKey), dedupedThemes;
    }
    var colorVarToVal, rootComputedStyle = null;
    function addThemesFromCSS(cssStyleRule, tokens) {
      let selectors = cssStyleRule.selectorText.split(",");
      if (!selectors.length)
        return;
      if (tokens && !colorVarToVal) {
        colorVarToVal = {};
        for (let key in tokens.color) {
          let token = tokens.color[key];
          colorVarToVal[token.name] = token.val;
        }
      }
      let rules = (cssStyleRule.cssText || "").slice(cssStyleRule.selectorText.length + 2, -1).trim().split(";"), values = {};
      for (let rule of rules) {
        let sepI = rule.indexOf(":");
        if (sepI === -1)
          continue;
        let key = rule.slice(rule.indexOf("--") + 2, sepI), val = rule.slice(sepI + 2), value;
        if (val[3] === "(") {
          let varName = val.slice(6, -1), tokenVal = colorVarToVal[varName];
          tokenVal ? value = tokenVal : (rootComputedStyle ||= getComputedStyle(document.body), value = rootComputedStyle.getPropertyValue("--" + varName));
        } else
          value = val;
        values[key] = (0, import_createVariable.createVariable)(
          {
            key,
            name: key,
            val: value
          },
          !0
        );
      }
      let dedupedEntry = {
        names: [],
        theme: values
      };
      for (let selector of selectors) {
        let scheme = selector.includes("t_dark") ? "dark" : selector.includes("t_light") ? "light" : "", name = selector.slice(selector.lastIndexOf(".t_") + 3);
        name.startsWith(scheme) && (name = name.slice(scheme.length + 1)), scheme === name && (scheme = "");
        let themeName = `${scheme}${scheme && name ? "_" : ""}${name}`;
        dedupedEntry.names.includes(themeName) || dedupedEntry.names.push(themeName);
      }
      return dedupedEntry;
    }
    function getTamaguiSelector(rule, collectThemes = !1) {
      if (rule instanceof CSSStyleRule) {
        let text = rule.selectorText;
        if (text[0] === ":" && text[1] === "r") {
          if (text.startsWith(":root ._"))
            return [getIdentifierFromTamaguiSelector(text), rule];
          if (collectThemes && (text.startsWith(":root.t_") || text.startsWith(":root .t_")))
            return [
              text.slice(0, 20),
              // just used as uid
              rule,
              !0
            ];
        }
      } else if (rule instanceof CSSMediaRule)
        return rule.cssRules.length > 1 ? void 0 : getTamaguiSelector(rule.cssRules[0]);
    }
    var getIdentifierFromTamaguiSelector = (selector) => {
      let res = selector.slice(7);
      return selector.includes(":") ? res.replace(/:[a-z]+$/, "") : res;
    }, sheet = import_constants.isClient ? document.head.appendChild(document.createElement("style")).sheet : null;
    function updateRules(identifier, rules) {
      return identifier in allRules ? !1 : (allRules[identifier] = rules.join(" "), identifier.startsWith("_transform") ? addTransform(identifier, rules[0]) : !0);
    }
    function insertStyleRules(rulesToInsert) {
      if (!(!rulesToInsert.length || !sheet)) {
        for (let { identifier, rules } of rulesToInsert)
          if (shouldInsertStyleRules(identifier)) {
            allSelectors[identifier] = rules.join(`
`), track(identifier), updateRules(identifier, rules);
            for (let rule of rules)
              if (process.env.NODE_ENV === "production")
                sheet.insertRule(rule, sheet.cssRules.length);
              else
                try {
                  sheet.insertRule(rule, sheet.cssRules.length);
                } catch (err) {
                  console.groupCollapsed(
                    `Error inserting rule into CSSStyleSheet: ${String(err)}`
                  ), console.info({ rule, rulesToInsert }), console.trace(), console.groupEnd();
                }
          }
      }
    }
    function shouldInsertStyleRules(identifier) {
      if (process.env.IS_STATIC === "is_static")
        return !0;
      let total = totalSelectorsInserted.get(identifier);
      return process.env.NODE_ENV === "development" && totalSelectorsInserted.size > +(process.env.TAMAGUI_STYLE_INSERTION_WARNING_LIMIT || 5e4) && console.warn(
        'Warning: inserting many CSS rules, you may be animating something and generating many CSS insertions, which can degrade performance. Instead, try using the "disableClassName" property on elements that change styles often. To disable this warning set TAMAGUI_STYLE_INSERTION_WARNING_LIMIT from 50000 to something higher'
      ), total === void 0 || total < 2;
    }
  }
});

// ../web/dist/cjs/helpers/createProxy.native.js
var require_createProxy_native = __commonJS({
  "../web/dist/cjs/helpers/createProxy.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createProxy_exports = {};
    __export2(createProxy_exports, {
      createProxy: () => createProxy
    });
    module2.exports = __toCommonJS2(createProxy_exports);
    function createProxy(target, handler) {
      return process.env.NODE_ENV === "development" && (typeof target != "object" || !target) && console.warn(
        "Invalid object given for proxy:",
        target,
        `
  
  This can be due to a missing theme or configuration given to Tamagui.`,
        new Error().stack
      ), new Proxy(target || {}, handler);
    }
  }
});

// ../web/dist/cjs/helpers/matchMedia.native.js
var require_matchMedia_native = __commonJS({
  "../web/dist/cjs/helpers/matchMedia.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), matchMedia_native_exports = {};
    __export2(matchMedia_native_exports, {
      matchMedia: () => matchMedia2,
      setupMatchMedia: () => setupMatchMedia
    });
    module2.exports = __toCommonJS2(matchMedia_native_exports);
    var matchMediaImpl = matchMediaFallback, matchMedia2 = (...args) => matchMediaImpl(...args);
    function matchMediaFallback(query) {
      return process.env.NODE_ENV === "development" && console.warn("warning: matchMedia implementation is not provided."), {
        match: (a, b) => !1,
        addListener: () => {
        },
        removeListener: () => {
        },
        matches: !1
      };
    }
    function setupMatchMedia(_) {
      matchMediaImpl = _, globalThis.matchMedia = _;
    }
  }
});

// ../web/dist/cjs/helpers/pseudoDescriptors.native.js
var require_pseudoDescriptors_native = __commonJS({
  "../web/dist/cjs/helpers/pseudoDescriptors.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), pseudoDescriptors_exports = {};
    __export2(pseudoDescriptors_exports, {
      pseudoDescriptors: () => pseudoDescriptors,
      pseudoDescriptorsBase: () => pseudoDescriptorsBase,
      pseudoPriorities: () => pseudoPriorities
    });
    module2.exports = __toCommonJS2(pseudoDescriptors_exports);
    var pseudoDescriptorsBase = {
      // order of keys here important! in priority order
      hoverStyle: {
        name: "hover",
        priority: 1
      },
      pressStyle: {
        name: "active",
        stateKey: "press",
        priority: 2
      },
      focusStyle: {
        name: "focus",
        priority: 3
      }
    }, pseudoPriorities = {
      hover: 1,
      press: 2,
      focus: 3
    }, pseudoDescriptors = {
      ...pseudoDescriptorsBase,
      enterStyle: {
        name: "enter",
        stateKey: "unmounted",
        priority: 4
      },
      exitStyle: {
        name: "exit",
        priority: 5
      }
    };
  }
});

// ../web/dist/cjs/helpers/objectIdentityKey.native.js
var require_objectIdentityKey_native = __commonJS({
  "../web/dist/cjs/helpers/objectIdentityKey.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), objectIdentityKey_exports = {};
    __export2(objectIdentityKey_exports, {
      objectIdentityKey: () => objectIdentityKey
    });
    module2.exports = __toCommonJS2(objectIdentityKey_exports);
    function objectIdentityKey(obj) {
      let k = "";
      for (let key in obj) {
        k += key;
        let arg = obj[key], type = typeof arg;
        if (!arg || type !== "object")
          k += type + arg;
        else if (cache.has(arg))
          k += cache.get(arg);
        else {
          let v = Math.random();
          cache.set(arg, v), k += v;
        }
      }
      return k;
    }
    var cache = /* @__PURE__ */ new WeakMap();
  }
});

// ../web/dist/cjs/helpers/createStyledContext.native.js
var require_createStyledContext_native = __commonJS({
  "../web/dist/cjs/helpers/createStyledContext.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createStyledContext_exports = {};
    __export2(createStyledContext_exports, {
      createStyledContext: () => createStyledContext2
    });
    module2.exports = __toCommonJS2(createStyledContext_exports);
    var import_react2 = require("react"), import_objectIdentityKey = require_objectIdentityKey_native(), import_jsx_runtime6 = require("react/jsx-runtime");
    function createStyledContext2(defaultValues) {
      let OGContext = (0, import_react2.createContext)(defaultValues), OGProvider2 = OGContext.Provider, Context = OGContext, scopedContexts = /* @__PURE__ */ new Map(), Provider = ({
        children,
        scope,
        ...values
      }) => {
        let value = (0, import_react2.useMemo)(() => ({
          // this ! is a workaround for ts error
          ...defaultValues,
          ...values
        }), [(0, import_objectIdentityKey.objectIdentityKey)(values)]), Provider2 = OGProvider2;
        if (scope) {
          let ScopedContext = scopedContexts.get(scope);
          ScopedContext || (ScopedContext = (0, import_react2.createContext)(defaultValues), scopedContexts.set(scope, ScopedContext)), Provider2 = ScopedContext.Provider;
        }
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Provider2, { value, children });
      }, useStyledContext = (scope) => {
        let context = scope ? scopedContexts.get(scope) : OGContext;
        return (0, import_react2.useContext)(context);
      };
      return Context.Provider = Provider, Context.props = defaultValues, Context.context = OGContext, Context.useStyledContext = useStyledContext, Context;
    }
  }
});

// ../web/dist/cjs/contexts/ComponentContext.native.js
var require_ComponentContext_native = __commonJS({
  "../web/dist/cjs/contexts/ComponentContext.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), ComponentContext_exports = {};
    __export2(ComponentContext_exports, {
      ComponentContext: () => ComponentContext2
    });
    module2.exports = __toCommonJS2(ComponentContext_exports);
    var import_createStyledContext = require_createStyledContext_native(), listeners = /* @__PURE__ */ new Set(), ComponentContext2 = (0, import_createStyledContext.createStyledContext)({
      disableSSR: void 0,
      inText: !1,
      language: null,
      animationDriver: null,
      groups: {
        emit: (name, state) => {
          listeners.forEach((l) => l(name, state));
        },
        subscribe(cb) {
          return listeners.add(cb), () => {
            listeners.delete(cb);
          };
        },
        state: {}
      }
    });
  }
});

// ../web/dist/cjs/hooks/useDisableSSR.native.js
var require_useDisableSSR_native = __commonJS({
  "../web/dist/cjs/hooks/useDisableSSR.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useDisableSSR_exports = {};
    __export2(useDisableSSR_exports, {
      getDisableSSR: () => getDisableSSR,
      useDisableSSR: () => useDisableSSR
    });
    module2.exports = __toCommonJS2(useDisableSSR_exports);
    var import_react2 = require("react"), import_config = require_config_native(), import_ComponentContext = require_ComponentContext_native();
    function useDisableSSR() {
      let componentContext = (0, import_react2.useContext)(import_ComponentContext.ComponentContext);
      return getDisableSSR(componentContext);
    }
    function getDisableSSR(componentContext) {
      return componentContext.disableSSR ?? (0, import_config.getConfig)().disableSSR;
    }
  }
});

// ../web/dist/cjs/hooks/useMedia.native.js
var require_useMedia_native = __commonJS({
  "../web/dist/cjs/hooks/useMedia.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useMedia_exports = {};
    __export2(useMedia_exports, {
      configureMedia: () => configureMedia2,
      getMedia: () => getMedia3,
      getMediaImportanceIfMoreImportant: () => getMediaImportanceIfMoreImportant,
      getMediaKeyImportance: () => getMediaKeyImportance,
      isMediaKey: () => isMediaKey,
      mediaKeyMatch: () => mediaKeyMatch,
      mediaKeyToQuery: () => mediaKeyToQuery,
      mediaKeys: () => mediaKeys,
      mediaObjectToString: () => mediaObjectToString3,
      mediaQueryConfig: () => mediaQueryConfig3,
      mediaState: () => mediaState3,
      mergeMediaByImportance: () => mergeMediaByImportance,
      setMediaShouldUpdate: () => setMediaShouldUpdate,
      setupMediaListeners: () => setupMediaListeners,
      useMedia: () => useMedia3,
      useMediaListeners: () => useMediaListeners
    });
    module2.exports = __toCommonJS2(useMedia_exports);
    var import_constants = require_index_native2(), import_react2 = require("react"), import_config = require_config_native(), import_createProxy = require_createProxy_native(), import_matchMedia = require_matchMedia_native(), import_pseudoDescriptors = require_pseudoDescriptors_native(), import_useDisableSSR = require_useDisableSSR_native(), mediaState3 = (
      // development only safeguard
      process.env.NODE_ENV === "development" ? (0, import_createProxy.createProxy)(
        {},
        {
          get(target, key) {
            if (typeof key == "string" && key[0] === "$" && // dont error on $$typeof
            key[1] !== "$")
              throw new Error(`Access mediaState should not use "$": ${key}`);
            return Reflect.get(target, key);
          }
        }
      ) : {}
    ), mediaQueryConfig3 = {}, getMedia3 = () => mediaState3, mediaKeys = /* @__PURE__ */ new Set(), isMediaKey = (key) => {
      if (mediaKeys.has(key))
        return !0;
      if (key[0] === "$") {
        if (key.startsWith("$platform-"))
          return "platform";
        if (key.startsWith("$theme-"))
          return "theme";
        if (key.startsWith("$group-"))
          return "group";
      }
      return !1;
    }, initState, defaultMediaImportance = Object.keys(import_pseudoDescriptors.pseudoDescriptors).length, mediaKeysOrdered, getMediaKeyImportance = (key) => {
      if (process.env.NODE_ENV === "development" && key[0] === "$")
        throw new Error("use short key");
      return (0, import_config.getConfig)().settings.mediaPropOrder ? defaultMediaImportance : mediaKeysOrdered.indexOf(key) + 100;
    }, dispose = /* @__PURE__ */ new Set(), mediaVersion = 0, configureMedia2 = (config) => {
      let { media, mediaQueryDefaultActive } = config;
      if (media) {
        mediaVersion++;
        for (let key in media)
          mediaState3[key] = (mediaQueryDefaultActive == null ? void 0 : mediaQueryDefaultActive[key]) || !1, mediaKeys.add(`$${key}`);
        Object.assign(mediaQueryConfig3, media), initState = { ...mediaState3 }, mediaKeysOrdered = Object.keys(media), config.disableSSR ? setupMediaListeners() : updateCurrentState();
      }
    };
    function unlisten() {
      dispose.forEach((cb) => cb()), dispose.clear();
    }
    var setupVersion = -1;
    function setupMediaListeners() {
      if (setupVersion !== mediaVersion) {
        setupVersion = mediaVersion, unlisten();
        for (let key in mediaQueryConfig3) {
          let update2 = function() {
            let next = !!getMatch().matches;
            next !== mediaState3[key] && (mediaState3 = { ...mediaState3, [key]: next }, updateCurrentState());
          };
          var update = update2;
          let str = mediaObjectToString3(mediaQueryConfig3[key], key), getMatch = () => (0, import_matchMedia.matchMedia)(str), match = getMatch();
          if (!match)
            throw new Error("\u26A0\uFE0F No match");
          match.addListener(update2), dispose.add(() => {
            match.removeListener(update2);
          }), update2();
        }
      }
    }
    function useMediaListeners(config) {
      config.disableSSR || (0, import_constants.useIsomorphicLayoutEffect)(() => {
        setupMediaListeners();
      }, []);
    }
    var listeners = /* @__PURE__ */ new Set(), flushing = !1, flushVersion = -1;
    function updateCurrentState() {
      flushing && flushVersion === mediaVersion || (flushVersion = mediaVersion, flushing = !0, Promise.resolve().then(() => {
        flushing = !1, listeners.forEach((cb) => cb(mediaState3));
      }));
    }
    var shouldUpdate = /* @__PURE__ */ new WeakMap();
    function setMediaShouldUpdate(ref, props) {
      return shouldUpdate.set(ref, props);
    }
    function subscribe(subscriber) {
      return listeners.add(subscriber), () => listeners.delete(subscriber);
    }
    function useMedia3(uid, componentContext) {
      let internal = (0, import_react2.useRef)(), initialState = ((componentContext ? (0, import_useDisableSSR.getDisableSSR)(componentContext) : (0, import_useDisableSSR.useDisableSSR)()) ? mediaState3 : initState) || {}, state = (0, import_react2.useSyncExternalStore)(
        subscribe,
        () => {
          if (!internal.current)
            return initialState;
          let { touched, prev } = internal.current, componentState = uid ? shouldUpdate.get(uid) : void 0;
          if (componentState && componentState.enabled === !1)
            return prev;
          let testKeys = (componentState == null ? void 0 : componentState.keys) ?? ((!componentState || componentState.enabled) && touched ? [...touched] : null);
          return !testKeys || testKeys != null && testKeys.every((key) => mediaState3[key] === prev[key]) ? prev : (internal.current.prev = mediaState3, mediaState3);
        },
        () => initialState
      );
      return new Proxy(state, {
        get(_, key) {
          return typeof key == "string" && (internal.current ||= { prev: initialState }, internal.current.touched ||= /* @__PURE__ */ new Set(), internal.current.touched.add(key)), Reflect.get(state, key);
        }
      });
    }
    var getMediaImportanceIfMoreImportant = (mediaKey, key, importancesUsed, isSizeMedia) => {
      let conf = (0, import_config.getConfig)(), importance = isSizeMedia && !conf.settings.mediaPropOrder ? getMediaKeyImportance(mediaKey) : defaultMediaImportance;
      return !importancesUsed[key] || importance > importancesUsed[key] ? importance : null;
    };
    function mergeMediaByImportance(onto, mediaKey, key, value, importancesUsed, isSizeMedia, importanceBump) {
      let importance = getMediaImportanceIfMoreImportant(
        mediaKey,
        key,
        importancesUsed,
        isSizeMedia
      );
      return importanceBump && (importance = (importance || 0) + importanceBump), importance === null ? !1 : (importancesUsed[key] = importance, onto[key] = value, !0);
    }
    function camelToHyphen(str) {
      return str.replace(/[A-Z]/g, (m) => `-${m.toLowerCase()}`).toLowerCase();
    }
    var cache = /* @__PURE__ */ new WeakMap(), cachedMediaKeyToQuery = {};
    function mediaObjectToString3(query, key) {
      if (typeof query == "string")
        return query;
      if (cache.has(query))
        return cache.get(query);
      let res = Object.entries(query).map(([feature, value]) => (feature = camelToHyphen(feature), typeof value == "string" ? `(${feature}: ${value})` : (typeof value == "number" && /[height|width]$/.test(feature) && (value = `${value}px`), `(${feature}: ${value})`))).join(" and ");
      return key && (cachedMediaKeyToQuery[key] = res), cache.set(query, res), res;
    }
    function mediaKeyToQuery(key) {
      return cachedMediaKeyToQuery[key] || mediaObjectToString3(mediaQueryConfig3[key], key);
    }
    function mediaKeyMatch(key, dimensions) {
      let mediaQueries = mediaQueryConfig3[key];
      return Object.keys(mediaQueries).every((query) => {
        let expectedVal = +mediaQueries[query], isMax = query.startsWith("max"), isWidth = query.endsWith("Width"), givenVal = dimensions[isWidth ? "width" : "height"];
        return isMax ? givenVal < expectedVal : givenVal > expectedVal;
      });
    }
  }
});

// ../web/dist/cjs/Tamagui.native.js
var require_Tamagui_native = __commonJS({
  "../web/dist/cjs/Tamagui.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Tamagui_exports = {};
    __export2(Tamagui_exports, {
      Tamagui: () => Tamagui,
      getValueFromIdentifier: () => getValueFromIdentifier,
      setIdentifierValue: () => setIdentifierValue
    });
    module2.exports = __toCommonJS2(Tamagui_exports);
    var Helpers = __toESM2(require_index_native4()), import_config = require_config_native(), import_insertStyleRule = require_insertStyleRule_native(), import_useMedia = require_useMedia_native(), TamaguiManager = class {
      constructor() {
        this.Helpers = Helpers;
      }
      get mediaState() {
        return { ...import_useMedia.mediaState };
      }
      get config() {
        return (0, import_config.getConfig)();
      }
      get insertedRules() {
        return (0, import_insertStyleRule.getAllRules)();
      }
      get allSelectors() {
        return (0, import_insertStyleRule.getAllSelectors)();
      }
      get allTransforms() {
        return (0, import_insertStyleRule.getAllTransforms)();
      }
      get identifierToValue() {
        return identifierToValue;
      }
    }, Tamagui = new TamaguiManager(), identifierToValue = /* @__PURE__ */ new Map(), getValueFromIdentifier = (identifier) => identifierToValue.get(identifier), setIdentifierValue = (identifier, value) => {
      identifierToValue.set(identifier, value);
    };
  }
});

// ../compose-refs/dist/cjs/compose-refs.native.js
var require_compose_refs_native = __commonJS({
  "../compose-refs/dist/cjs/compose-refs.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), compose_refs_exports = {};
    __export2(compose_refs_exports, {
      composeRefs: () => composeRefs,
      useComposedRefs: () => useComposedRefs
    });
    module2.exports = __toCommonJS2(compose_refs_exports);
    var React2 = __toESM2(require("react"));
    function setRef(ref, value) {
      typeof ref == "function" ? ref(value) : ref && (ref.current = value);
    }
    function composeRefs(...refs) {
      return (node) => refs.forEach((ref) => setRef(ref, node));
    }
    function useComposedRefs(...refs) {
      return React2.useCallback(composeRefs(...refs), refs);
    }
  }
});

// ../compose-refs/dist/cjs/index.native.js
var require_index_native5 = __commonJS({
  "../compose-refs/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_compose_refs_native(), module2.exports);
  }
});

// ../use-did-finish-ssr/dist/cjs/index.native.js
var require_index_native6 = __commonJS({
  "../use-did-finish-ssr/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      useClientValue: () => useClientValue,
      useDidFinishSSR: () => useDidFinishSSR2
    });
    module2.exports = __toCommonJS2(src_exports2);
    var import_react2 = require("react");
    function useDidFinishSSR2(value) {
      return value ?? !0;
    }
    function useClientValue(value) {
      return useDidFinishSSR2() ? typeof value == "function" ? value() : value : void 0;
    }
  }
});

// ../web/dist/cjs/constants/constants.native.js
var require_constants_native2 = __commonJS({
  "../web/dist/cjs/constants/constants.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), constants_exports = {};
    __export2(constants_exports, {
      THEME_CLASSNAME_PREFIX: () => THEME_CLASSNAME_PREFIX,
      THEME_NAME_SEPARATOR: () => THEME_NAME_SEPARATOR,
      stackDefaultStyles: () => stackDefaultStyles
    });
    module2.exports = __toCommonJS2(constants_exports);
    var THEME_NAME_SEPARATOR = "_", THEME_CLASSNAME_PREFIX = "t_", stackDefaultStyles = {
      alignItems: "stretch"
    };
  }
});

// ../web/dist/cjs/defaultComponentState.native.js
var require_defaultComponentState_native = __commonJS({
  "../web/dist/cjs/defaultComponentState.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), defaultComponentState_exports = {};
    __export2(defaultComponentState_exports, {
      defaultComponentState: () => defaultComponentState,
      defaultComponentStateMounted: () => defaultComponentStateMounted,
      defaultComponentStateShouldEnter: () => defaultComponentStateShouldEnter
    });
    module2.exports = __toCommonJS2(defaultComponentState_exports);
    var defaultComponentState = {
      hover: !1,
      press: !1,
      pressIn: !1,
      focus: !1,
      unmounted: !0
    }, defaultComponentStateMounted = {
      ...defaultComponentState,
      unmounted: !1
    }, defaultComponentStateShouldEnter = {
      ...defaultComponentState,
      unmounted: "should-enter"
    };
  }
});

// ../web/dist/cjs/helpers/createShallowSetState.native.js
var require_createShallowSetState_native = __commonJS({
  "../web/dist/cjs/helpers/createShallowSetState.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createShallowSetState_exports = {};
    __export2(createShallowSetState_exports, {
      createShallowSetState: () => createShallowSetState,
      isEqualShallow: () => isEqualShallow,
      mergeIfNotShallowEqual: () => mergeIfNotShallowEqual
    });
    module2.exports = __toCommonJS2(createShallowSetState_exports);
    function createShallowSetState(setter) {
      return (next) => setter((prev) => mergeIfNotShallowEqual(prev, next));
    }
    function mergeIfNotShallowEqual(prev, next) {
      return isEqualShallow(prev, next) ? prev : { ...prev, ...next };
    }
    function isEqualShallow(prev, next) {
      for (let key in next)
        if (prev[key] !== next[key])
          return !1;
      return !0;
    }
  }
});

// ../web/dist/cjs/constants/accessibilityDirectMap.native.js
var require_accessibilityDirectMap_native = __commonJS({
  "../web/dist/cjs/constants/accessibilityDirectMap.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), accessibilityDirectMap_native_exports = {};
    __export2(accessibilityDirectMap_native_exports, {
      accessibilityDirectMap: () => accessibilityDirectMap2,
      accessibilityWebRoleToNativeRole: () => accessibilityWebRoleToNativeRole,
      nativeAccessibilityState: () => nativeAccessibilityState,
      nativeAccessibilityValue: () => nativeAccessibilityValue,
      webToNativeAccessibilityDirectMap: () => webToNativeAccessibilityDirectMap
    });
    module2.exports = __toCommonJS2(accessibilityDirectMap_native_exports);
    var accessibilityDirectMap2 = {}, webToNativeAccessibilityDirectMap = {
      "aria-label": "accessibilityLabel",
      "aria-labelledby": "accessibilityLabelledBy",
      "aria-live": "accessibilityLiveRegion",
      "aria-modal": "accessibilityViewIsModal",
      "aria-hidden": "accessibilityElementsHidden"
    }, nativeAccessibilityValue = {
      "aria-valuemin": "min",
      "aria-valuemax": "max",
      "aria-valuenow": "now",
      "aria-valuetext": "text"
    }, nativeAccessibilityState = {
      "aria-disabled": "disabled",
      "aria-selected": "selected",
      "aria-checked": "checked",
      "aria-busy": "busy",
      "aria-expanded": "expanded"
    }, accessibilityWebRoleToNativeRole = {
      alert: "alert",
      button: "button",
      checkbox: "checkbox",
      combobox: "combobox",
      grid: "grid",
      group: "none",
      heading: "header",
      imagebutton: "imagebutton",
      img: "image",
      keyboardkey: "keyboardkey",
      link: "link",
      menu: "menu",
      menubar: "menubar",
      menuitem: "menuitem",
      none: "none",
      presentation: "none",
      progressbar: "progressbar",
      radio: "radio",
      radiogroup: "radiogroup",
      region: "summary",
      scrollbar: "scrollbar",
      searchbox: "search",
      slider: "adjustable",
      spinbutton: "spinbutton",
      summary: "summary",
      switch: "switch",
      tab: "tab",
      tablist: "tablist",
      text: "text",
      timer: "timer",
      togglebutton: "togglebutton",
      toolbar: "toolbar"
    };
  }
});

// ../web/dist/cjs/constants/isDevTools.native.js
var require_isDevTools_native = __commonJS({
  "../web/dist/cjs/constants/isDevTools.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), isDevTools_exports = {};
    __export2(isDevTools_exports, {
      isDevTools: () => isDevTools
    });
    module2.exports = __toCommonJS2(isDevTools_exports);
    var isDevTools = (() => {
      if (process.env.NODE_ENV === "development")
        try {
          return new Function("try {return this===window;}catch(e){ return false;}")();
        } catch {
        }
      return !1;
    })();
  }
});

// ../web/dist/cjs/helpers/getGroupPropParts.native.js
var require_getGroupPropParts_native = __commonJS({
  "../web/dist/cjs/helpers/getGroupPropParts.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getGroupPropParts_exports = {};
    __export2(getGroupPropParts_exports, {
      getGroupPropParts: () => getGroupPropParts
    });
    module2.exports = __toCommonJS2(getGroupPropParts_exports);
    var import_useMedia = require_useMedia_native();
    function getGroupPropParts(groupProp) {
      let mediaQueries = (0, import_useMedia.getMedia)(), [_, name, part3, part4] = groupProp.split("-"), pseudo, media = part3 in mediaQueries ? part3 : void 0;
      return media ? pseudo = part4 : pseudo = part3, { name, pseudo, media };
    }
  }
});

// ../web/dist/cjs/helpers/createMediaStyle.native.js
var require_createMediaStyle_native = __commonJS({
  "../web/dist/cjs/helpers/createMediaStyle.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createMediaStyle_exports = {};
    __export2(createMediaStyle_exports, {
      MEDIA_SEP: () => MEDIA_SEP,
      createMediaStyle: () => createMediaStyle
    });
    module2.exports = __toCommonJS2(createMediaStyle_exports);
    var import_config = require_config_native(), import_useMedia = require_useMedia_native(), import_getGroupPropParts = require_getGroupPropParts_native(), MEDIA_SEP = "_", prefixes = null, selectors = null, groupPseudoToPseudoCSSMap = {
      press: "active"
    }, createMediaStyle = (styleObject, mediaKeyIn, mediaQueries, type, negate, priority) => {
      let { property, identifier, rules } = styleObject, conf = (0, import_config.getConfig)(), enableMediaPropOrder = conf.settings.mediaPropOrder, isTheme = type === "theme", isPlatform = type === "platform", isGroup = type === "group", isNonWindowMedia = isTheme || isPlatform || isGroup, negKey = negate ? "0" : "", ogPrefix = identifier.slice(0, identifier.indexOf("-") + 1), id = `${ogPrefix}${MEDIA_SEP}${mediaKeyIn.replace("-", "")}${negKey}${MEDIA_SEP}`, styleRule = "", groupMediaKey, containerName, nextIdentifier = identifier.replace(ogPrefix, id), styleInner = rules.map((rule) => rule.replace(identifier, nextIdentifier)).join(";");
      if (isNonWindowMedia) {
        let precedenceImportancePrefix = new Array((priority || 0) + (isGroup ? 1 : 0)).fill(":root").join("");
        if (isTheme || isGroup) {
          let groupInfo = (0, import_getGroupPropParts.getGroupPropParts)(mediaKeyIn), mediaName = groupInfo == null ? void 0 : groupInfo.name;
          groupMediaKey = groupInfo == null ? void 0 : groupInfo.media, isGroup && (containerName = mediaName);
          let name = (isGroup ? "group_" : "") + mediaName, selectorStart = styleInner.indexOf(":root"), selectorEnd = styleInner.lastIndexOf("{"), selector = styleInner.slice(selectorStart, selectorEnd), precedenceSpace = conf.themeClassNameOnRoot && isTheme ? "" : " ", pseudoSelectorName = groupInfo.pseudo ? groupPseudoToPseudoCSSMap[groupInfo.pseudo] || groupInfo.pseudo : void 0, pseudoSelector = pseudoSelectorName ? `:${pseudoSelectorName}` : "", presedencePrefix = `:root${precedenceImportancePrefix}${precedenceSpace}`, mediaSelector = `.t_${name}${pseudoSelector}`, nextSelector = `${presedencePrefix}${mediaSelector} ${selector.replace(
            ":root",
            ""
          )}`;
          styleRule = styleInner.replace(selector, nextSelector);
        } else
          styleRule = `${precedenceImportancePrefix}${styleInner}`;
      }
      if (!isNonWindowMedia || groupMediaKey) {
        if (!selectors) {
          let mediaKeys = Object.keys(mediaQueries);
          selectors = Object.fromEntries(
            mediaKeys.map((key) => [key, (0, import_useMedia.mediaObjectToString)(mediaQueries[key])])
          ), enableMediaPropOrder || (prefixes = Object.fromEntries(
            mediaKeys.map((k, index) => [k, new Array(index + 1).fill(":root").join("")])
          ));
        }
        let mediaKey = groupMediaKey || mediaKeyIn, mediaSelector = selectors[mediaKey], mediaQuery = `${negate ? "not all and" : ""} ${mediaSelector}`, precedenceImportancePrefix = groupMediaKey ? "" : enableMediaPropOrder ? (
          // this new array should be cached
          new Array(priority).fill(":root").join("")
        ) : (
          // @ts-ignore
          prefixes[mediaKey]
        ), prefix = groupMediaKey ? `@container ${containerName}` : "@media";
        groupMediaKey && (styleInner = styleRule), styleInner.includes(prefix) ? styleRule = styleInner.replace("{", ` and ${mediaQuery} {`) : styleRule = `${prefix} ${mediaQuery}{${precedenceImportancePrefix}${styleInner}}`;
      }
      return {
        property,
        rules: [styleRule],
        identifier: nextIdentifier
      };
    };
  }
});

// ../web/dist/cjs/helpers/expandStyle.native.js
var require_expandStyle_native = __commonJS({
  "../web/dist/cjs/helpers/expandStyle.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all2) => {
      for (var name in all2)
        __defProp2(target, name, { get: all2[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), expandStyle_exports = {};
    __export2(expandStyle_exports, {
      expandStyle: () => expandStyle
    });
    module2.exports = __toCommonJS2(expandStyle_exports);
    var import_constants = require_index_native2();
    function expandStyle(key, value) {
      if (!1)
        switch (key) {
          case "textAlignVertical":
          case "writingDirection":
        }
      if (import_constants.isAndroid && key === "elevationAndroid")
        return [["elevation", value]];
      if (key in EXPANSIONS)
        return EXPANSIONS[key].map((key2) => [key2, value]);
    }
    var all = ["Top", "Right", "Bottom", "Left"], horiz = ["Right", "Left"], vert = ["Top", "Bottom"], xy = ["X", "Y"], EXPANSIONS = {
      borderColor: ["TopColor", "RightColor", "BottomColor", "LeftColor"],
      borderRadius: [
        "TopLeftRadius",
        "TopRightRadius",
        "BottomRightRadius",
        "BottomLeftRadius"
      ],
      borderWidth: ["TopWidth", "RightWidth", "BottomWidth", "LeftWidth"],
      margin: all,
      marginHorizontal: horiz,
      marginVertical: vert,
      overscrollBehavior: xy,
      padding: all,
      paddingHorizontal: horiz,
      paddingVertical: vert,
      ...import_constants.isWeb && {
        // react-native only supports borderStyle
        borderStyle: ["TopStyle", "RightStyle", "BottomStyle", "LeftStyle"],
        // react-native doesn't support X / Y
        overflow: xy
      }
    }, _a;
    for (let parent in EXPANSIONS) {
      let prefix = parent.slice(0, ((_a = /[A-Z]/.exec(parent)) == null ? void 0 : _a.index) ?? parent.length);
      EXPANSIONS[parent] = EXPANSIONS[parent].map((k) => `${prefix}${k}`);
    }
  }
});

// ../../node_modules/@react-native/normalize-color/index.js
var require_normalize_color = __commonJS({
  "../../node_modules/@react-native/normalize-color/index.js"(exports, module2) {
    "use strict";
    function normalizeColor(color) {
      if (typeof color == "number")
        return color >>> 0 === color && color >= 0 && color <= 4294967295 ? color : null;
      if (typeof color != "string")
        return null;
      let matchers = getMatchers(), match;
      if (match = matchers.hex6.exec(color))
        return parseInt(match[1] + "ff", 16) >>> 0;
      let colorFromKeyword = normalizeKeyword(color);
      return colorFromKeyword ?? ((match = matchers.rgb.exec(color)) ? (parse255(match[1]) << 24 | // r
      parse255(match[2]) << 16 | // g
      parse255(match[3]) << 8 | // b
      255) >>> // a
      0 : (match = matchers.rgba.exec(color)) ? match[6] !== void 0 ? (parse255(match[6]) << 24 | // r
      parse255(match[7]) << 16 | // g
      parse255(match[8]) << 8 | // b
      parse1(match[9])) >>> // a
      0 : (parse255(match[2]) << 24 | // r
      parse255(match[3]) << 16 | // g
      parse255(match[4]) << 8 | // b
      parse1(match[5])) >>> // a
      0 : (match = matchers.hex3.exec(color)) ? parseInt(
        match[1] + match[1] + // r
        match[2] + match[2] + // g
        match[3] + match[3] + // b
        "ff",
        // a
        16
      ) >>> 0 : (match = matchers.hex8.exec(color)) ? parseInt(match[1], 16) >>> 0 : (match = matchers.hex4.exec(color)) ? parseInt(
        match[1] + match[1] + // r
        match[2] + match[2] + // g
        match[3] + match[3] + // b
        match[4] + match[4],
        // a
        16
      ) >>> 0 : (match = matchers.hsl.exec(color)) ? (hslToRgb(
        parse360(match[1]),
        // h
        parsePercentage(match[2]),
        // s
        parsePercentage(match[3])
        // l
      ) | 255) >>> // a
      0 : (match = matchers.hsla.exec(color)) ? match[6] !== void 0 ? (hslToRgb(
        parse360(match[6]),
        // h
        parsePercentage(match[7]),
        // s
        parsePercentage(match[8])
        // l
      ) | parse1(match[9])) >>> // a
      0 : (hslToRgb(
        parse360(match[2]),
        // h
        parsePercentage(match[3]),
        // s
        parsePercentage(match[4])
        // l
      ) | parse1(match[5])) >>> // a
      0 : (match = matchers.hwb.exec(color)) ? (hwbToRgb(
        parse360(match[1]),
        // h
        parsePercentage(match[2]),
        // w
        parsePercentage(match[3])
        // b
      ) | 255) >>> // a
      0 : null);
    }
    function hue2rgb(p, q, t) {
      return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? p + (q - p) * 6 * t : t < 1 / 2 ? q : t < 2 / 3 ? p + (q - p) * (2 / 3 - t) * 6 : p;
    }
    function hslToRgb(h, s, l) {
      let q = l < 0.5 ? l * (1 + s) : l + s - l * s, p = 2 * l - q, r = hue2rgb(p, q, h + 1 / 3), g = hue2rgb(p, q, h), b = hue2rgb(p, q, h - 1 / 3);
      return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
    }
    function hwbToRgb(h, w, b) {
      if (w + b >= 1) {
        let gray = Math.round(w * 255 / (w + b));
        return gray << 24 | gray << 16 | gray << 8;
      }
      let red = hue2rgb(0, 1, h + 1 / 3) * (1 - w - b) + w, green = hue2rgb(0, 1, h) * (1 - w - b) + w, blue = hue2rgb(0, 1, h - 1 / 3) * (1 - w - b) + w;
      return Math.round(red * 255) << 24 | Math.round(green * 255) << 16 | Math.round(blue * 255) << 8;
    }
    var NUMBER = "[-+]?\\d*\\.?\\d+", PERCENTAGE = NUMBER + "%";
    function call(...args) {
      return "\\(\\s*(" + args.join(")\\s*,?\\s*(") + ")\\s*\\)";
    }
    function callWithSlashSeparator(...args) {
      return "\\(\\s*(" + args.slice(0, args.length - 1).join(")\\s*,?\\s*(") + ")\\s*/\\s*(" + args[args.length - 1] + ")\\s*\\)";
    }
    function commaSeparatedCall(...args) {
      return "\\(\\s*(" + args.join(")\\s*,\\s*(") + ")\\s*\\)";
    }
    var cachedMatchers;
    function getMatchers() {
      return cachedMatchers === void 0 && (cachedMatchers = {
        rgb: new RegExp("rgb" + call(NUMBER, NUMBER, NUMBER)),
        rgba: new RegExp(
          "rgba(" + commaSeparatedCall(NUMBER, NUMBER, NUMBER, NUMBER) + "|" + callWithSlashSeparator(NUMBER, NUMBER, NUMBER, NUMBER) + ")"
        ),
        hsl: new RegExp("hsl" + call(NUMBER, PERCENTAGE, PERCENTAGE)),
        hsla: new RegExp(
          "hsla(" + commaSeparatedCall(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER) + "|" + callWithSlashSeparator(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER) + ")"
        ),
        hwb: new RegExp("hwb" + call(NUMBER, PERCENTAGE, PERCENTAGE)),
        hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#([0-9a-fA-F]{6})$/,
        hex8: /^#([0-9a-fA-F]{8})$/
      }), cachedMatchers;
    }
    function parse255(str) {
      let int = parseInt(str, 10);
      return int < 0 ? 0 : int > 255 ? 255 : int;
    }
    function parse360(str) {
      return (parseFloat(str) % 360 + 360) % 360 / 360;
    }
    function parse1(str) {
      let num = parseFloat(str);
      return num < 0 ? 0 : num > 1 ? 255 : Math.round(num * 255);
    }
    function parsePercentage(str) {
      let int = parseFloat(str);
      return int < 0 ? 0 : int > 100 ? 1 : int / 100;
    }
    function normalizeKeyword(name) {
      switch (name) {
        case "transparent":
          return 0;
        case "aliceblue":
          return 4042850303;
        case "antiquewhite":
          return 4209760255;
        case "aqua":
          return 16777215;
        case "aquamarine":
          return 2147472639;
        case "azure":
          return 4043309055;
        case "beige":
          return 4126530815;
        case "bisque":
          return 4293182719;
        case "black":
          return 255;
        case "blanchedalmond":
          return 4293643775;
        case "blue":
          return 65535;
        case "blueviolet":
          return 2318131967;
        case "brown":
          return 2771004159;
        case "burlywood":
          return 3736635391;
        case "burntsienna":
          return 3934150143;
        case "cadetblue":
          return 1604231423;
        case "chartreuse":
          return 2147418367;
        case "chocolate":
          return 3530104575;
        case "coral":
          return 4286533887;
        case "cornflowerblue":
          return 1687547391;
        case "cornsilk":
          return 4294499583;
        case "crimson":
          return 3692313855;
        case "cyan":
          return 16777215;
        case "darkblue":
          return 35839;
        case "darkcyan":
          return 9145343;
        case "darkgoldenrod":
          return 3095792639;
        case "darkgray":
          return 2846468607;
        case "darkgreen":
          return 6553855;
        case "darkgrey":
          return 2846468607;
        case "darkkhaki":
          return 3182914559;
        case "darkmagenta":
          return 2332068863;
        case "darkolivegreen":
          return 1433087999;
        case "darkorange":
          return 4287365375;
        case "darkorchid":
          return 2570243327;
        case "darkred":
          return 2332033279;
        case "darksalmon":
          return 3918953215;
        case "darkseagreen":
          return 2411499519;
        case "darkslateblue":
          return 1211993087;
        case "darkslategray":
          return 793726975;
        case "darkslategrey":
          return 793726975;
        case "darkturquoise":
          return 13554175;
        case "darkviolet":
          return 2483082239;
        case "deeppink":
          return 4279538687;
        case "deepskyblue":
          return 12582911;
        case "dimgray":
          return 1768516095;
        case "dimgrey":
          return 1768516095;
        case "dodgerblue":
          return 512819199;
        case "firebrick":
          return 2988581631;
        case "floralwhite":
          return 4294635775;
        case "forestgreen":
          return 579543807;
        case "fuchsia":
          return 4278255615;
        case "gainsboro":
          return 3705462015;
        case "ghostwhite":
          return 4177068031;
        case "gold":
          return 4292280575;
        case "goldenrod":
          return 3668254975;
        case "gray":
          return 2155905279;
        case "green":
          return 8388863;
        case "greenyellow":
          return 2919182335;
        case "grey":
          return 2155905279;
        case "honeydew":
          return 4043305215;
        case "hotpink":
          return 4285117695;
        case "indianred":
          return 3445382399;
        case "indigo":
          return 1258324735;
        case "ivory":
          return 4294963455;
        case "khaki":
          return 4041641215;
        case "lavender":
          return 3873897215;
        case "lavenderblush":
          return 4293981695;
        case "lawngreen":
          return 2096890111;
        case "lemonchiffon":
          return 4294626815;
        case "lightblue":
          return 2916673279;
        case "lightcoral":
          return 4034953471;
        case "lightcyan":
          return 3774873599;
        case "lightgoldenrodyellow":
          return 4210742015;
        case "lightgray":
          return 3553874943;
        case "lightgreen":
          return 2431553791;
        case "lightgrey":
          return 3553874943;
        case "lightpink":
          return 4290167295;
        case "lightsalmon":
          return 4288707327;
        case "lightseagreen":
          return 548580095;
        case "lightskyblue":
          return 2278488831;
        case "lightslategray":
          return 2005441023;
        case "lightslategrey":
          return 2005441023;
        case "lightsteelblue":
          return 2965692159;
        case "lightyellow":
          return 4294959359;
        case "lime":
          return 16711935;
        case "limegreen":
          return 852308735;
        case "linen":
          return 4210091775;
        case "magenta":
          return 4278255615;
        case "maroon":
          return 2147483903;
        case "mediumaquamarine":
          return 1724754687;
        case "mediumblue":
          return 52735;
        case "mediumorchid":
          return 3126187007;
        case "mediumpurple":
          return 2473647103;
        case "mediumseagreen":
          return 1018393087;
        case "mediumslateblue":
          return 2070474495;
        case "mediumspringgreen":
          return 16423679;
        case "mediumturquoise":
          return 1221709055;
        case "mediumvioletred":
          return 3340076543;
        case "midnightblue":
          return 421097727;
        case "mintcream":
          return 4127193855;
        case "mistyrose":
          return 4293190143;
        case "moccasin":
          return 4293178879;
        case "navajowhite":
          return 4292783615;
        case "navy":
          return 33023;
        case "oldlace":
          return 4260751103;
        case "olive":
          return 2155872511;
        case "olivedrab":
          return 1804477439;
        case "orange":
          return 4289003775;
        case "orangered":
          return 4282712319;
        case "orchid":
          return 3664828159;
        case "palegoldenrod":
          return 4008225535;
        case "palegreen":
          return 2566625535;
        case "paleturquoise":
          return 2951671551;
        case "palevioletred":
          return 3681588223;
        case "papayawhip":
          return 4293907967;
        case "peachpuff":
          return 4292524543;
        case "peru":
          return 3448061951;
        case "pink":
          return 4290825215;
        case "plum":
          return 3718307327;
        case "powderblue":
          return 2967529215;
        case "purple":
          return 2147516671;
        case "rebeccapurple":
          return 1714657791;
        case "red":
          return 4278190335;
        case "rosybrown":
          return 3163525119;
        case "royalblue":
          return 1097458175;
        case "saddlebrown":
          return 2336560127;
        case "salmon":
          return 4202722047;
        case "sandybrown":
          return 4104413439;
        case "seagreen":
          return 780883967;
        case "seashell":
          return 4294307583;
        case "sienna":
          return 2689740287;
        case "silver":
          return 3233857791;
        case "skyblue":
          return 2278484991;
        case "slateblue":
          return 1784335871;
        case "slategray":
          return 1887473919;
        case "slategrey":
          return 1887473919;
        case "snow":
          return 4294638335;
        case "springgreen":
          return 16744447;
        case "steelblue":
          return 1182971135;
        case "tan":
          return 3535047935;
        case "teal":
          return 8421631;
        case "thistle":
          return 3636451583;
        case "tomato":
          return 4284696575;
        case "turquoise":
          return 1088475391;
        case "violet":
          return 4001558271;
        case "wheat":
          return 4125012991;
        case "white":
          return 4294967295;
        case "whitesmoke":
          return 4126537215;
        case "yellow":
          return 4294902015;
        case "yellowgreen":
          return 2597139199;
      }
      return null;
    }
    module2.exports = normalizeColor;
  }
});

// ../normalize-css-color/dist/cjs/index.native.js
var require_index_native7 = __commonJS({
  "../normalize-css-color/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      default: () => src_default,
      normalizeCSSColor: () => normalizeCSSColor,
      rgba: () => rgba2
    });
    module2.exports = __toCommonJS2(src_exports2);
    var normalizeColor = __toESM2(require_normalize_color()), norm = normalizeColor.default || normalizeColor, normalizeCSSColor = norm;
    function rgba2(colorInt) {
      var r = Math.round((colorInt & 4278190080) >>> 24), g = Math.round((colorInt & 16711680) >>> 16), b = Math.round((colorInt & 65280) >>> 8), a = ((colorInt & 255) >>> 0) / 255;
      return {
        r,
        g,
        b,
        a
      };
    }
    var src_default = normalizeCSSColor;
  }
});

// ../web/dist/cjs/helpers/defaultOffset.native.js
var require_defaultOffset_native = __commonJS({
  "../web/dist/cjs/helpers/defaultOffset.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), defaultOffset_exports = {};
    __export2(defaultOffset_exports, {
      defaultOffset: () => defaultOffset
    });
    module2.exports = __toCommonJS2(defaultOffset_exports);
    var defaultOffset = { height: 0, width: 0 };
  }
});

// ../web/dist/cjs/helpers/normalizeColor.native.js
var require_normalizeColor_native = __commonJS({
  "../web/dist/cjs/helpers/normalizeColor.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), normalizeColor_exports = {};
    __export2(normalizeColor_exports, {
      normalizeColor: () => normalizeColor,
      rgba: () => import_normalize_css_color2.rgba
    });
    module2.exports = __toCommonJS2(normalizeColor_exports);
    var import_constants = require_index_native2(), import_normalize_css_color = require_index_native7(), import_normalize_css_color2 = require_index_native7(), normalizeColor = (color, opacity) => {
      if (!color)
        return;
      if (color[0] === "$" || color[0] === "v" && color.startsWith("var(") || import_constants.isWeb && opacity === 1)
        return color;
      let colorProcessed = (0, import_normalize_css_color.normalizeCSSColor)(color);
      if (colorProcessed != null) {
        let { r, g, b, a } = (0, import_normalize_css_color.rgba)(colorProcessed), alpha = (opacity ?? a ?? 1).toFixed(2);
        return `rgba(${r},${g},${b},${alpha})`;
      }
      process.env.NODE_ENV === "development" && console.warn(`Unknown color value: ${color}`);
    };
  }
});

// ../web/dist/cjs/helpers/normalizeValueWithProperty.native.js
var require_normalizeValueWithProperty_native = __commonJS({
  "../web/dist/cjs/helpers/normalizeValueWithProperty.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), normalizeValueWithProperty_exports = {};
    __export2(normalizeValueWithProperty_exports, {
      normalizeValueWithProperty: () => normalizeValueWithProperty,
      reverseMapClassNameToValue: () => reverseMapClassNameToValue
    });
    module2.exports = __toCommonJS2(normalizeValueWithProperty_exports);
    var import_constants = require_index_native2(), import_helpers = require_index_native4(), import_insertStyleRule = require_insertStyleRule_native(), stylePropsAllPlusTransforms = {
      ...import_helpers.stylePropsAll,
      translateX: !0,
      translateY: !0
    };
    function normalizeValueWithProperty(value, property) {
      if (!import_constants.isWeb || typeof value == "boolean" || property && property in import_helpers.stylePropsUnitless || property && !(property in stylePropsAllPlusTransforms))
        return value;
      let res = value;
      return value && typeof value == "object" ? value : (typeof value == "number" ? res = `${value}px` : property && (res = `${res}`), res);
    }
    var rcache = {};
    function reverseMapClassNameToValue(key, className) {
      let cssRule = (0, import_insertStyleRule.getAllSelectors)()[className];
      if (rcache[cssRule])
        return rcache[cssRule];
      if (!cssRule) {
        process.env.NODE_ENV === "development" && console.warn(
          `No CSS rule found for ${key} looking for selector ".${className}", you may not be injecting extracted CSS`
        );
        return;
      }
      let cssVal = cssRule.replace(/.*:/, "").replace(/;.*/, "").trim(), res;
      return cssVal.startsWith("var(") ? res = cssVal : import_helpers.stylePropsUnitless[key] ? res = +cssVal : cssVal.endsWith("px") ? res = +cssVal.replace("px", "") : res = cssVal, rcache[cssRule] = res, process.env.NODE_ENV === "development" && typeof res == "number" && isNaN(res) && console.info("Tamagui invalid parsed value, NaN:", {
        res,
        cssVal,
        cssRule,
        key,
        className
      }), res;
    }
  }
});

// ../web/dist/cjs/helpers/normalizeShadow.native.js
var require_normalizeShadow_native = __commonJS({
  "../web/dist/cjs/helpers/normalizeShadow.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), normalizeShadow_native_exports = {};
    __export2(normalizeShadow_native_exports, {
      normalizeShadow: () => normalizeShadow
    });
    module2.exports = __toCommonJS2(normalizeShadow_native_exports);
    var import_normalize_css_color = require_index_native7(), import_defaultOffset = require_defaultOffset_native(), import_normalizeColor = require_normalizeColor_native(), import_normalizeValueWithProperty = require_normalizeValueWithProperty_native();
    function normalizeShadow({
      shadowColor,
      shadowOffset,
      shadowOpacity,
      shadowRadius
    }) {
      let { height, width } = shadowOffset || import_defaultOffset.defaultOffset, colorStr = String(shadowColor || "black"), val = (0, import_normalize_css_color.normalizeCSSColor)(colorStr);
      if (typeof val != "number")
        throw new Error(`invalid shadow color ${colorStr}`);
      let { r, g, b, a } = (0, import_normalizeColor.rgba)(val);
      return {
        shadowOffset: {
          width: (0, import_normalizeValueWithProperty.normalizeValueWithProperty)(width || 0),
          height: (0, import_normalizeValueWithProperty.normalizeValueWithProperty)(height || 0)
        },
        shadowRadius: (0, import_normalizeValueWithProperty.normalizeValueWithProperty)(shadowRadius || 0),
        shadowColor: `rgb(${r},${g},${b})`,
        shadowOpacity: shadowOpacity ?? a
      };
    }
  }
});

// ../web/dist/cjs/helpers/expandStyles.native.js
var require_expandStyles_native = __commonJS({
  "../web/dist/cjs/helpers/expandStyles.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), expandStyles_exports = {};
    __export2(expandStyles_exports, {
      expandStylesAndRemoveNullishValues: () => expandStylesAndRemoveNullishValues,
      fixStyles: () => fixStyles
    });
    module2.exports = __toCommonJS2(expandStyles_exports);
    var import_constants = require_index_native2(), import_expandStyle = require_expandStyle_native(), import_normalizeShadow = require_normalizeShadow_native(), import_normalizeValueWithProperty = require_normalizeValueWithProperty_native(), import_pseudoDescriptors = require_pseudoDescriptors_native();
    function expandStylesAndRemoveNullishValues(style) {
      let res = {};
      for (let key in style) {
        let valIn = style[key];
        if (valIn == null)
          continue;
        if (key in import_pseudoDescriptors.pseudoDescriptors) {
          res[key] = expandStylesAndRemoveNullishValues(valIn);
          continue;
        }
        let val = (0, import_normalizeValueWithProperty.normalizeValueWithProperty)(valIn, key), out = (0, import_expandStyle.expandStyle)(key, val);
        out ? Object.assign(res, Object.fromEntries(out)) : res[key] = val;
      }
      return fixStyles(res), res;
    }
    function fixStyles(style) {
      "elevationAndroid" in style && (style.elevation = style.elevationAndroid, delete style.elevationAndroid), (style.shadowRadius || style.shadowColor || style.shadowOpacity || style.shadowOffset) && Object.assign(style, (0, import_normalizeShadow.normalizeShadow)(style));
      for (let key in borderDefaults)
        key in style && !style[borderDefaults[key]] && (style[borderDefaults[key]] = "solid");
    }
    var nativeStyle = import_constants.isWeb ? null : "borderStyle", borderDefaults = {
      borderWidth: "borderStyle",
      borderBottomWidth: nativeStyle || "borderBottomStyle",
      borderTopWidth: nativeStyle || "borderTopStyle",
      borderLeftWidth: nativeStyle || "borderLeftStyle",
      borderRightWidth: nativeStyle || "borderRightStyle"
    };
  }
});

// ../web/dist/cjs/helpers/getStylesAtomic.native.js
var require_getStylesAtomic_native = __commonJS({
  "../web/dist/cjs/helpers/getStylesAtomic.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getStylesAtomic_native_exports = {};
    __export2(getStylesAtomic_native_exports, {
      generateAtomicStyles: () => generateAtomicStyles,
      getAtomicStyle: () => getAtomicStyle,
      getStylesAtomic: () => getStylesAtomic2,
      styleToCSS: () => styleToCSS
    });
    module2.exports = __toCommonJS2(getStylesAtomic_native_exports);
    var empty = () => {
      console.warn("no-op native");
    }, getStylesAtomic2 = empty, generateAtomicStyles = empty, getAtomicStyle = empty, styleToCSS = empty;
  }
});

// ../web/dist/cjs/helpers/getVariantExtras.native.js
var require_getVariantExtras_native = __commonJS({
  "../web/dist/cjs/helpers/getVariantExtras.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getVariantExtras_exports = {};
    __export2(getVariantExtras_exports, {
      getFontsForLanguage: () => getFontsForLanguage,
      getVariantExtras: () => getVariantExtras
    });
    module2.exports = __toCommonJS2(getVariantExtras_exports);
    var import_createVariable = require_createVariable_native(), import_createProxy = require_createProxy_native();
    function getVariantExtras(styleState) {
      let { curProps, conf, context, theme } = styleState, fonts = conf.fontsParsed;
      context != null && context.language && (fonts = getFontsForLanguage(conf.fontsParsed, context.language));
      let fontFamily = (0, import_createVariable.getVariableValue)(
        styleState.fontFamily || styleState.curProps.fontFamily || styleState.conf.defaultFont
      );
      return {
        fonts,
        tokens: conf.tokensParsed,
        theme,
        fontFamily,
        font: fonts[fontFamily] || fonts[styleState.conf.defaultFont],
        // TODO do this in splitstlye
        // we avoid passing in default props for media queries because that would confuse things like SizableText.size:
        props: (0, import_createProxy.createProxy)(curProps, {
          // handles shorthands
          get(target, key) {
            let shorthand = conf.inverseShorthands[key];
            if (shorthand && Reflect.has(target, shorthand))
              return Reflect.get(target, shorthand);
            if (Reflect.has(target, key))
              return Reflect.get(target, key);
          }
        })
      };
    }
    var fontLanguageCache = /* @__PURE__ */ new WeakMap();
    function getFontsForLanguage(fonts, language) {
      if (fontLanguageCache.has(language))
        return fontLanguageCache.get(language);
      let next = {
        ...fonts,
        ...Object.fromEntries(
          Object.entries(language).map(([name, lang]) => {
            if (lang === "default")
              return [];
            let langKey = `$${name}_${lang}`;
            return [`$${name}`, fonts[langKey]];
          })
        )
      };
      return fontLanguageCache.set(language, next), next;
    }
  }
});

// ../web/dist/cjs/helpers/isObj.native.js
var require_isObj_native = __commonJS({
  "../web/dist/cjs/helpers/isObj.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), isObj_exports = {};
    __export2(isObj_exports, {
      isObj: () => isObj
    });
    module2.exports = __toCommonJS2(isObj_exports);
    var isObj = (x) => x && !Array.isArray(x) && typeof x == "object";
  }
});

// ../web/dist/cjs/helpers/propMapper.native.js
var require_propMapper_native = __commonJS({
  "../web/dist/cjs/helpers/propMapper.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), propMapper_exports = {};
    __export2(propMapper_exports, {
      getFontFamilyFromNameOrVariable: () => getFontFamilyFromNameOrVariable,
      getPropMappedFontFamily: () => getPropMappedFontFamily,
      getTokenForKey: () => getTokenForKey,
      propMapper: () => propMapper
    });
    module2.exports = __toCommonJS2(propMapper_exports);
    var import_constants = require_index_native2(), import_helpers = require_index_native4(), import_config = require_config_native(), import_isDevTools = require_isDevTools_native(), import_createVariable = require_createVariable_native(), import_expandStyle = require_expandStyle_native(), import_expandStyles = require_expandStyles_native(), import_getVariantExtras = require_getVariantExtras_native(), import_isObj = require_isObj_native(), import_pseudoDescriptors = require_pseudoDescriptors_native(), propMapper = (key, value, styleStateIn, subPropsIn) => {
      if (!import_constants.isAndroid && key === "elevationAndroid")
        return;
      let subProps = styleStateIn.styleProps.fallbackProps || subPropsIn, styleState = subProps ? new Proxy(styleStateIn, {
        get(_, k) {
          return k === "curProps" ? subProps : Reflect.get(_, k);
        }
      }) : styleStateIn, { conf, styleProps, fontFamily, staticConfig } = styleState, { variants } = staticConfig;
      if (process.env.NODE_ENV === "development" && fontFamily && fontFamily[0] === "$" && !(fontFamily in conf.fontsParsed) && console.warn(
        `Warning: no fontFamily "${fontFamily}" found in config: ${Object.keys(conf.fontsParsed).join(
          ", "
        )}`
      ), !styleProps.noExpand && variants && key in variants) {
        styleState.curProps[key] = value;
        let variantValue = resolveVariants(key, value, styleProps, styleState, "");
        if (variantValue)
          return variantValue;
      }
      let shouldReturn = !1;
      if (styleProps.disableExpandShorthands || key in conf.shorthands && (shouldReturn = !0, key = conf.shorthands[key]), value && (value[0] === "$" ? value = getTokenForKey(key, value, styleProps.resolveValues, styleState) : (0, import_createVariable.isVariable)(value) && (value = resolveVariableValue(key, value, styleProps.resolveValues))), shouldReturn || value != null)
        return (styleProps.noExpand ? null : (0, import_expandStyle.expandStyle)(key, value)) || [[key, value]];
    }, resolveVariants = (key, value, styleProps, styleState, parentVariantKey) => {
      let { staticConfig, conf, debug } = styleState, { variants } = staticConfig;
      if (!variants)
        return;
      let variantValue = getVariantDefinition(variants[key], value, conf);
      if (process.env.NODE_ENV === "development" && debug === "verbose" && (console.groupCollapsed(`\u2666\uFE0F\u2666\uFE0F\u2666\uFE0F resolve variant ${key}`), console.info({
        key,
        value,
        variantValue,
        variants,
        curProps: { ...styleState.curProps }
      }), console.groupEnd()), !variantValue) {
        if (process.env.TAMAGUI_WARN_ON_MISSING_VARIANT === "1" && typeof value != "boolean") {
          let name = staticConfig.componentName || "[UnnamedComponent]";
          console.warn(
            `No variant found: ${name} has variant "${key}", but no matching value "${value}"`
          );
        }
        return;
      }
      if (typeof variantValue == "function") {
        let fn = variantValue, extras = (0, import_getVariantExtras.getVariantExtras)(styleState);
        variantValue = fn(value, extras), process.env.NODE_ENV === "development" && debug === "verbose" && (console.groupCollapsed("   expanded functional variant", key), console.info({ fn, variantValue, extras }), console.groupEnd());
      }
      let fontFamilyResult;
      if ((0, import_isObj.isObj)(variantValue)) {
        let fontFamilyUpdate = variantValue.fontFamily || variantValue[conf.inverseShorthands.fontFamily];
        fontFamilyUpdate && (fontFamilyResult = getFontFamilyFromNameOrVariable(fontFamilyUpdate, conf), styleState.fontFamily = fontFamilyResult, process.env.NODE_ENV === "development" && debug === "verbose" && console.info("   updating font family", fontFamilyResult)), variantValue = resolveTokensAndVariants(
          key,
          variantValue,
          styleProps,
          styleState,
          parentVariantKey
        );
      }
      if (variantValue) {
        let expanded = (0, import_expandStyles.expandStylesAndRemoveNullishValues)(variantValue), next = Object.entries(expanded);
        return fontFamilyResult && fontFamilyResult[0] === "$" && fontFamilyCache.set(next, (0, import_createVariable.getVariableValue)(fontFamilyResult)), next;
      }
    };
    function getFontFamilyFromNameOrVariable(input, conf) {
      if ((0, import_createVariable.isVariable)(input)) {
        let val = variableToFontNameCache.get(input);
        if (val)
          return val;
        for (let key in conf.fontsParsed) {
          let familyVariable = conf.fontsParsed[key].family;
          if ((0, import_createVariable.isVariable)(familyVariable) && (variableToFontNameCache.set(familyVariable, key), familyVariable === input))
            return key;
        }
      } else if (typeof input == "string" && input[0] === "$")
        return input;
    }
    var variableToFontNameCache = /* @__PURE__ */ new WeakMap(), fontFamilyCache = /* @__PURE__ */ new WeakMap(), getPropMappedFontFamily = (expanded) => expanded && fontFamilyCache.get(expanded), resolveTokensAndVariants = (key, value, styleProps, styleState, parentVariantKey) => {
      var _a;
      let { conf, staticConfig, debug, theme } = styleState, { variants } = staticConfig, res = {};
      process.env.NODE_ENV === "development" && debug === "verbose" && console.info("   - resolveTokensAndVariants", key, value);
      for (let _key in value) {
        let subKey = conf.shorthands[_key] || _key, val = value[_key];
        if (styleProps.noExpand)
          res[subKey] = val;
        else if (variants && subKey in variants) {
          if (styleState.curProps[subKey] = val, parentVariantKey && parentVariantKey === key)
            res[subKey] = // SYNC WITH *1
            val[0] === "$" ? getTokenForKey(subKey, val, styleProps.resolveValues, styleState) : val;
          else {
            let variantOut = resolveVariants(subKey, val, styleProps, styleState, key);
            if (variantOut)
              for (let [key2, val2] of variantOut)
                val2 != null && (key2 in import_pseudoDescriptors.pseudoDescriptors ? (res[key2] ??= {}, Object.assign(res[key2], val2)) : res[key2] = val2);
          }
          continue;
        }
        if ((0, import_createVariable.isVariable)(val)) {
          res[subKey] = resolveVariableValue(subKey, val, styleProps.resolveValues);
          continue;
        }
        if (typeof val == "string") {
          let fVal = (
            // SYNC WITH *1
            val[0] === "$" ? getTokenForKey(subKey, val, styleProps.resolveValues, styleState) : val
          );
          res[subKey] = fVal;
          continue;
        }
        if ((0, import_isObj.isObj)(val)) {
          let subObject = resolveTokensAndVariants(subKey, val, styleProps, styleState, key);
          process.env.NODE_ENV === "development" && debug === "verbose" && console.info("object", subKey, subObject), res[subKey] ??= {}, Object.assign(res[subKey], subObject);
        } else
          res[subKey] = val;
        process.env.NODE_ENV === "development" && debug && ((_a = res[subKey]) == null ? void 0 : _a[0]) === "$" && console.warn(
          `\u26A0\uFE0F Missing token in theme ${theme.name}:`,
          subKey,
          res[subKey],
          theme
        );
      }
      return res;
    }, tokenCats = ["size", "color", "radius", "space", "zIndex"].map((name) => ({
      name,
      spreadName: `...${name}`
    }));
    function getVariantDefinition(variant, value, conf) {
      if (typeof variant == "function")
        return variant;
      let exact = variant[value];
      if (exact)
        return exact;
      if (value != null) {
        let { tokensParsed } = conf;
        for (let { name, spreadName } of tokenCats)
          if (spreadName in variant && value in tokensParsed[name])
            return variant[spreadName];
        let fontSizeVariant = variant["...fontSize"];
        if (fontSizeVariant && conf.fontSizeTokens.has(value))
          return fontSizeVariant;
      }
      return variant[`:${typeof value}`] || variant["..."];
    }
    var fontShorthand = {
      fontSize: "size",
      fontWeight: "weight"
    }, getTokenForKey = (key, value, resolveAs = "none", styleState) => {
      var _a, _b;
      if (resolveAs === "none")
        return value;
      let { theme, conf = (0, import_config.getConfig)(), context, fontFamily } = styleState, tokensParsed = conf.tokensParsed, valOrVar, hasSet = !1;
      if (theme && value in theme)
        process.env.NODE_ENV === "development" && styleState.debug === "verbose" && console.info(` - getting theme value for ${key} from ${value}`), valOrVar = theme[value], hasSet = !0;
      else if (value in conf.specificTokens)
        hasSet = !0, valOrVar = conf.specificTokens[value];
      else {
        switch (key) {
          case "fontFamily": {
            valOrVar = ((_a = (context != null && context.language ? (0, import_getVariantExtras.getFontsForLanguage)(conf.fontsParsed, context.language) : conf.fontsParsed)[value]) == null ? void 0 : _a.family) || value, hasSet = !0;
            break;
          }
          case "fontSize":
          case "lineHeight":
          case "letterSpacing":
          case "fontWeight": {
            let defaultFont = conf.defaultFont || "$body", fam = fontFamily || defaultFont;
            if (fam) {
              let fontsParsed = context != null && context.language ? (0, import_getVariantExtras.getFontsForLanguage)(conf.fontsParsed, context.language) : conf.fontsParsed, font = fontsParsed[fam] || fontsParsed[defaultFont];
              valOrVar = ((_b = font == null ? void 0 : font[fontShorthand[key] || key]) == null ? void 0 : _b[value]) || value, hasSet = !0;
            }
            break;
          }
        }
        for (let cat in import_helpers.tokenCategories)
          if (key in import_helpers.tokenCategories[cat]) {
            let res = tokensParsed[cat][value];
            res != null && (valOrVar = res, hasSet = !0);
          }
        if (!hasSet) {
          let spaceVar = tokensParsed.space[value];
          spaceVar != null && (valOrVar = spaceVar, hasSet = !0);
        }
      }
      if (hasSet) {
        let out = resolveVariableValue(key, valOrVar, resolveAs);
        return process.env.NODE_ENV === "development" && styleState.debug === "verbose" && console.info("resolved", resolveAs, valOrVar.get, out), out;
      }
      return process.env.NODE_ENV === "development" && import_isDevTools.isDevTools && styleState.debug === "verbose" && (console.groupCollapsed("  \uFE52 propMap (val)", key, value), console.info({ valOrVar, theme, hasSet }, theme ? theme[key] : ""), console.groupEnd()), value;
    };
    function resolveVariableValue(key, valOrVar, resolveValues) {
      if (resolveValues === "none")
        return valOrVar;
      if ((0, import_createVariable.isVariable)(valOrVar)) {
        if (resolveValues === "value")
          return valOrVar.val;
        let get = valOrVar.get;
        return key !== "shadowColor" && typeof get == "function" ? get(resolveValues === "web" ? "web" : void 0) : valOrVar.val;
      }
      return valOrVar;
    }
  }
});

// ../web/dist/cjs/helpers/getSplitStyles.native.js
var require_getSplitStyles_native = __commonJS({
  "../web/dist/cjs/helpers/getSplitStyles.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getSplitStyles_exports = {};
    __export2(getSplitStyles_exports, {
      PROP_SPLIT: () => PROP_SPLIT,
      getSplitStyles: () => getSplitStyles,
      getSubStyle: () => getSubStyle,
      useSplitStyles: () => useSplitStyles
    });
    module2.exports = __toCommonJS2(getSplitStyles_exports);
    var import_constants = require_index_native2(), import_helpers = require_index_native4(), import_react2 = require("react"), import_config = require_config_native(), import_accessibilityDirectMap = require_accessibilityDirectMap_native(), import_isDevTools = require_isDevTools_native(), import_useMedia = require_useMedia_native(), import_createMediaStyle = require_createMediaStyle_native(), import_expandStyles = require_expandStyles_native(), import_getGroupPropParts = require_getGroupPropParts_native(), import_getStylesAtomic = require_getStylesAtomic_native(), import_insertStyleRule = require_insertStyleRule_native(), import_normalizeValueWithProperty = require_normalizeValueWithProperty_native(), import_propMapper = require_propMapper_native(), import_pseudoDescriptors = require_pseudoDescriptors_native(), fontFamilyKey = "fontFamily", IS_STATIC = process.env.IS_STATIC === "is_static", conf, PROP_SPLIT = "-", getSplitStyles = (props, staticConfig, theme, themeName, componentState, styleProps, parentSplitStyles, context, elementType, debug) => {
      var _a, _b, _c, _e, _f, _g;
      conf = conf || (0, import_config.getConfig)();
      let { shorthands } = conf, {
        isHOC,
        isText,
        variants,
        isReactNative,
        inlineProps,
        inlineWhenUnflattened,
        parentStaticConfig,
        acceptsClassName
      } = staticConfig, validStyleProps = isText ? import_helpers.stylePropsText : import_helpers.validStyles, viewProps = {}, mediaState3 = styleProps.mediaState || import_useMedia.mediaState, usedKeys = {}, shouldDoClasses = acceptsClassName && import_constants.isWeb && !styleProps.noClassNames, rulesToInsert = [], classNames = {}, transforms = {}, pseudos = null, space = props.space, hasMedia = !1, dynamicThemeAccess, pseudoGroups, mediaGroups, style = {}, className = "", mediaStylesSeen = 0, styleState = {
        curProps: Object.assign({}, props),
        classNames,
        conf,
        props,
        styleProps,
        componentState,
        staticConfig,
        style,
        theme,
        usedKeys,
        viewProps,
        context,
        debug
      };
      process.env.NODE_ENV === "development" && debug && debug !== "profile" && import_constants.isClient && (console.groupCollapsed("getSplitStyles (collapsed)"), console.info({
        props,
        staticConfig,
        shouldDoClasses,
        styleProps,
        componentState,
        styleState,
        theme: { ...theme }
      }), console.groupEnd());
      for (let keyOg in props) {
        let keyInit = keyOg, valInit = props[keyOg];
        if (styleProps.disableExpandShorthands || keyInit in shorthands && (keyInit = shorthands[keyInit]), keyInit === "className" || keyInit in usedKeys || keyInit in skipProps && !isHOC)
          continue;
        let valInitType = typeof valInit;
        if (styleState.curProps[keyInit] = valInit, !import_constants.isAndroid && keyInit === "elevationAndroid")
          continue;
        if (keyInit === "userSelect")
          keyInit = "selectable", valInit = valInit !== "none";
        else if (keyInit === "role") {
          viewProps.accessibilityRole = import_accessibilityDirectMap.accessibilityWebRoleToNativeRole[valInit];
          continue;
        } else if (keyInit.startsWith("aria-")) {
          if (import_accessibilityDirectMap.webToNativeAccessibilityDirectMap[keyInit]) {
            let nativeA11yProp = import_accessibilityDirectMap.webToNativeAccessibilityDirectMap[keyInit];
            keyInit === "aria-hidden" && (viewProps["aria-hidden"] = valInit), viewProps[nativeA11yProp] = valInit;
            continue;
          } else if (import_accessibilityDirectMap.nativeAccessibilityValue[keyInit]) {
            let field = import_accessibilityDirectMap.nativeAccessibilityValue[keyInit];
            viewProps.accessibilityValue ? viewProps.accessibilityValue[field] = valInit : viewProps.accessibilityValue = {
              [field]: valInit
            };
          } else if (import_accessibilityDirectMap.nativeAccessibilityState[keyInit]) {
            let field = import_accessibilityDirectMap.nativeAccessibilityState[keyInit];
            viewProps.accessibilityState ? viewProps.accessibilityState[field] = valInit : viewProps.accessibilityState = {
              [field]: valInit
            };
          }
          continue;
        } else if (keyInit.startsWith("data-"))
          continue;
        if (keyInit === "dataSet") {
          for (let keyInit2 in valInit)
            viewProps[`data-${hyphenate(keyInit2)}`] = valInit[keyInit2];
          continue;
        }
        if (keyInit[0] === "_" && keyInit.startsWith("_style")) {
          mergeStyleProp(styleState, valInit);
          continue;
        }
        if (!1 && !(keyInit in accessibilityDirectMap))
          switch (keyInit) {
            case "accessibilityRole":
            case "accessibilityLabelledBy":
            case "accessibilityFlowTo":
            case "accessibilityControls":
            case "accessibilityDescribedBy":
            case "accessibilityKeyShortcuts":
            case "accessibilityLiveRegion":
            case "accessibilityReadOnly":
            case "accessibilityRequired":
            default:
          }
        let isValidStyleKeyInit = keyInit in validStyleProps, isShorthand = keyInit in shorthands, isVariant = !isValidStyleKeyInit && variants && keyInit in variants, isStyleLikeKey = isShorthand || isValidStyleKeyInit || isVariant, isPseudo = keyInit in import_helpers.validPseudoKeys, isMedia = !isStyleLikeKey && !isPseudo && (0, import_useMedia.isMediaKey)(keyInit), isMediaOrPseudo = !!(isMedia || isPseudo), isStyleProp = isMediaOrPseudo || isVariant && !styleProps.noExpand || isValidStyleKeyInit || isShorthand;
        if (isStyleProp && (props.asChild === "except-style" || props.asChild === "except-style-web"))
          continue;
        let shouldPassProp = !isStyleProp || // is in parent variants
        isHOC && (parentStaticConfig == null ? void 0 : parentStaticConfig.variants) && keyInit in parentStaticConfig.variants || (inlineProps == null ? void 0 : inlineProps.has(keyInit)), parentVariant = (_a = parentStaticConfig == null ? void 0 : parentStaticConfig.variants) == null ? void 0 : _a[keyInit], isHOCShouldPassThrough = !!(isHOC && (isShorthand || isValidStyleKeyInit || isMediaOrPseudo || parentVariant || keyInit in skipProps)), shouldPassThrough = shouldPassProp || isHOCShouldPassThrough;
        if (process.env.NODE_ENV === "development" && debug === "verbose" && (console.groupCollapsed(
          `\u{1F539}\u{1F539}\u{1F539}\u{1F539} ${keyOg}${keyInit !== keyOg ? ` (shorthand for ${keyInit})` : ""} ${shouldPassThrough ? "(pass)" : ""} \u{1F539}\u{1F539}\u{1F539}\u{1F539}`
        ), console.info({ isVariant, valInit, shouldPassProp }), import_constants.isClient && console.info({
          variants,
          variant: variants == null ? void 0 : variants[keyInit],
          isVariant,
          isHOCShouldPassThrough,
          curProps: { ...styleState.curProps },
          parentStaticConfig
        }), console.groupEnd()), shouldPassThrough && (passDownProp(viewProps, keyInit, valInit, isMediaOrPseudo), !isVariant) || !styleProps.noSkip && keyInit in skipProps)
          continue;
        if (isText && valInit && (keyInit === fontFamilyKey || keyInit === shorthands[fontFamilyKey]) && valInit in conf.fontsParsed && (styleState.fontFamily = valInit), isValidStyleKeyInit && !variants && (valInitType === "number" || valInitType === "string" && valInit[0] !== "$")) {
          style[keyInit] = valInit;
          continue;
        }
        let expanded = isMediaOrPseudo || !isVariant && !isValidStyleKeyInit ? [[keyInit, valInit]] : (0, import_propMapper.propMapper)(keyInit, valInit, styleState), next = (0, import_propMapper.getPropMappedFontFamily)(expanded);
        if (next && (styleState.fontFamily = next), process.env.NODE_ENV === "development" && debug === "verbose") {
          console.groupCollapsed("  \u{1F4A0} expanded", keyInit, valInit);
          try {
            !import_constants.isServer && import_isDevTools.isDevTools && (console.info({
              expanded,
              styleProps,
              componentState,
              isVariant,
              variant: variants == null ? void 0 : variants[keyInit],
              shouldPassProp,
              isHOCShouldPassThrough,
              theme,
              usedKeys: { ...usedKeys },
              curProps: { ...styleState.curProps }
            }), console.info("expanded", expanded, `
usedKeys`, { ...usedKeys }, `
current`, {
              ...style
            }));
          } catch {
          }
          console.groupEnd();
        }
        if (expanded) {
          for (let [key, val] of expanded)
            if (!(val == null || key in usedKeys)) {
              if (isPseudo = key in import_helpers.validPseudoKeys, isMedia = !isPseudo && !isValidStyleKeyInit && (0, import_useMedia.isMediaKey)(key), isMediaOrPseudo = !!(isMedia || isPseudo), isVariant = variants && key in variants, (inlineProps != null && inlineProps.has(key) || IS_STATIC && inlineWhenUnflattened != null && inlineWhenUnflattened.has(key)) && (viewProps[key] = props[key] ?? val), styleProps.noExpand && isPseudo || isHOC && (isMediaOrPseudo || ((_b = parentStaticConfig == null ? void 0 : parentStaticConfig.variants) == null ? void 0 : _b[keyInit]))) {
                passDownProp(viewProps, key, val, isMediaOrPseudo), process.env.NODE_ENV === "development" && debug === "verbose" && (console.groupCollapsed(` - passing down prop ${key}`), console.info({ val, after: { ...viewProps[key] } }), console.groupEnd());
                continue;
              }
              if (isPseudo) {
                if (!val)
                  continue;
                let pseudoStyleObject = getSubStyle(
                  styleState,
                  key,
                  val,
                  styleProps.noClassNames
                ), descriptor = import_pseudoDescriptors.pseudoDescriptors[key], isEnter = key === "enterStyle", isExit = key === "exitStyle";
                if (process.env.NODE_ENV === "development" && !styleProps.isAnimated && !componentState.unmounted && (isEnter || isExit) && console.warn(
                  `No animation prop given to component ${staticConfig.componentName || ""} ${props["data-at"] || ""} with enterStyle / exitStyle, these styles will be ignored`,
                  { props }
                ), !descriptor || isExit && !styleProps.isExiting)
                  continue;
                if ((!shouldDoClasses || IS_STATIC) && (pseudos ||= {}, pseudos[key] ||= {}, IS_STATIC)) {
                  Object.assign(pseudos[key], pseudoStyleObject);
                  continue;
                }
                if (shouldDoClasses && !isEnter && !isExit) {
                  let pseudoStyles = (0, import_getStylesAtomic.generateAtomicStyles)(pseudoStyleObject, descriptor);
                  process.env.NODE_ENV === "development" && debug === "verbose" && (console.groupCollapsed("pseudo (classes)", key), console.info({ pseudoStyleObject, pseudoStyles }), console.groupEnd());
                  for (let psuedoStyle of pseudoStyles)
                    `${psuedoStyle.property}${PROP_SPLIT}${descriptor.name}` in usedKeys || psuedoStyle.identifier;
                } else {
                  let descriptorKey = descriptor.stateKey || descriptor.name, pseudoState = componentState[descriptorKey], isDisabled = isExit ? !styleProps.isExiting : !pseudoState;
                  import_constants.isWeb && !import_constants.isClient && isEnter && (isDisabled = !1), process.env.NODE_ENV === "development" && debug === "verbose" && (console.groupCollapsed("pseudo", key, { isDisabled }), console.info(pseudoStyleObject, {
                    isDisabled,
                    descriptorKey,
                    descriptor,
                    pseudoState,
                    state: { ...componentState }
                  }), console.groupEnd());
                  let importance = descriptor.priority;
                  for (let pkey in pseudoStyleObject) {
                    let val2 = pseudoStyleObject[pkey];
                    if (isDisabled) {
                      if (pkey in animatableDefaults && !(pkey in usedKeys)) {
                        let defaultVal = animatableDefaults[pkey];
                        mergeStyle(styleState, pkey, defaultVal);
                      }
                    } else {
                      let curImportance = usedKeys[pkey] || 0, shouldMerge = importance >= curImportance;
                      shouldMerge && (pseudos ||= {}, pseudos[key] ||= {}, pseudos[key][pkey] = val2, mergeStyle(styleState, pkey, val2)), process.env.NODE_ENV === "development" && debug === "verbose" && console.info("    subKey", pkey, shouldMerge, {
                        importance,
                        curImportance,
                        pkey,
                        val: val2,
                        transforms: { ...styleState.transforms }
                      });
                    }
                  }
                  if (!isDisabled)
                    for (let key2 in val) {
                      let k = shorthands[key2] || key2;
                      usedKeys[k] = Math.max(importance, usedKeys[k] || 0);
                    }
                }
                continue;
              } else if (isMedia) {
                if (!val)
                  continue;
                if (isMedia === "platform") {
                  let platform = key.slice(10);
                  if (
                    // supports web, ios, android
                    platform !== import_constants.currentPlatform && // supports web, native
                    platform !== "native"
                  )
                    continue;
                }
                hasMedia ||= !0;
                let mediaStyle = getSubStyle(
                  styleState,
                  key,
                  val,
                  // TODO try true like pseudo
                  !1
                ), mediaKeyShort = key.slice(1);
                process.env.NODE_ENV === "development" && debug === "verbose" && console.info(`  \u{1F4FA} ${key}`, {
                  key,
                  val,
                  mediaStyle,
                  props,
                  shouldDoClasses,
                  componentState
                });
                let hasSpace = val.space;
                if ((hasSpace || !shouldDoClasses) && (Array.isArray(hasMedia) || (hasMedia = []), hasMedia.push(mediaKeyShort)), shouldDoClasses) {
                  if (hasSpace && (delete mediaStyle.space, mediaState3[mediaKeyShort])) {
                    let importance = (0, import_useMedia.getMediaImportanceIfMoreImportant)(
                      mediaKeyShort,
                      "space",
                      usedKeys,
                      !0
                    );
                    importance && (space = val.space, usedKeys.space = importance, process.env.NODE_ENV === "development" && debug === "verbose" && console.info(
                      `Found more important space for current media ${mediaKeyShort}: ${val} (importance: ${importance})`
                    ));
                  }
                  let mediaStyles = (0, import_getStylesAtomic.getStylesAtomic)(mediaStyle, debug), priority = mediaStylesSeen;
                  mediaStylesSeen += 1;
                  for (let style2 of mediaStyles) {
                    let out = (0, import_createMediaStyle.createMediaStyle)(
                      style2,
                      mediaKeyShort,
                      import_useMedia.mediaQueryConfig,
                      isMedia,
                      !1,
                      priority
                    );
                    `${style2.property}${PROP_SPLIT}${mediaKeyShort}` in usedKeys || out.identifier;
                  }
                } else {
                  let isThemeMedia = isMedia === "theme", isGroupMedia = isMedia === "group";
                  if (!isThemeMedia && isMedia !== "platform" && !isGroupMedia && !mediaState3[mediaKeyShort])
                    continue;
                  let importanceBump = 0;
                  if (isThemeMedia) {
                    dynamicThemeAccess = !0;
                    let mediaThemeName = mediaKeyShort.slice(6);
                    if (!(themeName === mediaThemeName || themeName.startsWith(mediaThemeName)))
                      continue;
                  } else if (isGroupMedia) {
                    let groupInfo = (0, import_getGroupPropParts.getGroupPropParts)(mediaKeyShort), groupName = groupInfo.name, groupContext = context == null ? void 0 : context.groups.state[groupName];
                    if (!groupContext) {
                      process.env.NODE_ENV === "development" && debug && console.warn(`No parent with group prop, skipping styles: ${groupName}`);
                      continue;
                    }
                    let groupPseudoKey = groupInfo.pseudo, groupMediaKey = groupInfo.media, componentGroupState = (_c = componentState.group) == null ? void 0 : _c[groupName];
                    if (groupMediaKey) {
                      mediaGroups ||= /* @__PURE__ */ new Set(), mediaGroups.add(groupMediaKey);
                      let mediaState22 = componentGroupState == null ? void 0 : componentGroupState.media, isActive = mediaState22 == null ? void 0 : mediaState22[groupMediaKey];
                      if (!mediaState22 && groupContext.layout && (isActive = (0, import_useMedia.mediaKeyMatch)(groupMediaKey, groupContext.layout)), !isActive)
                        continue;
                      importanceBump = 2;
                    }
                    if (groupPseudoKey) {
                      pseudoGroups ||= /* @__PURE__ */ new Set(), pseudoGroups.add(groupName);
                      let componentGroupPseudoState = (componentGroupState || // fallback to context initially
                      context.groups.state[groupName]).pseudo;
                      if (!(componentGroupPseudoState != null && componentGroupPseudoState[groupPseudoKey]))
                        continue;
                      importanceBump = import_pseudoDescriptors.pseudoPriorities[groupPseudoKey];
                    }
                  }
                  for (let subKey in mediaStyle) {
                    if (subKey === "space") {
                      space = valInit.space;
                      continue;
                    }
                    (0, import_useMedia.mergeMediaByImportance)(
                      style,
                      mediaKeyShort,
                      subKey,
                      mediaStyle[subKey],
                      usedKeys,
                      mediaState3[mediaKeyShort],
                      importanceBump
                    ), key === fontFamilyKey && (styleState.fontFamily = mediaStyle.fontFamily);
                  }
                }
                continue;
              }
              if (key === "pointerEvents") {
                viewProps[key] = val;
                continue;
              }
              if (
                // is HOC we can just pass through the styles as props
                // this fixes issues where style prop got merged with wrong priority
                !isHOC && (key in validStyleProps || import_constants.isAndroid && key === "elevation")
              ) {
                mergeStyle(styleState, key, val);
                continue;
              }
              isVariant || (viewProps[key] = val);
            }
          if (process.env.NODE_ENV === "development" && debug === "verbose") {
            console.groupCollapsed(" \u2714\uFE0F expand complete", keyInit);
            try {
              console.info("style", { ...style }), console.info("transforms", { ...transforms }), console.info("viewProps", { ...viewProps });
            } catch {
            }
            console.groupEnd();
          }
        }
      }
      if (props.style && mergeStyleProp(styleState, props.style), !styleProps.noNormalize && ((0, import_expandStyles.fixStyles)(style), import_constants.isWeb && !staticConfig.isReactNative && (0, import_getStylesAtomic.styleToCSS)(style), styleState.transforms && Object.entries(styleState.transforms).sort(([a], [b]) => a.localeCompare(b)).forEach(([key, val]) => {
        mergeTransform(style, key, val, !0);
      }), parentSplitStyles && !shouldDoClasses))
        for (let key in parentSplitStyles.style)
          key in classNames || key in style || (style[key] = parentSplitStyles.style[key]);
      let result = {
        space,
        hasMedia,
        fontFamily: styleState.fontFamily,
        viewProps,
        // @ts-expect-error
        style,
        pseudos,
        classNames,
        rulesToInsert,
        dynamicThemeAccess,
        pseudoGroups,
        mediaGroups
      };
      if (style.fontFamily) {
        let faceInfo = (_e = (0, import_config.getFont)(style.fontFamily)) == null ? void 0 : _e.face;
        if (faceInfo) {
          let overrideFace = (_g = (_f = faceInfo[style.fontWeight]) == null ? void 0 : _f[style.fontStyle || "normal"]) == null ? void 0 : _g.val;
          overrideFace && (style.fontFamily = overrideFace, styleState.fontFamily = overrideFace, delete style.fontWeight, delete style.fontStyle);
        }
        process.env.NODE_ENV === "development" && debug && debug !== "profile" && console.info(`Found fontFamily native: ${style.fontFamily}`, faceInfo);
      }
      if (className && (classNames.className = className), process.env.NODE_ENV === "development" && debug === "verbose" && import_isDevTools.isDevTools) {
        console.groupCollapsed("  \u{1F539} ===>");
        try {
          let logs = {
            ...result,
            className,
            componentState,
            transforms,
            viewProps,
            viewPropsOrder: Object.keys(viewProps),
            rulesToInsert,
            parentSplitStyles
          };
          for (let key in logs)
            console.info(key, logs[key]);
        } catch {
        }
        console.groupEnd();
      }
      return result;
    };
    function mergeStyle(styleState, key, val) {
      let { classNames, viewProps, style, usedKeys, styleProps } = styleState;
      if (import_constants.isWeb && (val == null ? void 0 : val[0]) === "_")
        classNames[key] = val, usedKeys[key] ||= 1;
      else if (key in import_helpers.stylePropsTransform)
        styleState.transforms ||= {}, styleState.transforms[key] = val;
      else {
        let out = import_constants.isWeb && !styleProps.noNormalize ? (0, import_normalizeValueWithProperty.normalizeValueWithProperty)(val, key) : val;
        key in import_helpers.validStylesOnBaseProps ? viewProps[key] = out : style[key] = out;
      }
    }
    var getSubStyle = (styleState, subKey, styleIn, avoidMergeTransform) => {
      let { staticConfig, props, conf: conf2, styleProps } = styleState, styleOut = {};
      for (let key in styleIn) {
        let val = styleIn[key];
        key = conf2.shorthands[key] || key;
        let expanded = (0, import_propMapper.propMapper)(key, val, styleState, { ...props, ...props[subKey] });
        if (!(!expanded || !staticConfig.isHOC && key in skipProps && !styleProps.noSkip))
          for (let [skey, sval] of expanded)
            !avoidMergeTransform && skey in import_helpers.stylePropsTransform ? mergeTransform(styleOut, skey, sval) : styleOut[skey] = styleProps.noNormalize ? sval : (0, import_normalizeValueWithProperty.normalizeValueWithProperty)(sval, key);
      }
      return styleProps.noNormalize || (0, import_expandStyles.fixStyles)(styleOut), styleOut;
    };
    function mergeStyleProp(styleState, val) {
      if (!val)
        return;
      let styles = [].concat(val).flat();
      for (let cur of styles)
        if (cur)
          if (cur.$$css)
            Object.assign(styleState.classNames, cur);
          else
            for (let key in cur)
              key in styleState.usedKeys || mergeStyle(styleState, key, cur[key]);
    }
    var useInsertEffectCompat = import_constants.isWeb ? import_react2.useInsertionEffect || import_constants.useIsomorphicLayoutEffect : () => {
    }, useSplitStyles = (...args) => {
      let res = getSplitStyles(...args);
      return useInsertEffectCompat(() => {
        (0, import_insertStyleRule.insertStyleRules)(res.rulesToInsert);
      }, [res.rulesToInsert]), res;
    }, animatableDefaults = {
      opacity: 1,
      scale: 1,
      rotate: "0deg",
      rotateY: "0deg",
      rotateX: "0deg",
      x: 0,
      y: 0
    }, lowercaseHyphenate = (match) => `-${match.toLowerCase()}`, hyphenate = (str) => str.replace(/[A-Z]/g, lowercaseHyphenate), mergeTransform = (obj, key, val, backwards = !1) => {
      typeof obj.transform != "string" && (obj.transform ||= [], obj.transform[backwards ? "unshift" : "push"]({
        [mapTransformKeys[key] || key]: val
      }));
    }, mapTransformKeys = {
      x: "translateX",
      y: "translateY"
    }, skipProps = {
      untilMeasured: 1,
      animation: 1,
      space: 1,
      animateOnly: 1,
      disableClassName: 1,
      debug: 1,
      componentName: 1,
      disableOptimization: 1,
      tag: 1,
      style: 1,
      // handled after loop so pseudos set usedKeys and override it if necessary
      group: 1
    };
    process.env.NODE_ENV === "test" && (skipProps["data-test-renders"] = 1);
    Object.assign(skipProps, {
      whiteSpace: 1,
      wordWrap: 1,
      textOverflow: 1,
      textDecorationDistance: 1,
      cursor: 1,
      contain: 1,
      boxSizing: 1,
      boxShadow: 1,
      outlineStyle: 1,
      outlineOffset: 1,
      outlineWidth: 1,
      outlineColor: 1
    });
    function passDownProp(viewProps, key, val, shouldMergeObject = !1) {
      if (shouldMergeObject) {
        let next = {
          ...viewProps[key],
          ...val
        };
        delete viewProps[key], viewProps[key] = next;
      } else
        viewProps[key] = val;
    }
  }
});

// ../web/dist/cjs/helpers/mergeProps.native.js
var require_mergeProps_native = __commonJS({
  "../web/dist/cjs/helpers/mergeProps.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), mergeProps_exports = {};
    __export2(mergeProps_exports, {
      mergeProps: () => mergeProps
    });
    module2.exports = __toCommonJS2(mergeProps_exports);
    var import_pseudoDescriptors = require_pseudoDescriptors_native(), mergeProps = (a, b, inverseShorthands) => {
      let out = {};
      for (let key in a)
        mergeProp(out, a, b, key, inverseShorthands);
      if (b)
        for (let key in b)
          mergeProp(out, b, void 0, key, inverseShorthands);
      return out;
    };
    function mergeProp(out, a, b, key, inverseShorthands) {
      let shorthand = (inverseShorthands == null ? void 0 : inverseShorthands[key]) || null;
      if (b && (key in b || shorthand && shorthand in b))
        return;
      let val = a[key];
      if (key in import_pseudoDescriptors.pseudoDescriptors) {
        out[key] = {
          ...out[key],
          ...val
        };
        return;
      }
      out[shorthand || key] = val;
    }
  }
});

// ../web/dist/cjs/helpers/proxyThemeVariables.native.js
var require_proxyThemeVariables_native = __commonJS({
  "../web/dist/cjs/helpers/proxyThemeVariables.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), proxyThemeVariables_exports = {};
    __export2(proxyThemeVariables_exports, {
      proxyThemeVariables: () => proxyThemeVariables
    });
    module2.exports = __toCommonJS2(proxyThemeVariables_exports);
    var import_createProxy = require_createProxy_native();
    function proxyThemeVariables(obj) {
      return (0, import_createProxy.createProxy)(obj || {}, {
        has(target, key) {
          return Reflect.has(target, removeStarting$(key));
        },
        get(target, key) {
          return Reflect.get(target, removeStarting$(key));
        }
      });
    }
    var removeStarting$ = (str) => typeof str == "string" && str[0] === "$" ? str.slice(1) : str;
  }
});

// ../web/dist/cjs/helpers/ThemeManagerContext.native.js
var require_ThemeManagerContext_native = __commonJS({
  "../web/dist/cjs/helpers/ThemeManagerContext.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), ThemeManagerContext_exports = {};
    __export2(ThemeManagerContext_exports, {
      ThemeManagerContext: () => ThemeManagerContext
    });
    module2.exports = __toCommonJS2(ThemeManagerContext_exports);
    var import_react2 = require("react"), ThemeManagerContext = (0, import_react2.createContext)(null);
  }
});

// ../web/dist/cjs/helpers/ThemeManager.native.js
var require_ThemeManager_native = __commonJS({
  "../web/dist/cjs/helpers/ThemeManager.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), ThemeManager_exports = {};
    __export2(ThemeManager_exports, {
      ThemeManager: () => ThemeManager,
      getHasThemeUpdatingProps: () => getHasThemeUpdatingProps,
      getManagers: () => getManagers
    });
    module2.exports = __toCommonJS2(ThemeManager_exports);
    var import_constants = require_index_native2(), import_config = require_config_native(), import_constants2 = require_constants_native2(), emptyState = { name: "" };
    function getHasThemeUpdatingProps(props) {
      return props.name || props.componentName || props.inverse || props.reset;
    }
    var uid = 0, ThemeManager = class {
      constructor(props = {}, parentManager) {
        if (this.props = props, this.id = uid++, this.themeListeners = /* @__PURE__ */ new Set(), this.parentManager = null, this.state = emptyState, this._allKeys = null, parentManager === "root") {
          this.updateStateFromProps(props, !1);
          return;
        }
        if (!parentManager)
          throw process.env.NODE_ENV !== "production" ? new Error(
            "No parent manager given, this is likely due to duplicated Tamagui dependencies. Check your lockfile for mis-matched versions. It could also be from an error somewhere else in your stack causing Tamagui to recieve undefined context, you can try putting some ErrorBoundary components around other areas of your app, or a Suspense boundary."
          ) : "\u274C 0";
        if (this.parentManager = parentManager, !this.updateStateFromProps(props, !1))
          return parentManager;
      }
      updateStateFromProps(props = this.props || {}, shouldNotify = !0) {
        if (this.props = props, props.forceTheme)
          return this.state.theme = props.forceTheme, this.state.name = props.name || "", !0;
        let nextState = this.getStateIfChanged(props);
        if (nextState)
          return this.updateState(nextState, shouldNotify), nextState;
      }
      updateState(nextState, shouldNotify = !0) {
        this.state = nextState, this._allKeys = null, process.env.NODE_ENV !== "production" && (this._numChangeEventsSent ??= 0, this._numChangeEventsSent++), shouldNotify && queueMicrotask(() => {
          this.notify();
        });
      }
      getStateIfChanged(props = this.props, state = this.state, parentManager = this.parentManager) {
        let _ = this.getState(props, parentManager);
        if (state && state !== emptyState && !_)
          return parentManager == null ? void 0 : parentManager.state;
        if (this.getStateShouldChange(_, state))
          return _;
      }
      getStateShouldChange(nextState, state = this.state) {
        return !(!(nextState != null && nextState.theme) || nextState.theme === (state == null ? void 0 : state.theme));
      }
      getState(props = this.props, parentManager = this.parentManager) {
        return getState(props, parentManager) || (parentManager == null ? void 0 : parentManager.state) || null;
      }
      get allKeys() {
        var _a;
        return this._allKeys ||= /* @__PURE__ */ new Set([
          ...((_a = this.parentManager) == null ? void 0 : _a.allKeys) || [],
          ...Object.keys(this.state.theme || {})
        ]), this._allKeys;
      }
      notify(forced = !1) {
        this.themeListeners.forEach((cb) => cb(this.state.name, this, forced));
      }
      onChangeTheme(cb, debugId) {
        return process.env.NODE_ENV !== "production" && debugId && (this._listeningIds ??= /* @__PURE__ */ new Set(), this._listeningIds.add(debugId)), this.themeListeners.add(cb), () => {
          this.themeListeners.delete(cb);
        };
      }
    };
    function getState(props, manager) {
      var _a;
      if (props.name && props.reset)
        throw new Error(
          process.env.NODE_ENV === "production" ? "\u274C004" : "Cannot reset and set a new name at the same time."
        );
      if (!getHasThemeUpdatingProps(props))
        return null;
      let themes = (0, import_config.getThemes)(), [allManagers, componentManagers] = getManagers(manager), isDirectParentAComponentTheme = !!(manager != null && manager.state.isComponent), startIndex = props.reset && !isDirectParentAComponentTheme ? 1 : 0, baseManager = allManagers[startIndex], parentManager = allManagers[startIndex + 1];
      if (!baseManager && props.reset)
        return process.env.NODE_ENV !== "production" && console.warn("Cannot reset, no parent theme exists"), null;
      let { componentName } = props, result = null, baseName = (baseManager == null ? void 0 : baseManager.state.name) || "";
      baseManager != null && baseManager.state.isComponent && (baseName = baseName.replace(/_[A-Z][a-z]+/, ""));
      let nextName = props.reset ? baseName : props.name || "", allComponentThemes = componentManagers.map((x) => (x == null ? void 0 : x.state.name) || "");
      isDirectParentAComponentTheme && allComponentThemes.shift();
      let base = baseName.split(import_constants2.THEME_NAME_SEPARATOR), max2 = base.length, min2 = props.componentName && !nextName ? max2 : 0;
      process.env.NODE_ENV !== "production" && typeof props.debug == "string" && (console.groupCollapsed("ThemeManager.getState()"), console.info({ props, baseName, base, min: min2, max: max2 }));
      for (let i = max2; i >= min2; i--) {
        let prefix = base.slice(0, i).join(import_constants2.THEME_NAME_SEPARATOR);
        props.inverse && (prefix = inverseThemeName(prefix));
        let potentials = [];
        if (prefix && prefix !== baseName && potentials.push(prefix), nextName && potentials.unshift(prefix ? `${prefix}_${nextName}` : nextName), i === 1) {
          let lastSegment = potentials.findIndex((x) => !x.includes("_"));
          lastSegment > 0 && potentials.splice(lastSegment, 0, nextName);
        }
        if (componentName && !props.reset) {
          let componentPotentials = [];
          if (nextName) {
            let beforeSeparator = prefix.slice(0, prefix.indexOf(import_constants2.THEME_NAME_SEPARATOR));
            componentPotentials.push(`${beforeSeparator}_${nextName}_${componentName}`);
          }
          if (componentPotentials.push(`${prefix}_${componentName}`), nextName) {
            let prefixLessOne = base.slice(0, i - 1).join(import_constants2.THEME_NAME_SEPARATOR);
            if (prefixLessOne) {
              let lessSpecific = `${prefixLessOne}_${nextName}_${componentName}`;
              componentPotentials.unshift(lessSpecific);
            }
            let moreSpecific = `${prefix}_${nextName}_${componentName}`;
            componentPotentials.unshift(moreSpecific);
          }
          potentials = [...componentPotentials, ...potentials, ...allComponentThemes];
        }
        let found = potentials.find((t) => t in themes);
        if (process.env.NODE_ENV !== "production" && typeof props.debug == "string" && console.info(" - ", { found, potentials, baseManager, nextName, baseName, prefix }), found) {
          let names = found.split("_"), [firstName, ...restNames] = names, lastName = names[names.length - 1], isComponent = lastName[0] === lastName[0].toUpperCase(), scheme = firstName === "light" ? "light" : firstName === "dark" ? "dark" : void 0, pre = import_constants2.THEME_CLASSNAME_PREFIX, className = import_constants.isWeb ? `${pre}sub_theme ${pre}${!scheme || !restNames.length ? firstName : restNames.join("_")}` : "", parentState = (_a = baseManager || parentManager) == null ? void 0 : _a.state, parentName = parentState == null ? void 0 : parentState.name;
          result = {
            name: found,
            parentName,
            theme: themes[found],
            className,
            isComponent,
            scheme
          };
          break;
        }
      }
      return process.env.NODE_ENV !== "production" && typeof props.debug == "string" && typeof window < "u" && (console.warn("ThemeManager.getState():", { result }), console.trace(), console.groupEnd()), result;
    }
    var inverseThemeName = (themeName) => themeName.startsWith("light") ? themeName.replace(/^light/, "dark") : themeName.replace(/^dark/, "light");
    function getManagers(themeManager) {
      let comp = [], all = [], cur = themeManager;
      for (; cur; )
        all.push(cur), cur.state.isComponent && comp.push(cur), cur = cur.parentManager;
      return [all, comp];
    }
  }
});

// ../web/dist/cjs/hooks/getThemeUnwrapped.native.js
var require_getThemeUnwrapped_native = __commonJS({
  "../web/dist/cjs/hooks/getThemeUnwrapped.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getThemeUnwrapped_exports = {};
    __export2(getThemeUnwrapped_exports, {
      GetThemeUnwrapped: () => GetThemeUnwrapped,
      getThemeUnwrapped: () => getThemeUnwrapped
    });
    module2.exports = __toCommonJS2(getThemeUnwrapped_exports);
    var getThemeUnwrapped = (theme) => (theme == null ? void 0 : theme[GetThemeUnwrapped]) || theme, GetThemeUnwrapped = Symbol();
  }
});

// ../web/dist/cjs/hooks/useTheme.native.js
var require_useTheme_native = __commonJS({
  "../web/dist/cjs/hooks/useTheme.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useTheme_exports = {};
    __export2(useTheme_exports, {
      activeThemeManagers: () => activeThemeManagers,
      getThemeProxied: () => getThemeProxied,
      useChangeThemeEffect: () => useChangeThemeEffect,
      useTheme: () => useTheme4,
      useThemeWithState: () => useThemeWithState
    });
    module2.exports = __toCommonJS2(useTheme_exports);
    var import_constants = require_index_native2(), import_react2 = require("react"), import_config = require_config_native(), import_createVariable = require_createVariable_native(), import_createProxy = require_createProxy_native(), import_createShallowSetState = require_createShallowSetState_native(), import_ThemeManager = require_ThemeManager_native(), import_ThemeManagerContext = require_ThemeManagerContext_native(), import_getThemeUnwrapped = require_getThemeUnwrapped_native(), emptyProps = { name: null }, cached;
    function getDefaultThemeProxied() {
      if (cached)
        return cached;
      let config = (0, import_config.getConfig)(), name = config.themes.light ? "light" : Object.keys(config.themes)[0], defaultTheme = config.themes[name];
      return cached = getThemeProxied({ theme: defaultTheme, name }), cached;
    }
    var useTheme4 = (props = emptyProps) => {
      let [_, theme] = useThemeWithState(props);
      return theme || getDefaultThemeProxied();
    }, useThemeWithState = (props) => {
      let keys = (0, import_react2.useRef)([]), changedThemeState = useChangeThemeEffect(
        props,
        !1,
        keys.current,
        import_constants.isServer ? void 0 : () => {
          var _a, _b;
          let next = ((_a = props.shouldUpdate) == null ? void 0 : _a.call(props)) ?? (keys.current.length > 0 ? !0 : void 0);
          return process.env.NODE_ENV === "development" && props.debug && props.debug !== "profile" && console.info("  \u{1F3A8} useTheme() shouldUpdate?", next, {
            shouldUpdateProp: (_b = props.shouldUpdate) == null ? void 0 : _b.call(props),
            keys: [...keys.current]
          }), next;
        }
      ), { themeManager, state } = changedThemeState;
      state != null && state.theme || process.env.NODE_ENV === "development" && process.env.TAMAGUI_DISABLE_NO_THEME_WARNING !== "1" && console.warn(
        `[tamagui] No theme found, this could be due to an invalid theme name (given theme props ${JSON.stringify(
          props
        )}).

If this is intended and you are using Tamagui without any themes, you can disable this warning by setting the environment variable TAMAGUI_DISABLE_NO_THEME_WARNING=1`
      );
      let themeProxied = (0, import_react2.useMemo)(() => !themeManager || !(state != null && state.theme) ? {} : getThemeProxied(state, props.deopt, themeManager, keys.current, props.debug), [state, themeManager, props.deopt, props.debug]);
      return process.env.NODE_ENV === "development" && props.debug === "verbose" && (console.groupCollapsed("  \u{1F539} useTheme =>", state == null ? void 0 : state.name), console.info("returning state", changedThemeState, "from props", props), console.groupEnd()), [changedThemeState, themeProxied];
    };
    function getThemeProxied({ theme, name, scheme }, deopt = !1, themeManager, keys, debug) {
      if (!theme)
        return {};
      let config = (0, import_config.getConfig)();
      function track(key) {
        keys && !keys.includes(key) && (keys.push(key), process.env.NODE_ENV === "development" && debug && console.info(` \u{1F3A8} useTheme() tracking new key: ${key}`));
      }
      return (0, import_createProxy.createProxy)(theme, {
        has(_, key) {
          if (Reflect.has(theme, key))
            return !0;
          if (typeof key == "string")
            return key[0] === "$" && (key = key.slice(1)), themeManager == null ? void 0 : themeManager.allKeys.has(key);
        },
        get(_, key) {
          if (key === import_getThemeUnwrapped.GetThemeUnwrapped)
            return theme;
          if (
            // dont ask me, idk why but on hermes you can see that useTheme()[undefined] passes in STRING undefined to proxy
            // if someone is crazy enough to use "undefined" as a theme key then this not working is on them
            key !== "undefined" && typeof key == "string"
          ) {
            let keyString = key[0] === "$" ? key.slice(1) : key, val = theme[keyString];
            if (val && typeof val == "object")
              return new Proxy(val, {
                // when they touch the actual value we only track it
                // if its a variable (web), its ignored!
                get(_2, subkey) {
                  if (subkey === "val")
                    track(keyString);
                  else if (subkey === "get")
                    return (platform) => {
                      let outVal = (0, import_createVariable.getVariable)(val);
                      if (platform !== "web" && import_constants.isIos && !deopt && config.settings.fastSchemeChange && !someParentIsInversed(themeManager) && scheme) {
                        let oppositeThemeName = name.replace(
                          scheme === "dark" ? "dark" : "light",
                          scheme === "dark" ? "light" : "dark"
                        ), oppositeTheme = config.themes[oppositeThemeName], oppositeVal = (0, import_createVariable.getVariable)(oppositeTheme == null ? void 0 : oppositeTheme[keyString]);
                        if (oppositeVal)
                          return {
                            dynamic: {
                              dark: scheme === "dark" ? outVal : oppositeVal,
                              light: scheme === "light" ? outVal : oppositeVal
                            }
                          };
                      }
                      return track(keyString), outVal;
                    };
                  return Reflect.get(val, subkey);
                }
              });
          }
          return Reflect.get(_, key);
        }
      });
    }
    function someParentIsInversed(manager) {
      {
        let cur = manager;
        for (; cur; ) {
          if (!cur.parentManager)
            return !0;
          if (cur.parentManager.state.scheme !== cur.state.scheme)
            return !1;
          cur = cur.parentManager;
        }
      }
      return !1;
    }
    var activeThemeManagers = /* @__PURE__ */ new Set(), useChangeThemeEffect = (props, isRoot = !1, keys, shouldUpdate) => {
      let { disable } = props, parentManager = (0, import_react2.useContext)(import_ThemeManagerContext.ThemeManagerContext);
      if (!isRoot && !parentManager || disable)
        return {
          isNewTheme: !1,
          state: parentManager == null ? void 0 : parentManager.state,
          themeManager: parentManager
        };
      let [themeState, setThemeState] = (0, import_react2.useState)(createState), { state, mounted, isNewTheme, themeManager, inversed } = themeState, isInversingOnMount = !!(!themeState.mounted && props.inverse);
      function getShouldUpdateTheme(manager = themeManager, nextState, prevState = state, forceShouldChange = !1) {
        let forceUpdate = shouldUpdate == null ? void 0 : shouldUpdate();
        if (!manager || !forceShouldChange && forceUpdate === !1)
          return;
        let next = nextState || manager.getState(props, parentManager);
        if (forceShouldChange || next && !(forceUpdate !== !0 && !manager.getStateShouldChange(next, prevState)))
          return next;
      }
      if (import_constants.isServer || ((0, import_react2.useLayoutEffect)(() => {
        if (!themeManager)
          return;
        if (props.inverse && !mounted) {
          setThemeState((prev) => createState({
            ...prev,
            mounted: !0
          }));
          return;
        }
        isNewTheme && themeManager && activeThemeManagers.add(themeManager), (isNewTheme || getShouldUpdateTheme(themeManager)) && setThemeState(createState);
        let selfListenerDispose = themeManager.onChangeTheme((_a, _b, forced) => {
          forced && setThemeState((prev) => createState(prev, !0));
        }), disposeChangeListener = parentManager == null ? void 0 : parentManager.onChangeTheme((name, manager) => {
          let force = (shouldUpdate == null ? void 0 : shouldUpdate()) || props.deopt || props["disable-child-theme"], shouldTryUpdate = force ?? !!(keys != null && keys.length || isNewTheme);
          process.env.NODE_ENV === "development" && props.debug && console.info(" \u{1F538} onChange", themeManager.id, {
            force,
            shouldTryUpdate,
            props,
            name,
            manager,
            keys
          }), shouldTryUpdate && setThemeState(createState);
        }, themeManager.id);
        return () => {
          selfListenerDispose(), disposeChangeListener == null || disposeChangeListener(), activeThemeManagers.delete(themeManager);
        };
      }, [
        themeManager,
        parentManager,
        isNewTheme,
        props.componentName,
        props.inverse,
        props.name,
        props.reset,
        mounted
      ]), process.env.NODE_ENV === "development" && props.debug !== "profile" && (0, import_react2.useEffect)(() => (globalThis.TamaguiThemeManagers ??= /* @__PURE__ */ new Set(), globalThis.TamaguiThemeManagers.add(themeManager), () => {
        globalThis.TamaguiThemeManagers.delete(themeManager);
      }), [themeManager])), isInversingOnMount)
        return {
          isNewTheme: !1,
          inversed: !1,
          themeManager: parentManager,
          state: {
            name: "",
            ...parentManager == null ? void 0 : parentManager.state,
            className: ""
          }
        };
      return {
        state,
        isNewTheme,
        inversed,
        themeManager
      };
      function createState(prev, force = !1) {
        if (prev && (shouldUpdate == null ? void 0 : shouldUpdate()) === !1)
          return prev;
        let themeManager2 = parentManager, state2;
        if ((0, import_ThemeManager.getHasThemeUpdatingProps)(props)) {
          let getNewThemeManager = () => new import_ThemeManager.ThemeManager(props, isRoot ? "root" : parentManager);
          if (prev != null && prev.themeManager) {
            themeManager2 = prev.themeManager;
            let forceChange = !!(keys != null && keys.length), next = themeManager2.getState(props, parentManager), nextState = getShouldUpdateTheme(
              themeManager2,
              next,
              prev.state,
              forceChange
            );
            nextState ? (state2 = nextState, prev.isNewTheme ? themeManager2.updateState(nextState) : themeManager2 = getNewThemeManager()) : prev.isNewTheme && parentManager && !next && (themeManager2 = parentManager);
          } else
            themeManager2 = getNewThemeManager(), state2 = { ...themeManager2.state };
        }
        let isNewTheme2 = !!(themeManager2 !== parentManager || props.inverse), mounted2 = props.inverse ? isRoot || (prev == null ? void 0 : prev.mounted) : !0;
        state2 || (isNewTheme2 ? state2 = themeManager2.state : (state2 = parentManager.state, themeManager2 = parentManager));
        let wasInversed = prev == null ? void 0 : prev.inversed, inversed2 = isNewTheme2 && state2.scheme !== (parentManager == null ? void 0 : parentManager.state.scheme) ? !0 : wasInversed ? !1 : null, response = {
          themeManager: themeManager2,
          isNewTheme: isNewTheme2,
          mounted: mounted2,
          inversed: inversed2
        }, shouldReturnPrev = !force && prev && // isEqualShallow uses the second arg as the keys so this should compare without state first...
        (0, import_createShallowSetState.isEqualShallow)(prev, response) && // ... and then compare just the state, because we make a new state obj but is likely the same
        (0, import_createShallowSetState.isEqualShallow)(prev.state, state2);
        if (prev && shouldReturnPrev)
          return prev;
        if (response.state = state2, process.env.NODE_ENV === "development" && props.debug && import_constants.isClient) {
          console.groupCollapsed(` \u{1F537} ${themeManager2.id} useChangeThemeEffect createState`);
          let parentState = { ...parentManager == null ? void 0 : parentManager.state }, parentId = parentManager == null ? void 0 : parentManager.id, themeManagerState = { ...themeManager2.state };
          console.info({
            props,
            parentState,
            parentId,
            themeManager: themeManager2,
            prev,
            response,
            themeManagerState
          }), console.groupEnd();
        }
        return response;
      }
    };
  }
});

// ../web/dist/cjs/views/ThemeDebug.native.js
var require_ThemeDebug_native = __commonJS({
  "../web/dist/cjs/views/ThemeDebug.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), ThemeDebug_native_exports = {};
    __export2(ThemeDebug_native_exports, {
      ThemeDebug: () => ThemeDebug
    });
    module2.exports = __toCommonJS2(ThemeDebug_native_exports);
    function ThemeDebug({
      themeState,
      themeProps,
      children
    }) {
      return children;
    }
  }
});

// ../web/dist/cjs/views/Theme.native.js
var require_Theme_native = __commonJS({
  "../web/dist/cjs/views/Theme.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Theme_exports = {};
    __export2(Theme_exports, {
      Theme: () => Theme2,
      useThemedChildren: () => useThemedChildren
    });
    module2.exports = __toCommonJS2(Theme_exports);
    var import_constants = require_index_native2(), import_react2 = __toESM2(require("react")), import_createVariable = require_createVariable_native(), import_ThemeManagerContext = require_ThemeManagerContext_native(), import_useTheme = require_useTheme_native(), import_ThemeDebug = require_ThemeDebug_native(), import_jsx_runtime6 = require("react/jsx-runtime"), Theme2 = (0, import_react2.forwardRef)(function(props, ref) {
      if (props.disable)
        return props.children;
      let isRoot = !!props._isRoot, disableDirectChildTheme = props["disable-child-theme"], themeState = (0, import_useTheme.useChangeThemeEffect)(props, isRoot), children = (0, import_react2.useMemo)(() => {
        let children2 = disableDirectChildTheme ? import_react2.Children.map(
          props.children,
          (child) => (0, import_react2.cloneElement)(child, { "data-disable-theme": !0 })
        ) : props.children;
        if (ref)
          try {
            import_react2.default.Children.only(children2), children2 = (0, import_react2.cloneElement)(children2, { ref });
          } catch {
          }
        return process.env.NODE_ENV === "development" && props.debug === "visualize" && (children2 = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_ThemeDebug.ThemeDebug, { themeState, themeProps: props, children: children2 })), children2;
      }, [props.children, disableDirectChildTheme]);
      return useThemedChildren(themeState, children, props, isRoot);
    });
    Theme2.avoidForwardRef = !0;
    function useThemedChildren(themeState, children, props, isRoot = !1, avoidWrap = !1) {
      let { themeManager, isNewTheme } = themeState, { shallow, forceClassName } = props, hasEverThemed = (0, import_react2.useRef)(!1);
      if (isNewTheme && (hasEverThemed.current = !0), !(isNewTheme || props.inverse || hasEverThemed.current || forceClassName || isRoot))
        return children;
      let next = children;
      shallow && themeManager && (next = import_react2.Children.toArray(children).map((child) => (0, import_react2.isValidElement)(child) ? (0, import_react2.cloneElement)(
        child,
        void 0,
        /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Theme2, { name: themeManager.state.parentName, children: child.props.children })
      ) : child));
      let elementsWithContext = themeManager ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_ThemeManagerContext.ThemeManagerContext.Provider, { value: themeManager, children: next }) : next;
      return forceClassName === !1 ? elementsWithContext : import_constants.isWeb && !avoidWrap ? wrapThemeElements({
        children: elementsWithContext,
        themeState,
        forceClassName,
        isRoot
      }) : elementsWithContext;
    }
    function wrapThemeElements({
      children,
      themeState,
      forceClassName,
      isRoot
    }) {
      var _a;
      if (isRoot && forceClassName === !1)
        return children;
      let inverse = themeState.inversed, requiresExtraWrapper = inverse != null || forceClassName;
      if (!themeState.isNewTheme && !requiresExtraWrapper)
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("span", { className: "_dsp_contents is_Theme", children });
      let { className, style } = getThemeClassNameAndStyle(themeState, isRoot), themedChildren = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("span", { className: `${className} _dsp_contents is_Theme`, style, children });
      if (requiresExtraWrapper) {
        let name = ((_a = themeState.state) == null ? void 0 : _a.name) || "", inverseClassName = name.startsWith("light") ? "t_light is_inversed" : name.startsWith("dark") ? "t_dark is_inversed" : "";
        themedChildren = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("span", { className: `${inverse ? inverseClassName : ""} _dsp_contents`, children: themedChildren });
      }
      return themedChildren;
    }
    function getThemeClassNameAndStyle(themeState, isRoot = !1) {
      var _a, _b;
      let themeColor = (_a = themeState.state) != null && _a.theme && themeState.isNewTheme ? (0, import_createVariable.variableToString)(themeState.state.theme.color) : "", style = themeColor ? {
        color: themeColor
      } : void 0, className = ((_b = themeState.state) == null ? void 0 : _b.className) || "";
      return isRoot && (className = className.replace("t_sub_theme", "")), { style, className };
    }
  }
});

// ../web/dist/cjs/helpers/themeable.native.js
var require_themeable_native = __commonJS({
  "../web/dist/cjs/helpers/themeable.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), themeable_exports = {};
    __export2(themeable_exports, {
      themeable: () => themeable3
    });
    module2.exports = __toCommonJS2(themeable_exports);
    var import_react2 = require("react"), import_Theme = require_Theme_native(), import_jsx_runtime6 = require("react/jsx-runtime");
    function themeable3(Component, staticConfig) {
      let withTheme = (0, import_react2.forwardRef)(function(props, ref) {
        let { themeInverse, theme, componentName, themeReset, ...rest } = props, element = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Component, { ref, ...rest, "data-disable-theme": !0 });
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_Theme.Theme,
          {
            componentName: componentName || (staticConfig == null ? void 0 : staticConfig.componentName),
            name: theme,
            "disable-child-theme": !0,
            debug: props.debug,
            inverse: themeInverse,
            reset: themeReset,
            children: element
          }
        );
      });
      return withTheme.displayName = `Themed(${(Component == null ? void 0 : Component.displayName) || (Component == null ? void 0 : Component.name) || "Anonymous"})`, withTheme;
    }
  }
});

// ../web/dist/cjs/setupHooks.native.js
var require_setupHooks_native = __commonJS({
  "../web/dist/cjs/setupHooks.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), setupHooks_exports = {};
    __export2(setupHooks_exports, {
      hooks: () => hooks,
      setupHooks: () => setupHooks
    });
    module2.exports = __toCommonJS2(setupHooks_exports);
    var hooks = {};
    function setupHooks(next) {
      Object.assign(hooks, next);
    }
  }
});

// ../web/dist/cjs/views/Slot.native.js
var require_Slot_native = __commonJS({
  "../web/dist/cjs/views/Slot.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Slot_exports = {};
    __export2(Slot_exports, {
      Slot: () => Slot,
      Slottable: () => Slottable
    });
    module2.exports = __toCommonJS2(Slot_exports);
    var import_compose_refs = require_index_native5(), import_constants = require_index_native2(), import_helpers = require_index_native4(), import_react2 = require("react"), import_jsx_runtime6 = require("react/jsx-runtime"), Slot = (0, import_react2.forwardRef)(function(props, forwardedRef) {
      let { children, ...slotProps } = props;
      if ((0, import_react2.isValidElement)(children)) {
        let mergedProps = mergeSlotProps(children, slotProps);
        return (0, import_react2.cloneElement)(
          children,
          children.type.avoidForwardRef ? mergedProps : {
            ...mergedProps,
            ref: (0, import_compose_refs.composeRefs)(forwardedRef, children.ref)
          }
        );
      }
      return import_react2.Children.count(children) > 1 ? import_react2.Children.only(null) : null;
    }), Slottable = ({ children }) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, { children }), pressMap = import_constants.isWeb ? {
      onPress: "onClick",
      onPressOut: "onMouseUp",
      onPressIn: "onMouseDown"
    } : {};
    function mergeSlotProps(child, slotProps) {
      let childProps = child.props, overrideProps = { ...childProps }, isHTMLChild = typeof child.type == "string";
      if (isHTMLChild)
        for (let key in pressMap)
          key in slotProps && (slotProps[pressMap[key]] = slotProps[key], delete slotProps[key]);
      for (let propName in childProps) {
        let slotPropValue = slotProps[propName], childPropValue = childProps[propName];
        isHTMLChild && propName in pressMap && (propName = pressMap[propName], delete overrideProps[propName]), handleRegex.test(propName) ? overrideProps[propName] = (0, import_helpers.composeEventHandlers)(childPropValue, slotPropValue) : propName === "style" ? overrideProps[propName] = { ...slotPropValue, ...childPropValue } : propName === "className" && (overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(" "));
      }
      return { ...slotProps, ...overrideProps };
    }
    var handleRegex = /^on[A-Z]/;
  }
});

// ../web/dist/cjs/createComponent.native.js
var require_createComponent_native = __commonJS({
  "../web/dist/cjs/createComponent.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createComponent_exports = {};
    __export2(createComponent_exports, {
      Spacer: () => Spacer2,
      Unspaced: () => Unspaced2,
      createComponent: () => createComponent2,
      mouseUps: () => mouseUps,
      spacedChildren: () => spacedChildren2
    });
    module2.exports = __toCommonJS2(createComponent_exports);
    var import_compose_refs = require_index_native5(), import_constants = require_index_native2(), import_helpers = require_index_native4(), import_use_did_finish_ssr = require_index_native6(), import_react2 = __toESM2(require("react")), import_config = require_config_native(), import_constants2 = require_constants_native2(), import_ComponentContext = require_ComponentContext_native(), import_createVariable = require_createVariable_native(), import_defaultComponentState = require_defaultComponentState_native(), import_createShallowSetState = require_createShallowSetState_native(), import_getSplitStyles = require_getSplitStyles_native(), import_mergeProps = require_mergeProps_native(), import_proxyThemeVariables = require_proxyThemeVariables_native(), import_themeable = require_themeable_native(), import_useMedia = require_useMedia_native(), import_useTheme = require_useTheme_native(), import_setupHooks = require_setupHooks_native(), import_Slot = require_Slot_native(), import_Theme = require_Theme_native(), import_ThemeDebug = require_ThemeDebug_native(), import_jsx_runtime6 = require("react/jsx-runtime"), tamaguiConfig, AnimatedText, AnimatedView, initialTheme, time, debugKeyListeners, startVisualizer, mouseUps = /* @__PURE__ */ new Set();
    if (typeof document < "u") {
      let cancelTouches = () => {
        mouseUps.forEach((x) => x()), mouseUps.clear();
      };
      addEventListener("mouseup", cancelTouches), addEventListener("touchend", cancelTouches), addEventListener("touchcancel", cancelTouches), process.env.NODE_ENV === "development" && (startVisualizer = () => {
        var _a;
        let devVisualizerConfig = (_a = import_config.devConfig) == null ? void 0 : _a.visualizer;
        if (devVisualizerConfig) {
          debugKeyListeners = /* @__PURE__ */ new Set();
          let tm, isShowing = !1, options = {
            key: "Alt",
            delay: 800,
            ...typeof devVisualizerConfig == "object" ? devVisualizerConfig : {}
          };
          document.addEventListener("blur", () => {
            clearTimeout(tm);
          }), document.addEventListener("keydown", ({ key, defaultPrevented }) => {
            defaultPrevented || (clearTimeout(tm), key === options.key && (tm = setTimeout(() => {
              isShowing = !0, debugKeyListeners == null || debugKeyListeners.forEach((l) => l(!0));
            }, options.delay)));
          }), document.addEventListener("keyup", ({ key, defaultPrevented }) => {
            defaultPrevented || key === options.key && (clearTimeout(tm), isShowing && (debugKeyListeners == null || debugKeyListeners.forEach((l) => l(!1))));
          });
        }
      });
    }
    var BaseText, BaseView, hasSetupBaseViews = !1;
    function createComponent2(staticConfig) {
      var _a;
      let config = null;
      (0, import_config.onConfiguredOnce)((conf) => {
        if (config = conf, !tamaguiConfig && (tamaguiConfig = conf, !initialTheme)) {
          let next = conf.themes[Object.keys(conf.themes)[0]];
          initialTheme = (0, import_proxyThemeVariables.proxyThemeVariables)(next), process.env.NODE_ENV === "development" && (initialTheme || console.info("Warning: Missing theme"));
        }
      });
      let {
        Component,
        isText,
        isZStack,
        isHOC,
        validStyles: validStyles2 = {},
        variants = {}
      } = staticConfig, defaultComponentClassName = `is_${staticConfig.componentName}`, defaultProps = staticConfig.defaultProps;
      process.env.NODE_ENV === "development" && (_a = staticConfig.defaultProps) != null && _a.debug && process.env.IS_STATIC !== "is_static" && console.info(`\u{1F41B} [${staticConfig.componentName || "Component"}]`, {
        staticConfig,
        defaultProps,
        defaultPropsKeyOrder: defaultProps ? Object.keys(defaultProps) : []
      });
      let component = (0, import_react2.forwardRef)((propsIn, forwardedRef) => {
        var _a2, _b, _c, _d, _e, _f, _i, _j, _k, _l, _m, _n, _o;
        if (process.env.NODE_ENV === "development" && startVisualizer && (startVisualizer(), startVisualizer = void 0), !hasSetupBaseViews) {
          hasSetupBaseViews = !0;
          let baseViews = (_b = (_a2 = import_setupHooks.hooks).getBaseViews) == null ? void 0 : _b.call(_a2);
          baseViews && (BaseText = baseViews.Text, BaseView = baseViews.View);
        }
        process.env.NODE_ENV === "test" && propsIn["data-test-renders"] && (propsIn["data-test-renders"].current ??= 0, propsIn["data-test-renders"].current += 1);
        let componentContext = (0, import_react2.useContext)(import_ComponentContext.ComponentContext), styledContextProps, overriddenContextProps, contextValue, { context } = staticConfig;
        if (context) {
          contextValue = (0, import_react2.useContext)(context);
          let { inverseShorthands } = (0, import_config.getConfig)();
          for (let key in context.props) {
            let propVal = (
              // because its after default props but before props this annoying amount of checks
              propsIn[key] ?? propsIn[inverseShorthands[key]] ?? (defaultProps == null ? void 0 : defaultProps[key]) ?? (defaultProps == null ? void 0 : defaultProps[inverseShorthands[key]])
            );
            propVal === void 0 ? contextValue && (key in validStyles2 || key in variants) && (styledContextProps ||= {}, styledContextProps[key] = contextValue[key]) : (overriddenContextProps ||= {}, overriddenContextProps[key] = propVal);
          }
        }
        let curDefaultProps = styledContextProps ? { ...defaultProps, ...styledContextProps } : defaultProps, props = propsIn;
        curDefaultProps && (props = (0, import_mergeProps.mergeProps)(curDefaultProps, propsIn));
        let debugProp = props.debug, componentName = props.componentName || staticConfig.componentName;
        process.env.NODE_ENV === "development" && import_constants.isClient && (0, import_react2.useEffect)(() => {
          let overlay = null, debugVisualizerHandler = (show = !1) => {
            let node = hostRef.current;
            if (node)
              if (show) {
                overlay = document.createElement("span"), overlay.style.inset = "0px", overlay.style.zIndex = "1000000", overlay.style.position = "absolute", overlay.style.borderColor = "red", overlay.style.borderWidth = "1px", overlay.style.borderStyle = "dotted";
                let dataAt = node.getAttribute("data-at") || "", dataIn = node.getAttribute("data-in") || "", tooltip = document.createElement("span");
                tooltip.style.position = "absolute", tooltip.style.top = "0px", tooltip.style.left = "0px", tooltip.style.padding = "3px", tooltip.style.background = "rgba(0,0,0,0.75)", tooltip.style.color = "rgba(255,255,255,1)", tooltip.style.fontSize = "12px", tooltip.style.lineHeight = "12px", tooltip.style.fontFamily = "monospace", tooltip.style.webkitFontSmoothing = "none", tooltip.innerText = `${componentName || ""} ${dataAt} ${dataIn}`.trim(), overlay.appendChild(tooltip), node.appendChild(overlay);
              } else
                overlay && node.removeChild(overlay);
          };
          return debugKeyListeners ||= /* @__PURE__ */ new Set(), debugKeyListeners.add(debugVisualizerHandler), () => {
            debugKeyListeners == null || debugKeyListeners.delete(debugVisualizerHandler);
          };
        }, [componentName]), process.env.NODE_ENV === "development" && time && time`start (ignore)`;
        let isHydrated = config != null && config.disableSSR ? !0 : (0, import_use_did_finish_ssr.useDidFinishSSR)();
        process.env.NODE_ENV === "development" && time && time`did-finish-ssr`;
        let stateRef = (0, import_react2.useRef)(
          void 0
        );
        stateRef.current ||= {}, process.env.NODE_ENV === "development" && time && time`stateref`;
        let hostRef = (0, import_react2.useRef)(null), animationsConfig = componentContext.animationDriver, useAnimations = animationsConfig == null ? void 0 : animationsConfig.useAnimations, hasAnimationProp = !!(props.animation || props.style && hasAnimatedStyleValue(props.style)), supportsCSSVars = animationsConfig == null ? void 0 : animationsConfig.supportsCSSVars, willBeAnimated = (() => {
          if (import_constants.isServer && !supportsCSSVars)
            return !1;
          let curState = stateRef.current;
          return !!(hasAnimationProp && !isHOC && useAnimations || curState.hasAnimated);
        })(), usePresence = animationsConfig == null ? void 0 : animationsConfig.usePresence, presence = willBeAnimated && (usePresence == null ? void 0 : usePresence()) || null, hasEnterStyle = !!props.enterStyle, needsMount = !!((!import_constants.isWeb || import_constants.isClient) && willBeAnimated);
        process.env.NODE_ENV === "development" && time && time`pre-use-state`;
        let initialState = willBeAnimated ? supportsCSSVars ? import_defaultComponentState.defaultComponentStateShouldEnter : import_defaultComponentState.defaultComponentState : import_defaultComponentState.defaultComponentStateMounted, states = (0, import_react2.useState)(initialState), state = propsIn.forceStyle ? { ...states[0], [propsIn.forceStyle]: !0 } : states[0], setState = states[1], setStateShallow = (0, import_createShallowSetState.createShallowSetState)(setState), groupName = props.group, groupClassName = groupName ? `t_group_${props.group}` : "";
        if (groupName) {
          let groupContextState = componentContext.groups.state, og = setStateShallow;
          setStateShallow = (state2) => {
            og(state2), componentContext.groups.emit(groupName, {
              pseudo: state2
            });
            let next = {
              ...groupContextState[groupName],
              ...state2
            };
            groupContextState[groupName] = next;
          };
        }
        process.env.NODE_ENV === "development" && time && time`use-state`;
        let isAnimated = willBeAnimated;
        willBeAnimated && !supportsCSSVars && !presence && isHydrated && (import_constants.isServer || state.unmounted === !0) && (isAnimated = !1), willBeAnimated && !stateRef.current.hasAnimated && (stateRef.current.hasAnimated = !0);
        let componentClassName = props.asChild ? "" : props.componentName ? `is_${props.componentName}` : defaultComponentClassName, hasTextAncestor = !!(import_constants.isWeb && isText && componentContext.inText), isDisabled = props.disabled ?? ((_c = props.accessibilityState) == null ? void 0 : _c.disabled);
        process.env.NODE_ENV === "development" && time && time`use-context`;
        let element = import_constants.isWeb && (!Component || typeof Component == "string") && props.tag || Component, BaseTextComponent = BaseText || element || "span", BaseViewComponent = BaseView || element || (hasTextAncestor ? "span" : "div");
        AnimatedText = animationsConfig ? animationsConfig.Text : BaseTextComponent, AnimatedView = animationsConfig ? animationsConfig.View : BaseViewComponent;
        let elementType = isText ? (isAnimated ? AnimatedText : null) || BaseTextComponent : (isAnimated ? AnimatedView : null) || BaseViewComponent;
        if (isAnimated && presence) {
          let presenceState = presence[2];
          if (presenceState) {
            let isEntering = state.unmounted, isExiting2 = !presenceState.isPresent, enterExitVariant = presenceState.enterExitVariant, enterVariant = enterExitVariant ?? presenceState.enterVariant, exitVariant = enterExitVariant ?? presenceState.exitVariant;
            isEntering && enterVariant ? (process.env.NODE_ENV === "development" && debugProp === "verbose" && console.warn(`Animating presence ENTER "${enterVariant}"`), props[enterVariant] = !0) : isExiting2 && exitVariant && (process.env.NODE_ENV === "development" && debugProp === "verbose" && console.warn(`Animating presence EXIT "${enterVariant}"`), props[exitVariant] = !enterExitVariant);
          }
        }
        let isAnimatedReactNative = hasAnimationProp && (animationsConfig == null ? void 0 : animationsConfig.isReactNative), isReactNative = !!(staticConfig.isReactNative || isAnimatedReactNative), shouldAvoidClasses = !!(!import_constants.isWeb || isAnimated || !staticConfig.acceptsClassName || propsIn.disableClassName), shouldForcePseudo = !!propsIn.forceStyle, noClassNames = shouldAvoidClasses || shouldForcePseudo, disableThemeProp = !1, disableTheme = disableThemeProp && !willBeAnimated || isHOC;
        process.env.NODE_ENV === "development" && time && time`theme-props`, props.themeShallow && (stateRef.current.themeShallow = !0);
        let themeStateProps = {
          name: props.theme,
          componentName,
          disable: disableTheme,
          shallow: stateRef.current.themeShallow,
          // if this returns undefined it defers to the keys tracking, so its only used to force either updates or no updates
          shouldUpdate: () => (
            // when we use $theme- styles we need to force it to re-render on theme changes (this can be optimized likely)
            stateRef.current.isListeningToTheme
          ),
          debug: debugProp
        };
        themeStateProps.deopt = willBeAnimated;
        let isExiting = !state.unmounted && (presence == null ? void 0 : presence[0]) === !1;
        if (process.env.NODE_ENV === "development") {
          let id = (0, import_react2.useId)();
          if (debugProp && debugProp !== "profile") {
            let name = `${componentName || (Component == null ? void 0 : Component.displayName) || (Component == null ? void 0 : Component.name) || "[Unnamed Component]"}`, type = isAnimatedReactNative ? "(animated)" : isReactNative ? "(rnw)" : "", dataIs = propsIn["data-is"] || "", banner = `${name}${dataIs ? ` ${dataIs}` : ""} ${type} id ${id}`;
            console.group(
              `%c ${banner} (unmounted: ${state.unmounted})${presence ? ` (presence: ${presence[0]})` : ""} ${isHydrated ? "\u{1F4A6}" : "\u{1F3DC}\uFE0F"}`,
              "background: green; color: white;"
            ), import_constants.isServer || (console.groupCollapsed(
              `Info (collapsed): ${state.press || state.pressIn ? "PRESSED " : ""}${state.hover ? "HOVERED " : ""}${state.focus ? "FOCUSED" : " "}`
            ), console.info({
              propsIn,
              props,
              state,
              staticConfig,
              elementType,
              themeStateProps,
              styledContext: { contextProps: styledContextProps, overriddenContextProps },
              presence,
              isAnimated,
              isHOC,
              hasAnimationProp,
              useAnimations,
              propsInOrder: Object.keys(propsIn),
              propsOrder: Object.keys(props)
            }), console.groupEnd());
          }
        }
        process.env.NODE_ENV === "development" && time && time`pre-theme-media`;
        let [themeState, theme] = (0, import_useTheme.useThemeWithState)(themeStateProps);
        elementType = Component || elementType;
        let isStringElement = typeof elementType == "string";
        process.env.NODE_ENV === "development" && time && time`theme`;
        let mediaState3 = (0, import_useMedia.useMedia)(stateRef, componentContext);
        process.env.NODE_ENV === "development" && time && time`media`, (0, import_createVariable.setDidGetVariableValue)(!1);
        let resolveValues = (
          // if HOC + mounted + has animation prop, resolve as value so it passes non-variable to child
          isAnimated && !supportsCSSVars || isHOC && state.unmounted == !1 && hasAnimationProp ? "value" : "auto"
        ), keepStyleSSR = willBeAnimated && (animationsConfig == null ? void 0 : animationsConfig.keepStyleSSR), styleProps = {
          mediaState: mediaState3,
          noClassNames,
          resolveValues,
          isExiting,
          isAnimated,
          keepStyleSSR
        }, splitStyles = (0, import_getSplitStyles.useSplitStyles)(
          props,
          staticConfig,
          theme,
          ((_d = themeState == null ? void 0 : themeState.state) == null ? void 0 : _d.name) || "",
          state,
          styleProps,
          null,
          componentContext,
          elementType,
          debugProp
        );
        props.group && props.untilMeasured === "hide" && !stateRef.current.hasMeasured && (splitStyles.style.opacity = 0), process.env.NODE_ENV === "development" && time && time`split-styles`, stateRef.current.isListeningToTheme = splitStyles.dynamicThemeAccess;
        let isMediaArray = splitStyles.hasMedia && Array.isArray(splitStyles.hasMedia), shouldListenForMedia = (0, import_createVariable.didGetVariableValue)() || isMediaArray || noClassNames && splitStyles.hasMedia === !0, mediaListeningKeys = isMediaArray ? splitStyles.hasMedia : null;
        (0, import_useMedia.setMediaShouldUpdate)(stateRef, {
          enabled: shouldListenForMedia,
          keys: mediaListeningKeys
        });
        let isAnimatedReactNativeWeb = hasAnimationProp && isReactNative;
        if (process.env.NODE_ENV === "development" && debugProp && debugProp !== "profile" && (console.groupCollapsed(">>>"), console.info(
          "props in",
          propsIn,
          "mapped to",
          props,
          "in order",
          Object.keys(props)
        ), console.info("splitStyles", splitStyles), console.info("media", { shouldListenForMedia, isMediaArray, mediaListeningKeys }), console.info("className", Object.values(splitStyles.classNames)), import_constants.isClient && console.info("ref", hostRef, "(click to view)"), console.groupEnd(), debugProp === "break"))
          debugger;
        let {
          viewProps: viewPropsIn,
          pseudos,
          style: splitStylesStyle,
          classNames,
          space
        } = splitStyles, propsWithAnimation = props, animationStyles;
        if (willBeAnimated && useAnimations && !isHOC) {
          let animations = useAnimations({
            props: propsWithAnimation,
            // if hydrating, send empty style
            style: splitStylesStyle,
            // style: splitStylesStyle,
            presence,
            componentState: state,
            styleProps,
            theme: (_e = themeState.state) == null ? void 0 : _e.theme,
            pseudos: pseudos || null,
            hostRef,
            staticConfig
          });
          isAnimated && animations && (animationStyles = animations.style), process.env.NODE_ENV === "development" && time && time`animations`;
        }
        let {
          asChild,
          children,
          themeShallow,
          spaceDirection: _spaceDirection,
          disabled: disabledProp,
          onPress,
          onLongPress,
          onPressIn,
          onPressOut,
          onHoverIn,
          onHoverOut,
          onMouseUp,
          onMouseDown,
          onMouseEnter,
          onMouseLeave,
          onFocus,
          onBlur,
          separator,
          // ignore from here on out
          forceStyle: _forceStyle,
          // @ts-ignore  for next/link compat etc
          onClick,
          theme: _themeProp,
          // @ts-ignore
          defaultVariants,
          ...nonTamaguiProps
        } = viewPropsIn;
        process.env.NODE_ENV === "development" && props.untilMeasured && !props.group && console.warn(
          `You set the untilMeasured prop without setting group. This doesn't work, be sure to set untilMeasured on the parent that sets group, not the children that use the $group- prop.

If you meant to do this, you can disable this warning - either change untilMeasured and group at the same time, or do group={conditional ? 'name' : undefined}`
        ), process.env.NODE_ENV === "development" && time && time`destructure`;
        let disabled = ((_f = props.accessibilityState) == null ? void 0 : _f.disabled) || // @ts-expect-error (comes from core)
        props.accessibilityDisabled, viewProps = nonTamaguiProps;
        isHOC && _themeProp && (viewProps.theme = _themeProp), groupName && (nonTamaguiProps.onLayout = (0, import_helpers.composeEventHandlers)(
          nonTamaguiProps.onLayout,
          (e) => {
            componentContext.groups.emit(groupName, {
              layout: e.nativeEvent.layout
            }), !stateRef.current.hasMeasured && props.untilMeasured === "hide" && setState((prev) => ({ ...prev })), stateRef.current.hasMeasured = !0;
          }
        )), viewProps = nonTamaguiProps;
        let composedRef = (0, import_compose_refs.useComposedRefs)(hostRef, forwardedRef);
        viewProps.ref = composedRef, process.env.NODE_ENV === "development" && !isReactNative && !isText && import_constants.isWeb && !isHOC && import_react2.Children.toArray(props.children).forEach((item) => {
          typeof item == "string" && item !== `
` && console.error(
            `Unexpected text node: ${item}. A text node cannot be a child of a <View>.`
          );
        }), process.env.NODE_ENV === "development" && time && time`events-hooks`;
        let unPress = () => setStateShallow({
          press: !1,
          pressIn: !1
        }), shouldSetMounted = needsMount && state.unmounted, { pseudoGroups, mediaGroups } = splitStyles;
        (0, import_react2.useEffect)(() => {
          if (shouldSetMounted) {
            let unmounted = state.unmounted === !0 && hasEnterStyle ? "should-enter" : !1;
            setStateShallow({
              unmounted
            });
            return;
          }
          let disposeGroupsListener;
          if (pseudoGroups || mediaGroups) {
            let current = {
              pseudo: {},
              media: {}
            };
            disposeGroupsListener = componentContext.groups.subscribe(
              (name, { layout, pseudo }) => {
                if (pseudo && pseudoGroups != null && pseudoGroups.has(name))
                  Object.assign(current.pseudo, pseudo), persist();
                else if (layout && mediaGroups) {
                  let mediaState22 = getMediaState(mediaGroups, layout), next = (0, import_createShallowSetState.mergeIfNotShallowEqual)(current.media, mediaState22);
                  next !== current.media && (Object.assign(current.media, next), persist());
                }
                function persist() {
                  setStateShallow({
                    // force it to be referentially different so it always updates
                    group: {
                      ...state.group,
                      [name]: current
                    }
                  });
                }
              }
            );
          }
          return () => {
            disposeGroupsListener == null || disposeGroupsListener(), mouseUps.delete(unPress);
          };
        }, [
          shouldSetMounted,
          state.unmounted,
          pseudoGroups ? Object.keys([...pseudoGroups]).join("") : 0,
          mediaGroups ? Object.keys([...mediaGroups]).join("") : 0
        ]);
        let avoidAnimationStyle = keepStyleSSR && state.unmounted === !0, fontFamily = isText ? splitStyles.fontFamily || ((_i = staticConfig.defaultProps) == null ? void 0 : _i.fontFamily) : null;
        fontFamily && fontFamily[0] === "$" && (fontFamily = fontFamily.slice(1));
        let fontFamilyClassName = fontFamily ? `font_${fontFamily}` : "", style = avoidAnimationStyle ? splitStyles.style : animationStyles || splitStyles.style, className;
        viewProps.style = style;
        let runtimePressStyle = !disabled && noClassNames && (pseudos == null ? void 0 : pseudos.pressStyle), runtimeFocusStyle = !disabled && noClassNames && (pseudos == null ? void 0 : pseudos.focusStyle), attachFocus = !!(runtimePressStyle || onFocus || onBlur), attachPress = !!(groupName || runtimePressStyle || onPress || onPressOut || onPressIn || onLongPress || onClick), runtimeHoverStyle = !disabled && noClassNames && (pseudos == null ? void 0 : pseudos.hoverStyle), needsHoverState = runtimeHoverStyle || onHoverIn || onHoverOut, isHoverable = import_constants.isWeb && !!(groupName || needsHoverState || onMouseEnter || onMouseLeave), handlesPressEvents = !(import_constants.isWeb || asChild), shouldAttach = !!(attachFocus || attachPress || isHoverable || runtimePressStyle || runtimeHoverStyle || runtimeFocusStyle);
        process.env.NODE_ENV === "development" && time && time`events-setup`;
        let events = shouldAttach && !isDisabled && !props.asChild ? {
          onPressOut: attachPress ? (e) => {
            unPress(), onPressOut == null || onPressOut(e), onMouseUp == null || onMouseUp(e);
          } : void 0,
          ...(isHoverable || attachPress) && {
            onMouseEnter: (e) => {
              let next = {};
              needsHoverState && (next.hover = !0), runtimePressStyle && state.pressIn && (next.press = !0), setStateShallow(next), onHoverIn == null || onHoverIn(e), onMouseEnter == null || onMouseEnter(e);
            },
            onMouseLeave: (e) => {
              let next = {};
              mouseUps.add(unPress), needsHoverState && (next.hover = !1), runtimePressStyle && state.pressIn && (next.press = !1, next.pressIn = !1), setStateShallow(next), onHoverOut == null || onHoverOut(e), onMouseLeave == null || onMouseLeave(e);
            }
          },
          onPressIn: attachPress ? (e) => {
            runtimePressStyle && setStateShallow({
              press: !0,
              pressIn: !0
            }), onPressIn == null || onPressIn(e), onMouseDown == null || onMouseDown(e), import_constants.isWeb && mouseUps.add(unPress);
          } : void 0,
          onPress: attachPress ? (e) => {
            unPress(), import_constants.isWeb && (onClick == null || onClick(e)), onPress == null || onPress(e);
          } : void 0,
          ...attachPress && onLongPress && {
            onLongPress: (e) => {
              unPress(), onLongPress == null || onLongPress(e);
            }
          },
          ...attachFocus && {
            onFocus: (e) => {
              setStateShallow({
                focus: !0
              }), onFocus == null || onFocus(e);
            },
            onBlur: (e) => {
              setStateShallow({
                focus: !1
              }), onBlur == null || onBlur(e);
            }
          }
        } : null;
        events && !asChild && Object.assign(events, {
          cancelable: !viewProps.rejectResponderTermination,
          disabled: isDisabled,
          hitSlop: viewProps.hitSlop,
          delayLongPress: viewProps.delayLongPress,
          delayPressIn: viewProps.delayPressIn,
          delayPressOut: viewProps.delayPressOut,
          focusable: viewProps.focusable ?? !0,
          minPressDuration: 0
        }), process.env.NODE_ENV === "development" && time && time`events`, process.env.NODE_ENV === "development" && debugProp === "verbose" && console.info("events", { events, isHoverable, attachPress }), (_k = (_j = import_setupHooks.hooks).useEvents) == null || _k.call(_j, viewProps, events, splitStyles, setStateShallow, staticConfig);
        let direction = props.spaceDirection || "both";
        process.env.NODE_ENV === "development" && time && time`hooks`;
        let content = !children || asChild ? children : spacedChildren2({
          separator,
          children,
          space,
          direction,
          isZStack,
          debug: debugProp
        });
        asChild && (elementType = import_Slot.Slot, Object.assign(viewProps, { onPress, onLongPress })), process.env.NODE_ENV === "development" && time && time`spaced-as-child`, // in test mode disable perf unwrapping so react-testing-library finds Text properly
        process.env.NODE_ENV !== "test" && (elementType === BaseText || elementType === BaseView) ? process.env.TAMAGUI_OPTIMIZE_NATIVE_VIEWS ? (viewProps.children = content, content = (0, import_react2.createElement)(
          elementType === BaseText ? "RCTText" : "RCTView",
          viewProps
        )) : (viewProps.children = content, content = elementType.render(viewProps, viewProps.ref)) : content = (0, import_react2.createElement)(elementType, viewProps, content), import_setupHooks.hooks.useChildren && (content = (_m = (_l = import_setupHooks.hooks).useChildren) == null ? void 0 : _m.call(_l, content, viewProps, events, staticConfig)), process.env.NODE_ENV === "development" && time && time`create-element`;
        let subGroupContext = (0, import_react2.useMemo)(() => {
          if (groupName)
            return {
              ...componentContext.groups,
              // change reference so as we mutate it doesn't affect siblings etc
              state: {
                ...componentContext.groups.state,
                [groupName]: {
                  pseudo: initialState,
                  // capture just initial width and height if they exist
                  // will have top, left, width, height (not x, y)
                  layout: {
                    width: fromPx(splitStyles.style.width),
                    height: fromPx(splitStyles.style.height)
                  }
                }
              }
            };
        }, [groupName]);
        if (groupName && subGroupContext && (content = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_ComponentContext.ComponentContext.Provider, { groups: subGroupContext, children: content })), process.env.NODE_ENV === "development" && time && time`group-context`, content = disableThemeProp ? content : (0, import_Theme.useThemedChildren)(themeState, content, themeStateProps, !1), process.env.NODE_ENV === "development" && time && time`themed-children`, process.env.NODE_ENV === "development" && props.debug === "visualize" && (content = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_ThemeDebug.ThemeDebug, { themeState, themeProps: props, children: content })), staticConfig.context) {
          let contextProps = staticConfig.context.props;
          for (let key in contextProps)
            (key in style || key in viewProps) && (overriddenContextProps ||= {}, overriddenContextProps[key] = style[key] ?? viewProps[key]);
        }
        if (overriddenContextProps) {
          let Provider = staticConfig.context.Provider;
          content = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Provider, { ...contextValue, ...overriddenContextProps, children: content });
        }
        if (process.env.NODE_ENV === "development" && debugProp && debugProp !== "profile") {
          console.groupCollapsed(`render <${typeof elementType == "string" ? elementType : "Component"} /> with props`);
          try {
            console.info("viewProps", viewProps), console.info("viewPropsOrder", Object.keys(viewProps));
            for (let key in viewProps)
              console.info(" - ", key, viewProps[key]);
            console.info("children", content), typeof window < "u" && console.info({
              viewProps,
              state,
              styleProps,
              themeState,
              isAnimated,
              isAnimatedReactNativeWeb,
              defaultProps,
              splitStyles,
              animationStyles,
              handlesPressEvents,
              willBeAnimated,
              isStringElement,
              classNamesIn: (_n = props.className) == null ? void 0 : _n.split(" "),
              classNamesOut: (_o = viewProps.className) == null ? void 0 : _o.split(" "),
              events,
              shouldAttach,
              pseudos,
              content,
              shouldAvoidClasses,
              animation: props.animation,
              splitStylesStyle,
              staticConfig,
              tamaguiConfig,
              shouldForcePseudo,
              elementType,
              initialState,
              classNames
            });
          } catch {
          }
          console.groupEnd(), console.groupEnd();
        }
        return process.env.NODE_ENV === "development" && time && (time`rest`, globalThis.willPrint || (globalThis.willPrint = !0, setTimeout(() => {
          delete globalThis.willPrint, time.print(), time = null;
        }, 50))), content;
      });
      staticConfig.componentName && (component.displayName = staticConfig.componentName);
      let res = component;
      (process.env.TAMAGUI_FORCE_MEMO || staticConfig.memo) && (res = (0, import_react2.memo)(res)), res.staticConfig = staticConfig;
      function extendStyledConfig(extended) {
        return {
          ...staticConfig,
          ...extended,
          neverFlatten: !0,
          isHOC: !0,
          isStyledHOC: !1
        };
      }
      function extractable(Component2, extended) {
        return Component2.staticConfig = extendStyledConfig(extended), Component2.styleable = styleable, Component2;
      }
      function styleable(Component2, options) {
        var _a2;
        let ComponentForwardedRef = ((_a2 = Component2.render) == null ? void 0 : _a2.length) === 2 ? Component2 : (
          // memo because theme changes otherwise would always re-render
          (0, import_react2.memo)((0, import_react2.forwardRef)(Component2))
        ), extendedConfig = extendStyledConfig(options == null ? void 0 : options.staticConfig), out = options != null && options.disableTheme ? ComponentForwardedRef : (0, import_themeable.themeable)(ComponentForwardedRef, extendedConfig);
        return out.staticConfig = extendedConfig, out.styleable = styleable, out;
      }
      return res.extractable = extractable, res.styleable = styleable, res;
    }
    function Unspaced2(props) {
      return props.children;
    }
    Unspaced2.isUnspaced = !0;
    var getSpacerSize = (size2, { tokens }) => {
      size2 = size2 === !0 ? "$true" : size2;
      let sizePx = tokens.space[size2] ?? size2;
      return {
        width: sizePx,
        height: sizePx,
        minWidth: sizePx,
        minHeight: sizePx
      };
    }, Spacer2 = createComponent2({
      acceptsClassName: !0,
      memo: !0,
      componentName: "Spacer",
      validStyles: import_helpers.validStyles,
      defaultProps: {
        ...import_constants2.stackDefaultStyles,
        // avoid nesting issues
        tag: "span",
        size: !0,
        pointerEvents: "none"
      },
      variants: {
        size: {
          "...": getSpacerSize
        },
        flex: {
          true: {
            flexGrow: 1
          }
        },
        direction: {
          horizontal: {
            height: 0,
            minHeight: 0
          },
          vertical: {
            width: 0,
            minWidth: 0
          },
          both: {}
        }
      }
    });
    function spacedChildren2(props) {
      var _a, _b, _c;
      let { isZStack, children, space, direction, spaceFlex, separator } = props, hasSpace = !!(space || spaceFlex), hasSeparator = separator != null;
      if (!(hasSpace || hasSeparator || isZStack))
        return children;
      let childrenList = import_react2.Children.toArray(children);
      if (childrenList.length <= 1 && !isZStack && !((_b = (_a = childrenList[0]) == null ? void 0 : _a.type) != null && _b.shouldForwardSpace))
        return childrenList;
      let final = [];
      for (let [index, child] of childrenList.entries()) {
        let isEmpty = child == null || Array.isArray(child) && child.length === 0;
        if (!isEmpty && import_react2.default.isValidElement(child) && (_c = child.type) != null && _c.shouldForwardSpace && (child = import_react2.default.cloneElement(child, {
          space,
          spaceFlex,
          separator,
          key: child.key
        })), isEmpty || !child || child.key && !isZStack ? final.push(child) : final.push(
          /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_react2.Fragment, { children: isZStack ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AbsoluteFill, { children: child }) : child }, index)
        ), isUnspaced(child) && index === 0 || isZStack)
          continue;
        let next = childrenList[index + 1];
        next && !isUnspaced(next) && (separator ? (hasSpace && final.push(
          createSpacer({
            key: `_${index}_00tmgui`,
            direction,
            space,
            spaceFlex
          })
        ), final.push(
          import_react2.default.isValidElement(separator) ? import_react2.default.cloneElement(separator, { key: `sep_${index}` }) : separator
        ), hasSpace && final.push(
          createSpacer({
            key: `_${index}01tmgui`,
            direction,
            space,
            spaceFlex
          })
        )) : final.push(
          createSpacer({
            key: `_${index}02tmgui`,
            direction,
            space,
            spaceFlex
          })
        ));
      }
      return process.env.NODE_ENV === "development" && props.debug && console.info("  Spaced children", final, props), final;
    }
    function createSpacer({ key, direction, space, spaceFlex }) {
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        Spacer2,
        {
          size: space,
          direction,
          ...typeof spaceFlex < "u" && {
            flex: spaceFlex === !0 ? 1 : spaceFlex === !1 ? 0 : spaceFlex
          }
        },
        key
      );
    }
    function isUnspaced(child) {
      let t = child == null ? void 0 : child.type;
      return (t == null ? void 0 : t.isVisuallyHidden) || (t == null ? void 0 : t.isUnspaced);
    }
    var AbsoluteFill = createComponent2({
      defaultProps: {
        ...import_constants2.stackDefaultStyles,
        flexDirection: "column",
        position: "absolute",
        top: 0,
        right: 0,
        bottom: 0,
        left: 0,
        pointerEvents: "box-none"
      }
    });
    function hasAnimatedStyleValue(style) {
      return Object.keys(style).some((k) => {
        let val = style[k];
        return val && typeof val == "object" && "_animation" in val;
      });
    }
    function getMediaState(mediaGroups, layout) {
      return Object.fromEntries(
        [...mediaGroups].map((mediaKey) => [mediaKey, (0, import_useMedia.mediaKeyMatch)(mediaKey, layout)])
      );
    }
    var fromPx = (val) => typeof val != "string" ? val : +val.replace("px", "");
  }
});

// ../web/dist/cjs/createShorthands.native.js
var require_createShorthands_native = __commonJS({
  "../web/dist/cjs/createShorthands.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createShorthands_exports = {};
    __export2(createShorthands_exports, {
      createShorthands: () => createShorthands2
    });
    module2.exports = __toCommonJS2(createShorthands_exports);
    function createShorthands2(shorthands) {
      return Object.freeze(shorthands);
    }
  }
});

// ../web/dist/cjs/createTheme.native.js
var require_createTheme_native = __commonJS({
  "../web/dist/cjs/createTheme.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createTheme_exports = {};
    __export2(createTheme_exports, {
      createTheme: () => createTheme2
    });
    module2.exports = __toCommonJS2(createTheme_exports);
    var createTheme2 = (theme) => theme;
  }
});

// ../web/dist/cjs/createVariables.native.js
var require_createVariables_native = __commonJS({
  "../web/dist/cjs/createVariables.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createVariables_exports = {};
    __export2(createVariables_exports, {
      createVariables: () => createVariables
    });
    module2.exports = __toCommonJS2(createVariables_exports);
    var import_helpers = require_index_native4(), import_createVariable = require_createVariable_native(), cache = /* @__PURE__ */ new WeakMap(), createVariables = (tokens, parentPath = "", isFont = !1) => {
      if (cache.has(tokens))
        return tokens;
      let res = {}, i = 0;
      for (let keyIn in tokens) {
        i++;
        let val = tokens[keyIn], isPrefixed = keyIn[0] === "$", keyWithPrefix = isPrefixed ? keyIn : `$${keyIn}`, key = isPrefixed ? keyWithPrefix.slice(1) : keyIn;
        if ((0, import_createVariable.isVariable)(val)) {
          res[key] = val;
          continue;
        }
        let niceKey = (0, import_helpers.simpleHash)(key), name = isFont ? niceKey.slice(0, 2) : i;
        if (name = parentPath ? `${parentPath}-${name}` : niceKey, val && typeof val == "object") {
          res[key] = createVariables(
            tokens[key],
            name,
            !1
            /* note: don't pass isFont down, we want to avoid it past the first level */
          );
          continue;
        }
        let finalValue = (0, import_createVariable.isVariable)(val) ? val : (0, import_createVariable.createVariable)({ val, name, key: keyWithPrefix });
        res[key] = finalValue;
      }
      return cache.set(res, !0), res;
    };
  }
});

// ../web/dist/cjs/helpers/getThemeCSSRules.native.js
var require_getThemeCSSRules_native = __commonJS({
  "../web/dist/cjs/helpers/getThemeCSSRules.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getThemeCSSRules_native_exports = {};
    __export2(getThemeCSSRules_native_exports, {
      getThemeCSSRules: () => getThemeCSSRules
    });
    module2.exports = __toCommonJS2(getThemeCSSRules_native_exports);
    function getThemeCSSRules() {
      return [];
    }
  }
});

// ../web/dist/cjs/helpers/proxyThemeToParents.native.js
var require_proxyThemeToParents_native = __commonJS({
  "../web/dist/cjs/helpers/proxyThemeToParents.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), proxyThemeToParents_exports = {};
    __export2(proxyThemeToParents_exports, {
      proxyThemeToParents: () => proxyThemeToParents,
      proxyThemesToParents: () => proxyThemesToParents,
      themesRaw: () => themesRaw
    });
    module2.exports = __toCommonJS2(proxyThemeToParents_exports);
    var import_config = require_config_native(), import_getThemeUnwrapped = require_getThemeUnwrapped_native(), themesRaw = {};
    function proxyThemesToParents(dedupedThemes) {
      for (let { names, theme } of dedupedThemes)
        for (let name of names)
          themesRaw[name] = theme;
      let themes = {};
      for (let { names, theme } of dedupedThemes)
        for (let themeName of names) {
          let proxiedTheme = proxyThemeToParents(themeName, theme);
          themes[themeName] = proxiedTheme;
        }
      return themes;
    }
    function proxyThemeToParents(themeName, theme) {
      let cur = [], parents = themeName.split("_").slice(0, -1).map((part) => (cur.push(part), cur.join("_"))), numParents = parents.length;
      return new Proxy(theme, {
        get(target, key) {
          if (key === import_getThemeUnwrapped.GetThemeUnwrapped)
            return theme;
          if (key == null || // dont ask me, idk why but on hermes you can see that useTheme()[undefined] passes in STRING undefined to proxy
          // if someone is crazy enough to use "undefined" as a theme key then this not working is on them
          key == "undefined" || Reflect.has(target, key))
            return Reflect.get(target, key);
          for (let i = numParents - 1; i >= 0; i--) {
            let parent = themesRaw[parents[i]];
            if (parent && Reflect.has(parent, key))
              return Reflect.get(parent, key);
          }
          return (0, import_config.getTokenObject)(key) ?? Reflect.get(target, key);
        }
      });
    }
  }
});

// ../web/dist/cjs/helpers/registerCSSVariable.native.js
var require_registerCSSVariable_native = __commonJS({
  "../web/dist/cjs/helpers/registerCSSVariable.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), registerCSSVariable_exports = {};
    __export2(registerCSSVariable_exports, {
      registerCSSVariable: () => registerCSSVariable,
      tokensValueToVariable: () => tokensValueToVariable,
      variableToCSS: () => variableToCSS
    });
    module2.exports = __toCommonJS2(registerCSSVariable_exports);
    var import_createVariable = require_createVariable_native(), registerCSSVariable = (v) => {
      tokensValueToVariable.set((0, import_createVariable.getVariableValue)(v), v);
    }, variableToCSS = (v, unitless = !1) => `--${(0, import_createVariable.createCSSVariable)(v.name, !1)}:${!unitless && typeof v.val == "number" ? `${v.val}px` : v.val}`, tokensValueToVariable = /* @__PURE__ */ new Map();
  }
});

// ../web/dist/cjs/helpers/themes.native.js
var require_themes_native = __commonJS({
  "../web/dist/cjs/helpers/themes.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), themes_exports = {};
    __export2(themes_exports, {
      ensureThemeVariable: () => ensureThemeVariable
    });
    module2.exports = __toCommonJS2(themes_exports);
    var import_createVariable = require_createVariable_native();
    function ensureThemeVariable(theme, key) {
      let val = theme[key], themeKey = key;
      (0, import_createVariable.isVariable)(val) ? val.name !== themeKey && (theme[key] = (0, import_createVariable.createVariable)({
        key: val.name,
        name: themeKey,
        val: val.val
      })) : theme[key] = (0, import_createVariable.createVariable)({
        key: themeKey,
        name: themeKey,
        val
      });
    }
  }
});

// ../web/dist/cjs/createFont.native.js
var require_createFont_native = __commonJS({
  "../web/dist/cjs/createFont.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createFont_exports = {};
    __export2(createFont_exports, {
      createFont: () => createFont2
    });
    module2.exports = __toCommonJS2(createFont_exports);
    var fontWeights = [
      "100",
      "200",
      "300",
      "400",
      "500",
      "600",
      "700",
      "800",
      "900"
    ], processSection = (section, keys, defaultValue) => {
      if (typeof section == "string")
        return section;
      let sectionKeys = Object.keys(section), fillValue = section[sectionKeys[0]];
      return Object.fromEntries(
        [.../* @__PURE__ */ new Set([...keys, ...sectionKeys])].map((key) => {
          let value = section[key] ?? defaultValue ?? fillValue;
          return fillValue = value, defaultValue = value, [key, value];
        })
      );
    }, createFont2 = (font) => {
      let sizeKeys = Object.keys(font.size), processedFont = Object.fromEntries(
        Object.entries(font).map(([key, section]) => [
          key,
          processSection(
            section,
            key === "face" ? fontWeights : sizeKeys,
            key === "face" ? { normal: font.family } : void 0
          )
        ])
      );
      return Object.freeze(processedFont);
    };
  }
});

// ../web/dist/cjs/insertFont.native.js
var require_insertFont_native = __commonJS({
  "../web/dist/cjs/insertFont.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), insertFont_exports = {};
    __export2(insertFont_exports, {
      insertFont: () => insertFont2,
      parseFont: () => parseFont,
      registerFontVariables: () => registerFontVariables,
      updateFont: () => updateFont
    });
    module2.exports = __toCommonJS2(insertFont_exports);
    var import_config = require_config_native(), import_createFont = require_createFont_native(), import_createVariables = require_createVariables_native(), import_registerCSSVariable = require_registerCSSVariable_native();
    function insertFont2(name, fontIn) {
      let font = (0, import_createFont.createFont)(fontIn), tokened = (0, import_createVariables.createVariables)(font, name), parsed = parseFont(tokened);
      return (0, import_config.setConfigFont)(name, tokened, parsed), parsed;
    }
    var updateFont = insertFont2;
    function parseFont(definition) {
      var _a;
      let parsed = {};
      for (let attrKey in definition) {
        let attr = definition[attrKey];
        if (attrKey === "family" || attrKey === "face")
          parsed[attrKey] = attr;
        else {
          parsed[attrKey] = {};
          for (let key in attr) {
            let val = attr[key];
            ((_a = val.val) == null ? void 0 : _a[0]) === "$" && (val = val.val), parsed[attrKey][`$${key}`] = val;
          }
        }
      }
      return parsed;
    }
    function registerFontVariables(parsedFont) {
      let response = [];
      for (let fkey in parsedFont)
        if (fkey !== "face") {
          if (fkey === "family") {
            let val = parsedFont[fkey];
            (0, import_registerCSSVariable.registerCSSVariable)(val), response.push((0, import_registerCSSVariable.variableToCSS)(val));
          } else
            for (let fskey in parsedFont[fkey])
              if (typeof parsedFont[fkey][fskey] != "string") {
                let val = parsedFont[fkey][fskey];
                (0, import_registerCSSVariable.registerCSSVariable)(val), response.push((0, import_registerCSSVariable.variableToCSS)(val));
              }
        }
      return response;
    }
  }
});

// ../web/dist/cjs/createTamagui.native.js
var require_createTamagui_native = __commonJS({
  "../web/dist/cjs/createTamagui.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createTamagui_exports = {};
    __export2(createTamagui_exports, {
      createTamagui: () => createTamagui2
    });
    module2.exports = __toCommonJS2(createTamagui_exports);
    var import_constants = require_index_native2(), import_config = require_config_native(), import_createVariables = require_createVariables_native(), import_getThemeCSSRules = require_getThemeCSSRules_native(), import_insertStyleRule = require_insertStyleRule_native(), import_proxyThemeToParents = require_proxyThemeToParents_native(), import_registerCSSVariable = require_registerCSSVariable_native(), import_themes = require_themes_native(), import_useMedia = require_useMedia_native(), import_insertFont = require_insertFont_native(), import_Tamagui = require_Tamagui_native(), createdConfigs = /* @__PURE__ */ new WeakMap();
    function createTamagui2(configIn) {
      var _a;
      if (createdConfigs.has(configIn))
        return configIn;
      let tokensParsed = {}, tokens = (0, import_createVariables.createVariables)(configIn.tokens || {});
      if (configIn.tokens) {
        let tokensMerged = {};
        for (let cat in tokens) {
          tokensParsed[cat] = {}, tokensMerged[cat] = {};
          let tokenCat = tokens[cat];
          for (let key in tokenCat) {
            let val = tokenCat[key], prefixedKey = `$${key}`;
            tokensParsed[cat][prefixedKey] = val, tokensMerged[cat][prefixedKey] = val, tokensMerged[cat][key] = val;
          }
        }
        (0, import_config.setTokens)(tokensMerged);
      }
      let foundThemes;
      if (configIn.themes) {
        let noThemes = Object.keys(configIn.themes).length === 0;
        foundThemes = (0, import_insertStyleRule.scanAllSheets)(noThemes, tokensParsed);
      }
      (0, import_insertStyleRule.listenForSheetChanges)();
      let fontSizeTokens = null, fontsParsed;
      if (configIn.fonts) {
        let fontTokens = Object.fromEntries(
          Object.entries(configIn.fonts).map(([k, v]) => [k, (0, import_createVariables.createVariables)(v, "f", !0)])
        );
        fontsParsed = (() => {
          let res = {};
          for (let familyName in fontTokens) {
            let font = fontTokens[familyName], fontParsed = (0, import_insertFont.parseFont)(font);
            res[`$${familyName}`] = fontParsed, !fontSizeTokens && fontParsed.size && (fontSizeTokens = new Set(Object.keys(fontParsed.size)));
          }
          return res;
        })();
      }
      let specificTokens = {}, themeConfig = (() => {
        let cssRuleSets = [];
        if (process.env.TAMAGUI_DOES_SSR_CSS !== "true" && // we can leave this out if mutating, only need the js for getThemeCSSRules
        process.env.TAMAGUI_DOES_SSR_CSS !== "mutates-themes") {
          let declarations = [], fontDeclarations = {};
          for (let key in tokens)
            for (let skey in tokens[key]) {
              let variable = tokens[key][skey];
              if (specificTokens[`$${key}.${skey}`] = variable, process.env.NODE_ENV === "development" && typeof variable > "u")
                throw new Error(
                  `No value for tokens.${key}.${skey}:
${JSON.stringify(
                    variable,
                    null,
                    2
                  )}`
                );
              import_constants.isWeb && ((0, import_registerCSSVariable.registerCSSVariable)(variable), declarations.push((0, import_registerCSSVariable.variableToCSS)(variable, key === "zIndex")));
            }
          if (import_constants.isWeb) {
            let declarationsToRuleSet2 = function(decs, selector = "") {
              return `:root${selector} {${sep}${[...decs].join(`;${sep}`)}${sep}}`;
            };
            var declarationsToRuleSet = declarationsToRuleSet2;
            for (let key in fontsParsed) {
              let fontParsed = fontsParsed[key], [name, language] = key.includes("_") ? key.split("_") : [key], fontVars = (0, import_insertFont.registerFontVariables)(fontParsed);
              fontDeclarations[key] = {
                name: name.slice(1),
                declarations: fontVars,
                language
              };
            }
            let sep = process.env.NODE_ENV === "development" ? configIn.cssStyleSeparator || " " : "";
            if (cssRuleSets.push(declarationsToRuleSet2(declarations)), fontDeclarations)
              for (let key in fontDeclarations) {
                let { name, declarations: declarations2, language = "default" } = fontDeclarations[key], fontSelector = `.font_${name}`, langSelector = `:root .t_lang-${name}-${language} ${fontSelector}`, selectors = language === "default" ? ` ${fontSelector}, ${langSelector}` : langSelector, specificRuleSet = declarationsToRuleSet2(declarations2, selectors);
                cssRuleSets.push(specificRuleSet);
              }
          }
        }
        let themesIn = { ...configIn.themes }, dedupedThemes = foundThemes ?? getThemesDeduped(themesIn);
        return {
          themes: (0, import_proxyThemeToParents.proxyThemesToParents)(dedupedThemes),
          cssRuleSets,
          getThemeRulesSets() {
            let themeRuleSets = [];
            if (import_constants.isWeb)
              for (let { names, theme } of dedupedThemes) {
                let nextRules = (0, import_getThemeCSSRules.getThemeCSSRules)({
                  config: configIn,
                  themeName: names[0],
                  names,
                  theme
                });
                themeRuleSets = [...themeRuleSets, ...nextRules];
              }
            return themeRuleSets;
          }
        };
      })(), shorthands = configIn.shorthands || {}, lastCSSInsertedRulesIndex = -1, getCSS = ({ separator = `
`, sinceLastCall, exclude } = {}) => {
        if (sinceLastCall && lastCSSInsertedRulesIndex >= 0) {
          let rules = (0, import_insertStyleRule.getAllRules)();
          return lastCSSInsertedRulesIndex = rules.length, rules.slice(lastCSSInsertedRulesIndex).join(separator);
        }
        lastCSSInsertedRulesIndex = 0;
        let runtimeStyles = (0, import_insertStyleRule.getAllRules)().join(separator);
        return exclude === "design-system" ? runtimeStyles : `${`._ovs-contain {overscroll-behavior:contain;}
.is_Text .is_Text {display:inline-flex;}
._dsp_contents {display:contents;}
${themeConfig.cssRuleSets.join(separator)}`}
${exclude ? "" : themeConfig.getThemeRulesSets().join(separator)}
${runtimeStyles}`;
      }, getNewCSS = (opts) => getCSS({ ...opts, sinceLastCall: !0 }), defaultFontName = configIn.defaultFont || // uses font named "body" if present for compat
      configIn.fonts && ("body" in configIn.fonts ? "body" : "");
      !defaultFontName && configIn.fonts && (defaultFontName = Object.keys(configIn.fonts)[0]), (defaultFontName == null ? void 0 : defaultFontName[0]) === "$" && (defaultFontName = defaultFontName.slice(1));
      let defaultFont = `$${defaultFontName}`, config = {
        fonts: {},
        settings: {},
        onlyAllowShorthands: !1,
        fontLanguages: [],
        animations: {},
        media: {},
        ...configIn,
        tokens,
        // vite made this into a function if it wasn't set
        shorthands,
        inverseShorthands: shorthands ? Object.fromEntries(Object.entries(shorthands).map(([k, v]) => [v, k])) : {},
        themes: themeConfig.themes,
        fontsParsed: fontsParsed || {},
        themeConfig,
        tokensParsed,
        parsed: !0,
        getNewCSS,
        getCSS,
        defaultFont,
        fontSizeTokens: fontSizeTokens || /* @__PURE__ */ new Set(),
        specificTokens
        // const tokens = [...getToken(tokens.size[0])]
        // .spacer-sm + ._dsp_contents._dsp-sm-hidden { margin-left: -var(--${}) }
      };
      return (0, import_useMedia.configureMedia)(config), (0, import_config.setConfig)(config), import_config.configListeners.size && (import_config.configListeners.forEach((cb) => cb(config)), import_config.configListeners.clear()), createdConfigs.set(config, !0), process.env.NODE_ENV === "development" && ((_a = process.env.DEBUG) != null && _a.startsWith("tamagui") && console.info("Tamagui config:", config), globalThis.Tamagui || (globalThis.Tamagui = import_Tamagui.Tamagui)), config;
    }
    function getThemesDeduped(themes) {
      let dedupedThemes = [], existing = /* @__PURE__ */ new Map();
      for (let themeName in themes) {
        let darkOrLightSpecificPrefix = themeName.startsWith("dark") ? "dark" : themeName.startsWith("light") ? "light" : "", rawTheme = themes[themeName], key = darkOrLightSpecificPrefix + JSON.stringify(rawTheme);
        if (existing.has(key)) {
          existing.get(key).names.push(themeName);
          continue;
        }
        let theme = { ...rawTheme };
        for (let key2 in theme)
          (0, import_themes.ensureThemeVariable)(theme, key2);
        let deduped = {
          names: [themeName],
          theme
        };
        dedupedThemes.push(deduped), existing.set(key, deduped);
      }
      return dedupedThemes;
    }
  }
});

// ../web/dist/cjs/createTokens.native.js
var require_createTokens_native = __commonJS({
  "../web/dist/cjs/createTokens.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createTokens_exports = {};
    __export2(createTokens_exports, {
      createTokens: () => createTokens2
    });
    module2.exports = __toCommonJS2(createTokens_exports);
    var import_createVariables = require_createVariables_native();
    function createTokens2(tokens) {
      return (0, import_createVariables.createVariables)(tokens);
    }
  }
});

// ../web/dist/cjs/helpers/mergeVariants.native.js
var require_mergeVariants_native = __commonJS({
  "../web/dist/cjs/helpers/mergeVariants.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), mergeVariants_exports = {};
    __export2(mergeVariants_exports, {
      mergeVariants: () => mergeVariants
    });
    module2.exports = __toCommonJS2(mergeVariants_exports);
    var mergeVariants = (parentVariants, ourVariants) => {
      let variants = {};
      for (let key in ourVariants) {
        let parentVariant = parentVariants == null ? void 0 : parentVariants[key], ourVariant = ourVariants[key];
        if (!parentVariant || typeof ourVariant == "function") {
          variants[key] = ourVariant;
          continue;
        }
        if (parentVariant && !ourVariant) {
          variants[key] = parentVariant[key];
          continue;
        }
        variants[key] = {};
        for (let subKey in ourVariant) {
          let val = ourVariant[subKey], parentVal = parentVariant == null ? void 0 : parentVariant[subKey];
          typeof val == "function" || !parentVal || typeof parentVal == "function" ? variants[key][subKey] = val : variants[key][subKey] = {
            // keep order
            ...parentVal,
            ...val
          };
        }
        parentVariant && (variants[key] = {
          ...parentVariant,
          ...variants[key]
        });
      }
      return {
        ...parentVariants,
        ...variants
      };
    };
  }
});

// ../web/dist/cjs/setupReactNative.native.js
var require_setupReactNative_native = __commonJS({
  "../web/dist/cjs/setupReactNative.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), setupReactNative_exports = {};
    __export2(setupReactNative_exports, {
      getReactNativeConfig: () => getReactNativeConfig,
      setupReactNative: () => setupReactNative2
    });
    module2.exports = __toCommonJS2(setupReactNative_exports);
    function getReactNativeConfig(Component) {
      var _a, _b, _c;
      if (Component)
        return (_a = Component.propTypes) != null && _a.onTextInput || (_b = Component.propTypes) != null && _b.onChangeText ? RNConfigs.TextInput : Component.getSizeWithHeaders ? RNConfigs.Image : (_c = Component.propTypes) != null && _c.textBreakStrategy ? RNConfigs.Text : RNConfigs.default;
    }
    var RNConfigs = {
      Image: {
        isReactNative: !0,
        inlineProps: /* @__PURE__ */ new Set(["src", "width", "height"])
      },
      Text: {
        isReactNative: !0,
        isText: !0
      },
      TextInput: {
        isReactNative: !0,
        isInput: !0,
        isText: !0
      },
      default: {
        isReactNative: !0
      }
    };
    function setupReactNative2(rnExports) {
    }
  }
});

// ../web/dist/cjs/styled.native.js
var require_styled_native = __commonJS({
  "../web/dist/cjs/styled.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), styled_exports = {};
    __export2(styled_exports, {
      styled: () => styled9
    });
    module2.exports = __toCommonJS2(styled_exports);
    var import_createComponent = require_createComponent_native(), import_mergeVariants = require_mergeVariants_native(), import_setupReactNative = require_setupReactNative_native();
    function styled9(ComponentIn, options, staticExtractionOptions) {
      if (process.env.NODE_ENV !== "production" && !ComponentIn)
        throw new Error("No component given to styled()");
      let parentStaticConfig = ComponentIn.staticConfig, isPlainStyledComponent = !!parentStaticConfig && !(parentStaticConfig.isReactNative || parentStaticConfig.isHOC), Component = parentStaticConfig != null && parentStaticConfig.isHOC && !(parentStaticConfig != null && parentStaticConfig.isStyledHOC) || isPlainStyledComponent ? ComponentIn : (parentStaticConfig == null ? void 0 : parentStaticConfig.Component) || ComponentIn, reactNativeConfig = parentStaticConfig ? void 0 : (0, import_setupReactNative.getReactNativeConfig)(Component), isReactNative = !!(reactNativeConfig || staticExtractionOptions != null && staticExtractionOptions.isReactNative || parentStaticConfig != null && parentStaticConfig.isReactNative), staticConfigProps = (() => {
        if (options) {
          let {
            variants,
            name,
            defaultVariants,
            acceptsClassName: acceptsClassNameProp,
            context,
            ...defaultProps
          } = options;
          defaultVariants && (defaultProps = {
            ...defaultVariants,
            ...defaultProps
          }), parentStaticConfig && (parentStaticConfig.isHOC && !parentStaticConfig.isStyledHOC || (defaultProps = {
            ...parentStaticConfig.defaultProps,
            ...defaultProps
          }, parentStaticConfig.variants && (variants = (0, import_mergeVariants.mergeVariants)(parentStaticConfig.variants, variants)))), parentStaticConfig != null && parentStaticConfig.isHOC && name && (defaultProps.componentName = name);
          let isText = !!(staticExtractionOptions != null && staticExtractionOptions.isText || parentStaticConfig != null && parentStaticConfig.isText), acceptsClassName = acceptsClassNameProp ?? (isPlainStyledComponent || isReactNative || (parentStaticConfig == null ? void 0 : parentStaticConfig.isHOC) && (parentStaticConfig == null ? void 0 : parentStaticConfig.acceptsClassName)), conf = {
            ...parentStaticConfig,
            ...staticExtractionOptions,
            ...!isPlainStyledComponent && {
              Component
            },
            // this type gets messed up by options?: Partial<GetProps<ParentComponent>> above
            // take away the Partial<> and it's fine
            variants,
            defaultProps,
            defaultVariants,
            componentName: name || (parentStaticConfig == null ? void 0 : parentStaticConfig.componentName),
            isReactNative,
            isText,
            acceptsClassName,
            context,
            ...reactNativeConfig,
            isStyledHOC: !!(parentStaticConfig != null && parentStaticConfig.isHOC),
            parentStaticConfig
          };
          return (defaultProps.children || !acceptsClassName || context) && (conf.neverFlatten = !0), conf;
        }
      })(), component = (0, import_createComponent.createComponent)(staticConfigProps || {});
      for (let key in ComponentIn)
        key in component || (component[key] = ComponentIn[key]);
      return component;
    }
  }
});

// ../web/dist/cjs/types.native.js
var require_types_native2 = __commonJS({
  "../web/dist/cjs/types.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), types_exports = {};
    module2.exports = __toCommonJS2(types_exports);
  }
});

// ../web/dist/cjs/interfaces/GetRef.native.js
var require_GetRef_native = __commonJS({
  "../web/dist/cjs/interfaces/GetRef.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), GetRef_exports = {};
    module2.exports = __toCommonJS2(GetRef_exports);
  }
});

// ../web/dist/cjs/helpers/getExpandedShorthands.native.js
var require_getExpandedShorthands_native = __commonJS({
  "../web/dist/cjs/helpers/getExpandedShorthands.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getExpandedShorthands_exports = {};
    __export2(getExpandedShorthands_exports, {
      getExpandedShorthands: () => getExpandedShorthands
    });
    module2.exports = __toCommonJS2(getExpandedShorthands_exports);
    var import_config = require_config_native();
    function getExpandedShorthands(props) {
      let shorthands = (0, import_config.getConfig)().shorthands;
      if (!shorthands)
        return props;
      let res = {};
      for (let key in props)
        res[shorthands[key] || key] = props[key];
      return res;
    }
  }
});

// ../web/dist/cjs/helpers/isTamaguiComponent.native.js
var require_isTamaguiComponent_native = __commonJS({
  "../web/dist/cjs/helpers/isTamaguiComponent.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), isTamaguiComponent_exports = {};
    __export2(isTamaguiComponent_exports, {
      isTamaguiComponent: () => isTamaguiComponent2
    });
    module2.exports = __toCommonJS2(isTamaguiComponent_exports);
    function isTamaguiComponent2(comp, name) {
      let config = comp == null ? void 0 : comp.staticConfig;
      return !!(config && (!name || name === config.componentName));
    }
  }
});

// ../web/dist/cjs/helpers/isTamaguiElement.native.js
var require_isTamaguiElement_native = __commonJS({
  "../web/dist/cjs/helpers/isTamaguiElement.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), isTamaguiElement_exports = {};
    __export2(isTamaguiElement_exports, {
      isTamaguiElement: () => isTamaguiElement2
    });
    module2.exports = __toCommonJS2(isTamaguiElement_exports);
    var import_react2 = require("react"), import_isTamaguiComponent = require_isTamaguiComponent_native(), isTamaguiElement2 = (child, name) => (0, import_react2.isValidElement)(child) && (0, import_isTamaguiComponent.isTamaguiComponent)(child.type, name);
  }
});

// ../web/dist/cjs/helpers/withStaticProperties.native.js
var require_withStaticProperties_native = __commonJS({
  "../web/dist/cjs/helpers/withStaticProperties.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), withStaticProperties_exports = {};
    __export2(withStaticProperties_exports, {
      withStaticProperties: () => withStaticProperties2
    });
    module2.exports = __toCommonJS2(withStaticProperties_exports);
    var import_react2 = require("react"), Decorated = Symbol(), withStaticProperties2 = function(component, staticProps) {
      let next = (() => {
        if (component[Decorated]) {
          let _ = (0, import_react2.forwardRef)(
            (props, ref) => (0, import_react2.createElement)(component, { ...props, ref })
          );
          for (let key in component) {
            let v = component[key];
            _[key] = v && typeof v == "object" ? { ...v } : v;
          }
        }
        return component;
      })();
      return Object.assign(next, staticProps), next[Decorated] = !0, next;
    };
  }
});

// ../web/dist/cjs/hooks/useThemeName.native.js
var require_useThemeName_native = __commonJS({
  "../web/dist/cjs/hooks/useThemeName.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useThemeName_exports = {};
    __export2(useThemeName_exports, {
      useThemeName: () => useThemeName2
    });
    module2.exports = __toCommonJS2(useThemeName_exports);
    var import_constants = require_index_native2(), import_react2 = require("react"), import_ThemeManagerContext = require_ThemeManagerContext_native();
    function useThemeName2(opts) {
      let manager = (0, import_react2.useContext)(import_ThemeManagerContext.ThemeManagerContext), [name, setName] = (0, import_react2.useState)((manager == null ? void 0 : manager.state.name) || "");
      return (0, import_constants.useIsomorphicLayoutEffect)(() => {
        if (manager)
          return setName(manager.state.name), manager.onChangeTheme((next, manager2) => {
            let name2 = opts != null && opts.parent && manager2.state.parentName || next;
            name2 && setName(name2);
          });
      }, [manager == null ? void 0 : manager.state.name]), name;
    }
  }
});

// ../web/dist/cjs/hooks/useConfiguration.native.js
var require_useConfiguration_native = __commonJS({
  "../web/dist/cjs/hooks/useConfiguration.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useConfiguration_exports = {};
    __export2(useConfiguration_exports, {
      useConfiguration: () => useConfiguration2
    });
    module2.exports = __toCommonJS2(useConfiguration_exports);
    var import_react2 = require("react"), import_config = require_config_native(), import_ComponentContext = require_ComponentContext_native(), useConfiguration2 = () => {
      let { groups, animationDriver, ...restComponentConfig } = (0, import_react2.useContext)(import_ComponentContext.ComponentContext), { animations, ...restConfig } = (0, import_config.getConfig)();
      return {
        ...restConfig,
        ...restComponentConfig,
        animationDriver: animationDriver ?? (0, import_config.getConfig)().animations
      };
    };
  }
});

// ../web/dist/cjs/hooks/useIsTouchDevice.native.js
var require_useIsTouchDevice_native = __commonJS({
  "../web/dist/cjs/hooks/useIsTouchDevice.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useIsTouchDevice_exports = {};
    __export2(useIsTouchDevice_exports, {
      useIsTouchDevice: () => useIsTouchDevice2
    });
    module2.exports = __toCommonJS2(useIsTouchDevice_exports);
    var import_constants = require_index_native2(), import_use_did_finish_ssr = require_index_native6(), useIsTouchDevice2 = () => import_constants.isWeb ? (0, import_use_did_finish_ssr.useDidFinishSSR)() ? import_constants.isTouchable : !1 : !0;
  }
});

// ../web/dist/cjs/views/Stack.native.js
var require_Stack_native = __commonJS({
  "../web/dist/cjs/views/Stack.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Stack_exports = {};
    __export2(Stack_exports, {
      Stack: () => Stack3
    });
    module2.exports = __toCommonJS2(Stack_exports);
    var import_helpers = require_index_native4(), import_constants = require_constants_native2(), import_createComponent = require_createComponent_native(), Stack3 = (0, import_createComponent.createComponent)({
      acceptsClassName: !0,
      defaultProps: import_constants.stackDefaultStyles,
      validStyles: import_helpers.validStyles
    });
  }
});

// ../web/dist/cjs/hooks/useProps.native.js
var require_useProps_native = __commonJS({
  "../web/dist/cjs/hooks/useProps.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useProps_exports = {};
    __export2(useProps_exports, {
      useProps: () => useProps2,
      usePropsAndStyle: () => usePropsAndStyle2,
      useStyle: () => useStyle2
    });
    module2.exports = __toCommonJS2(useProps_exports);
    var import_react2 = require("react"), import_ComponentContext = require_ComponentContext_native(), import_defaultComponentState = require_defaultComponentState_native(), import_getSplitStyles = require_getSplitStyles_native(), import_Stack = require_Stack_native(), import_useMedia = require_useMedia_native(), import_useTheme = require_useTheme_native();
    function useProps2(props, opts) {
      let [propsOut, styleOut] = usePropsAndStyle2(props, {
        ...opts,
        noExpand: !0,
        noNormalize: !0,
        resolveValues: "none"
      });
      return {
        ...propsOut,
        ...styleOut
      };
    }
    function useStyle2(props, opts) {
      return usePropsAndStyle2(props, opts)[1];
    }
    function usePropsAndStyle2(props, opts) {
      var _a, _b;
      let staticConfig = ((_a = opts == null ? void 0 : opts.forComponent) == null ? void 0 : _a.staticConfig) ?? import_Stack.Stack.staticConfig, [themeState, theme] = (0, import_useTheme.useThemeWithState)({
        componentName: staticConfig.componentName
      }), componentContext = (0, import_react2.useContext)(import_ComponentContext.ComponentContext), media = (0, import_useMedia.useMedia)(), splitStyles = (0, import_getSplitStyles.useSplitStyles)(
        props,
        staticConfig,
        theme,
        ((_b = themeState.state) == null ? void 0 : _b.name) || "",
        import_defaultComponentState.defaultComponentStateMounted,
        {
          isAnimated: !1,
          mediaState: media,
          noSkip: !0,
          noClassNames: !0,
          resolveValues: "auto",
          ...opts
        },
        null,
        componentContext
      );
      return [splitStyles.viewProps, splitStyles.style, theme, media];
    }
  }
});

// ../web/dist/cjs/views/View.native.js
var require_View_native = __commonJS({
  "../web/dist/cjs/views/View.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), View_exports = {};
    __export2(View_exports, {
      View: () => View2
    });
    module2.exports = __toCommonJS2(View_exports);
    var import_helpers = require_index_native4(), import_createComponent = require_createComponent_native(), View2 = (0, import_createComponent.createComponent)({
      acceptsClassName: !0,
      defaultProps: {
        display: "flex"
      },
      validStyles: import_helpers.validStyles
    });
  }
});

// ../web/dist/cjs/views/Text.native.js
var require_Text_native = __commonJS({
  "../web/dist/cjs/views/Text.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Text_exports = {};
    __export2(Text_exports, {
      Text: () => Text3
    });
    module2.exports = __toCommonJS2(Text_exports);
    var import_helpers = require_index_native4(), import_createComponent = require_createComponent_native(), Text3 = (0, import_createComponent.createComponent)({
      acceptsClassName: !0,
      isText: !0,
      defaultProps: {
        suppressHighlighting: !0
      },
      inlineWhenUnflattened: /* @__PURE__ */ new Set(["fontFamily"]),
      variants: {
        // ??
        ellipsizeMode: {
          "...": () => null
        },
        ellipse: {
          true: {
            numberOfLines: 1,
            lineBreakMode: "clip"
          }
        }
      },
      deoptProps: /* @__PURE__ */ new Set(["ellipse"]),
      validStyles: {
        ...import_helpers.validStyles,
        ...import_helpers.stylePropsTextOnly
      }
    });
  }
});

// ../web/dist/cjs/views/ThemeProvider.native.js
var require_ThemeProvider_native = __commonJS({
  "../web/dist/cjs/views/ThemeProvider.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), ThemeProvider_exports = {};
    __export2(ThemeProvider_exports, {
      ThemeProvider: () => ThemeProvider
    });
    module2.exports = __toCommonJS2(ThemeProvider_exports);
    var import_constants = require_index_native2(), import_react2 = require("react"), import_constants2 = require_constants_native2(), import_Theme = require_Theme_native(), import_jsx_runtime6 = require("react/jsx-runtime"), ThemeProvider = (props) => (import_constants.isClient && (0, import_react2.useLayoutEffect)(() => {
      if (props.disableRootThemeClass)
        return;
      let cn = `${import_constants2.THEME_CLASSNAME_PREFIX}${props.defaultTheme}`, target = props.themeClassNameOnRoot ? document.documentElement : document.body;
      return target.classList.add(cn), () => {
        target.classList.remove(cn);
      };
    }, [props.defaultTheme, props.disableRootThemeClass, props.themeClassNameOnRoot]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
      import_Theme.Theme,
      {
        className: props.className,
        name: props.defaultTheme,
        forceClassName: !props.disableRootThemeClass,
        _isRoot: !0,
        children: props.children
      }
    ));
  }
});

// ../web/dist/cjs/views/FontLanguage.native.js
var require_FontLanguage_native = __commonJS({
  "../web/dist/cjs/views/FontLanguage.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), FontLanguage_native_exports = {};
    __export2(FontLanguage_native_exports, {
      FontLanguage: () => FontLanguage2
    });
    module2.exports = __toCommonJS2(FontLanguage_native_exports);
    var import_react2 = require("react"), import_ComponentContext = require_ComponentContext_native(), import_jsx_runtime6 = require("react/jsx-runtime"), FontLanguage2 = ({ children, ...props }) => {
      let language = (0, import_react2.useMemo)(() => props, [JSON.stringify(props)]);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_ComponentContext.ComponentContext.Provider, { language, children });
    };
  }
});

// ../web/dist/cjs/views/TamaguiProvider.native.js
var require_TamaguiProvider_native = __commonJS({
  "../web/dist/cjs/views/TamaguiProvider.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), TamaguiProvider_exports = {};
    __export2(TamaguiProvider_exports, {
      TamaguiProvider: () => TamaguiProvider2
    });
    module2.exports = __toCommonJS2(TamaguiProvider_exports);
    var import_constants = require_index_native2(), React2 = __toESM2(require("react")), import_ComponentContext = require_ComponentContext_native(), import_useMedia = require_useMedia_native(), import_ThemeProvider = require_ThemeProvider_native(), import_jsx_runtime6 = require("react/jsx-runtime");
    function TamaguiProvider2({
      children,
      disableInjectCSS,
      config,
      ...themePropsProvider
    }) {
      return import_constants.isWeb && import_constants.isServer || (0, import_useMedia.useMediaListeners)(config), import_constants.isClient && React2.useLayoutEffect(() => {
        if (document.documentElement.classList.contains("t_unmounted") && document.documentElement.classList.remove("t_unmounted"), disableInjectCSS)
          return;
        let style = document.createElement("style");
        return style.appendChild(document.createTextNode(config.getCSS())), document.head.appendChild(style), () => {
          document.head.removeChild(style);
        };
      }, [config, disableInjectCSS]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_ComponentContext.ComponentContext.Provider, { animationDriver: config.animations, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_ThemeProvider.ThemeProvider,
        {
          themeClassNameOnRoot: config.themeClassNameOnRoot,
          disableRootThemeClass: config.disableRootThemeClass,
          ...themePropsProvider,
          defaultTheme: themePropsProvider.defaultTheme ?? Object.keys(config.themes)[0],
          children
        }
      ) });
    }
  }
});

// ../web/dist/cjs/views/Configuration.native.js
var require_Configuration_native = __commonJS({
  "../web/dist/cjs/views/Configuration.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Configuration_exports = {};
    __export2(Configuration_exports, {
      Configuration: () => Configuration2
    });
    module2.exports = __toCommonJS2(Configuration_exports);
    var import_ComponentContext = require_ComponentContext_native(), import_jsx_runtime6 = require("react/jsx-runtime"), Configuration2 = (props) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_ComponentContext.ComponentContext.Provider, { ...props });
  }
});

// ../use-event/dist/cjs/useGet.native.js
var require_useGet_native = __commonJS({
  "../use-event/dist/cjs/useGet.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useGet_exports = {};
    __export2(useGet_exports, {
      useGet: () => useGet2
    });
    module2.exports = __toCommonJS2(useGet_exports);
    var import_react2 = require("react"), isWeb6 = !1, isClient2 = typeof window < "u", useIsomorphicLayoutEffect2 = !isWeb6 || isClient2 ? import_react2.useLayoutEffect : import_react2.useEffect;
    function useGet2(currentValue, initialValue, forwardToFunction) {
      let curRef = (0, import_react2.useRef)(initialValue ?? currentValue);
      return useIsomorphicLayoutEffect2(() => {
        curRef.current = currentValue;
      }), (0, import_react2.useCallback)(
        forwardToFunction ? (...args) => {
          var _a;
          return (_a = curRef.current) == null ? void 0 : _a.apply(null, args);
        } : () => curRef.current,
        []
      );
    }
  }
});

// ../use-event/dist/cjs/useEvent.native.js
var require_useEvent_native = __commonJS({
  "../use-event/dist/cjs/useEvent.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useEvent_exports = {};
    __export2(useEvent_exports, {
      useEvent: () => useEvent2
    });
    module2.exports = __toCommonJS2(useEvent_exports);
    var import_useGet = require_useGet_native();
    function useEvent2(callback) {
      return (0, import_useGet.useGet)(callback, defaultValue, !0);
    }
    var defaultValue = () => {
      throw new Error("Cannot call an event handler while rendering.");
    };
  }
});

// ../use-event/dist/cjs/index.native.js
var require_index_native8 = __commonJS({
  "../use-event/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_useEvent_native(), module2.exports);
    __reExport2(src_exports2, require_useGet_native(), module2.exports);
  }
});

// ../web/dist/cjs/index.native.js
var require_index_native9 = __commonJS({
  "../web/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      configureMedia: () => import_useMedia.configureMedia,
      getConfig: () => import_config.getConfig,
      getMedia: () => import_useMedia.getMedia,
      getThemes: () => import_config.getThemes,
      getToken: () => import_config.getToken,
      getTokenValue: () => import_config.getTokenValue,
      getTokens: () => import_config.getTokens,
      mediaObjectToString: () => import_useMedia.mediaObjectToString,
      mediaQueryConfig: () => import_useMedia.mediaQueryConfig,
      mediaState: () => import_useMedia.mediaState,
      setupDev: () => import_config.setupDev,
      updateConfig: () => import_config.updateConfig,
      useMedia: () => import_useMedia.useMedia
    });
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Tamagui_native(), module2.exports);
    __reExport2(src_exports2, require_createComponent_native(), module2.exports);
    __reExport2(src_exports2, require_createShorthands_native(), module2.exports);
    __reExport2(src_exports2, require_createTheme_native(), module2.exports);
    __reExport2(src_exports2, require_createTamagui_native(), module2.exports);
    __reExport2(src_exports2, require_createFont_native(), module2.exports);
    __reExport2(src_exports2, require_createTokens_native(), module2.exports);
    __reExport2(src_exports2, require_createVariable_native(), module2.exports);
    __reExport2(src_exports2, require_createVariables_native(), module2.exports);
    __reExport2(src_exports2, require_insertFont_native(), module2.exports);
    __reExport2(src_exports2, require_styled_native(), module2.exports);
    __reExport2(src_exports2, require_setupReactNative_native(), module2.exports);
    __reExport2(src_exports2, require_types_native2(), module2.exports);
    __reExport2(src_exports2, require_GetRef_native(), module2.exports);
    var import_config = require_config_native();
    __reExport2(src_exports2, require_constants_native2(), module2.exports);
    __reExport2(src_exports2, require_ComponentContext_native(), module2.exports);
    __reExport2(src_exports2, require_createStyledContext_native(), module2.exports);
    __reExport2(src_exports2, require_expandStyles_native(), module2.exports);
    __reExport2(src_exports2, require_propMapper_native(), module2.exports);
    __reExport2(src_exports2, require_getExpandedShorthands_native(), module2.exports);
    __reExport2(src_exports2, require_getSplitStyles_native(), module2.exports);
    __reExport2(src_exports2, require_getStylesAtomic_native(), module2.exports);
    __reExport2(src_exports2, require_getThemeCSSRules_native(), module2.exports);
    __reExport2(src_exports2, require_getVariantExtras_native(), module2.exports);
    __reExport2(src_exports2, require_isTamaguiComponent_native(), module2.exports);
    __reExport2(src_exports2, require_isTamaguiElement_native(), module2.exports);
    __reExport2(src_exports2, require_matchMedia_native(), module2.exports);
    __reExport2(src_exports2, require_mergeProps_native(), module2.exports);
    __reExport2(src_exports2, require_normalizeColor_native(), module2.exports);
    __reExport2(src_exports2, require_proxyThemeVariables_native(), module2.exports);
    __reExport2(src_exports2, require_proxyThemeToParents_native(), module2.exports);
    __reExport2(src_exports2, require_pseudoDescriptors_native(), module2.exports);
    __reExport2(src_exports2, require_themeable_native(), module2.exports);
    __reExport2(src_exports2, require_themes_native(), module2.exports);
    __reExport2(src_exports2, require_createShallowSetState_native(), module2.exports);
    __reExport2(src_exports2, require_withStaticProperties_native(), module2.exports);
    var import_useMedia = require_useMedia_native();
    __reExport2(src_exports2, require_useTheme_native(), module2.exports);
    __reExport2(src_exports2, require_useThemeName_native(), module2.exports);
    __reExport2(src_exports2, require_useConfiguration_native(), module2.exports);
    __reExport2(src_exports2, require_useIsTouchDevice_native(), module2.exports);
    __reExport2(src_exports2, require_useProps_native(), module2.exports);
    __reExport2(src_exports2, require_useConfiguration_native(), module2.exports);
    __reExport2(src_exports2, require_Slot_native(), module2.exports);
    __reExport2(src_exports2, require_Stack_native(), module2.exports);
    __reExport2(src_exports2, require_View_native(), module2.exports);
    __reExport2(src_exports2, require_Text_native(), module2.exports);
    __reExport2(src_exports2, require_Theme_native(), module2.exports);
    __reExport2(src_exports2, require_ThemeProvider_native(), module2.exports);
    __reExport2(src_exports2, require_FontLanguage_native(), module2.exports);
    __reExport2(src_exports2, require_TamaguiProvider_native(), module2.exports);
    __reExport2(src_exports2, require_Configuration_native(), module2.exports);
    __reExport2(src_exports2, require_index_native6(), module2.exports);
    __reExport2(src_exports2, require_index_native8(), module2.exports);
    __reExport2(src_exports2, require_index_native5(), module2.exports);
    __reExport2(src_exports2, require_index_native4(), module2.exports);
    __reExport2(src_exports2, require_index_native2(), module2.exports);
    __reExport2(src_exports2, require_setupHooks_native(), module2.exports);
  }
});

// ../animate-presence/dist/cjs/LayoutGroupContext.native.js
var require_LayoutGroupContext_native = __commonJS({
  "../animate-presence/dist/cjs/LayoutGroupContext.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), LayoutGroupContext_exports = {};
    __export2(LayoutGroupContext_exports, {
      LayoutGroupContext: () => LayoutGroupContext
    });
    module2.exports = __toCommonJS2(LayoutGroupContext_exports);
    var import_react2 = require("react"), LayoutGroupContext = (0, import_react2.createContext)({});
  }
});

// ../use-presence/dist/cjs/PresenceContext.native.js
var require_PresenceContext_native = __commonJS({
  "../use-presence/dist/cjs/PresenceContext.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), PresenceContext_exports = {};
    __export2(PresenceContext_exports, {
      PresenceContext: () => PresenceContext
    });
    module2.exports = __toCommonJS2(PresenceContext_exports);
    var import_react2 = require("react"), PresenceContext = (0, import_react2.createContext)(null);
  }
});

// ../use-presence/dist/cjs/usePresence.native.js
var require_usePresence_native = __commonJS({
  "../use-presence/dist/cjs/usePresence.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), usePresence_exports = {};
    __export2(usePresence_exports, {
      isPresent: () => isPresent,
      useIsPresent: () => useIsPresent,
      usePresence: () => usePresence
    });
    module2.exports = __toCommonJS2(usePresence_exports);
    var import_react2 = require("react"), import_PresenceContext = require_PresenceContext_native();
    function usePresence() {
      let context = (0, import_react2.useContext)(import_PresenceContext.PresenceContext);
      if (!context)
        return [!0, null, context];
      let { isPresent: isPresent2, onExitComplete, register } = context, id = (0, import_react2.useId)() || "";
      return (0, import_react2.useEffect)(() => register(id), [id, register]), !isPresent2 && onExitComplete ? [!1, () => onExitComplete == null ? void 0 : onExitComplete(id), context] : [!0, void 0, context];
    }
    function useIsPresent() {
      return isPresent((0, import_react2.useContext)(import_PresenceContext.PresenceContext));
    }
    function isPresent(context) {
      return context === null ? !0 : context.isPresent;
    }
  }
});

// ../use-presence/dist/cjs/index.native.js
var require_index_native10 = __commonJS({
  "../use-presence/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_PresenceContext_native(), module2.exports);
    __reExport2(src_exports2, require_usePresence_native(), module2.exports);
  }
});

// ../animate-presence/dist/cjs/PresenceChild.native.js
var require_PresenceChild_native = __commonJS({
  "../animate-presence/dist/cjs/PresenceChild.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), PresenceChild_exports = {};
    __export2(PresenceChild_exports, {
      PresenceChild: () => PresenceChild
    });
    module2.exports = __toCommonJS2(PresenceChild_exports);
    var import_use_presence = require_index_native10(), import_web = require_index_native9(), React2 = __toESM2(require("react")), import_react2 = require("react"), import_jsx_runtime6 = require("react/jsx-runtime"), PresenceChild = ({
      children,
      initial,
      isPresent,
      onExitComplete,
      exitVariant,
      enterVariant,
      enterExitVariant,
      presenceAffectsLayout
    }) => {
      let presenceChildren = React2.useMemo(newChildrenMap, []), id = (0, import_react2.useId)() || "", context = React2.useMemo(
        () => ({
          id,
          initial,
          isPresent,
          exitVariant,
          enterVariant,
          enterExitVariant,
          onExitComplete: (id2) => {
            presenceChildren.set(id2, !0);
            for (let isComplete of presenceChildren.values())
              if (!isComplete)
                return;
            onExitComplete == null || onExitComplete();
          },
          register: (id2) => (presenceChildren.set(id2, !1), () => presenceChildren.delete(id2))
        }),
        /**
         * If the presence of a child affects the layout of the components around it,
         * we want to make a new context value to ensure they get re-rendered
         * so they can detect that layout change.
         */
        // eslint-disable-next-line react-hooks/exhaustive-deps
        presenceAffectsLayout ? void 0 : [isPresent, exitVariant, enterVariant]
      );
      return React2.useMemo(() => {
        presenceChildren.forEach((_, key) => presenceChildren.set(key, !1));
      }, [isPresent]), (0, import_web.useIsomorphicLayoutEffect)(() => {
        !(isPresent || presenceChildren.size) && (onExitComplete == null || onExitComplete());
      }, [isPresent]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_use_presence.PresenceContext.Provider, { value: context, children });
    };
    function newChildrenMap() {
      return /* @__PURE__ */ new Map();
    }
  }
});

// ../animate-presence/dist/cjs/AnimatePresence.native.js
var require_AnimatePresence_native = __commonJS({
  "../animate-presence/dist/cjs/AnimatePresence.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), AnimatePresence_exports = {};
    __export2(AnimatePresence_exports, {
      AnimatePresence: () => AnimatePresence
    });
    module2.exports = __toCommonJS2(AnimatePresence_exports);
    var import_use_force_update = require_index_native(), import_web = require_index_native9(), import_react2 = __toESM2(require("react")), import_LayoutGroupContext = require_LayoutGroupContext_native(), import_PresenceChild = require_PresenceChild_native(), import_jsx_runtime6 = require("react/jsx-runtime"), getChildKey = (child) => child.key || "", isDev = process.env.NODE_ENV !== "production";
    function updateChildLookup(children, allChildren) {
      let seenChildren = isDev ? /* @__PURE__ */ new Set() : null;
      children.forEach((child) => {
        let key = getChildKey(child);
        isDev && seenChildren && seenChildren.has(key) && (console.warn(
          `Children of AnimatePresence require unique keys. "${key}" is a duplicate.`
        ), seenChildren.add(key)), allChildren.set(key, child);
      });
    }
    function onlyElements(children) {
      let filtered = [];
      return import_react2.Children.forEach(children, (child, index) => {
        (0, import_react2.isValidElement)(child) && (!child.key && import_react2.Children.count(children) > 1 ? (process.env.NODE_ENV === "development" && console.warn("No key given to AnimatePresence child, assigning index as key"), filtered.push(
          import_react2.default.cloneElement(child, {
            key: index
          })
        )) : filtered.push(child));
      }), filtered;
    }
    var AnimatePresence = ({
      children,
      enterVariant,
      exitVariant,
      enterExitVariant,
      initial = !0,
      onExitComplete,
      exitBeforeEnter,
      presenceAffectsLayout = !0
    }) => {
      let forceRender = (0, import_use_force_update.useForceUpdate)(), isClientMounted = (0, import_web.useDidFinishSSR)(), forceRenderLayoutGroup = (0, import_react2.useContext)(import_LayoutGroupContext.LayoutGroupContext).forceRender;
      forceRenderLayoutGroup && (forceRender = forceRenderLayoutGroup);
      let isMounted = (0, import_react2.useRef)(!1), filteredChildren = onlyElements(children), childrenToRender = filteredChildren, exiting = /* @__PURE__ */ new Set(), presentChildren = (0, import_react2.useRef)(childrenToRender), allChildren = (0, import_react2.useRef)(/* @__PURE__ */ new Map()).current, isInitialRender = (0, import_react2.useRef)(!0);
      (0, import_react2.useEffect)(() => (isMounted.current = !0, () => {
        isMounted.current = !1, isInitialRender.current = !0, allChildren.clear(), exiting.clear();
      }), []), (0, import_web.useIsomorphicLayoutEffect)(() => {
        isInitialRender.current = !1, updateChildLookup(filteredChildren, allChildren), presentChildren.current = childrenToRender;
      });
      let hasWarned = process.env.NODE_ENV === "development" ? (0, import_react2.useRef)(!1) : null;
      if (isInitialRender.current)
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, { children: childrenToRender.map((child) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_PresenceChild.PresenceChild,
          {
            isPresent: !!(isClientMounted || isMounted.current),
            enterExitVariant,
            exitVariant,
            enterVariant,
            initial: initial ? void 0 : !1,
            presenceAffectsLayout,
            children: child
          },
          getChildKey(child)
        )) });
      childrenToRender = [...childrenToRender];
      let presentKeys = presentChildren.current.map(getChildKey), targetKeys = filteredChildren.map(getChildKey), numPresent = presentKeys.length;
      for (let i = 0; i < numPresent; i++) {
        let key = presentKeys[i];
        targetKeys.indexOf(key) === -1 && exiting.add(key);
      }
      return exitBeforeEnter && exiting.size && (childrenToRender = []), exiting.forEach((key) => {
        if (targetKeys.indexOf(key) !== -1)
          return;
        let child = allChildren.get(key);
        if (!child)
          return;
        let insertionIndex = presentKeys.indexOf(key);
        childrenToRender.splice(
          insertionIndex,
          0,
          /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            import_PresenceChild.PresenceChild,
            {
              isPresent: !1,
              onExitComplete: () => {
                allChildren.delete(key), exiting.delete(key);
                let removeIndex = presentChildren.current.findIndex(
                  (presentChild) => presentChild.key === key
                );
                if (presentChildren.current.splice(removeIndex, 1), !exiting.size) {
                  if (presentChildren.current = filteredChildren, isMounted.current === !1)
                    return;
                  forceRender(), onExitComplete == null || onExitComplete();
                }
              },
              exitVariant,
              enterVariant,
              enterExitVariant,
              presenceAffectsLayout,
              children: child
            },
            getChildKey(child)
          )
        );
      }), childrenToRender = childrenToRender.map((child) => {
        let key = child.key;
        return exiting.has(key) ? child : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_PresenceChild.PresenceChild,
          {
            isPresent: !0,
            exitVariant,
            enterVariant,
            enterExitVariant,
            presenceAffectsLayout,
            children: child
          },
          getChildKey(child)
        );
      }), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, { children: exiting.size ? childrenToRender : childrenToRender.map((child) => (0, import_react2.cloneElement)(child)) });
    };
    AnimatePresence.displayName = "AnimatePresence";
  }
});

// ../animate-presence/dist/cjs/types.native.js
var require_types_native3 = __commonJS({
  "../animate-presence/dist/cjs/types.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), types_exports = {};
    module2.exports = __toCommonJS2(types_exports);
  }
});

// ../animate-presence/dist/cjs/index.native.js
var require_index_native11 = __commonJS({
  "../animate-presence/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_AnimatePresence_native(), module2.exports);
    __reExport2(src_exports2, require_index_native10(), module2.exports);
    __reExport2(src_exports2, require_types_native3(), module2.exports);
    __reExport2(src_exports2, require_PresenceChild_native(), module2.exports);
  }
});

// ../use-controllable-state/dist/cjs/useControllableState.native.js
var require_useControllableState_native = __commonJS({
  "../use-controllable-state/dist/cjs/useControllableState.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useControllableState_exports = {};
    __export2(useControllableState_exports, {
      useControllableState: () => useControllableState
    });
    module2.exports = __toCommonJS2(useControllableState_exports);
    var import_use_event = require_index_native8(), import_react2 = require("react"), emptyCallbackFn = (_) => _();
    function useControllableState({
      prop,
      defaultProp,
      onChange,
      strategy = "prop-wins",
      preventUpdate,
      transition
    }) {
      let [state, setState] = (0, import_react2.useState)(prop ?? defaultProp), previous = (0, import_react2.useRef)(state), propWins = strategy === "prop-wins" && prop !== void 0, value = propWins ? prop : state, onChangeCb = (0, import_use_event.useEvent)(onChange || idFn), transitionFn = transition ? import_react2.startTransition : emptyCallbackFn;
      (0, import_react2.useEffect)(() => {
        prop !== void 0 && (previous.current = prop, transitionFn(() => {
          setState(prop);
        }));
      }, [prop]), (0, import_react2.useEffect)(() => {
        propWins || state !== previous.current && (previous.current = state, onChangeCb(state));
      }, [onChangeCb, state, propWins]);
      let setter = (0, import_use_event.useEvent)((next) => {
        if (!preventUpdate)
          if (propWins) {
            let nextValue = typeof next == "function" ? next(previous.current) : next;
            onChangeCb(nextValue);
          } else
            transitionFn(() => {
              setState(next);
            });
      });
      return [value, setter];
    }
    var idFn = () => {
    };
  }
});

// ../use-controllable-state/dist/cjs/index.native.js
var require_index_native12 = __commonJS({
  "../use-controllable-state/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_useControllableState_native(), module2.exports);
  }
});

// ../collapsible/dist/cjs/Collapsible.native.js
var require_Collapsible_native = __commonJS({
  "../collapsible/dist/cjs/Collapsible.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Collapsible_exports = {};
    __export2(Collapsible_exports, {
      Collapsible: () => Collapsible,
      CollapsibleContent: () => CollapsibleContent,
      CollapsibleContentFrame: () => CollapsibleContentFrame,
      CollapsibleTrigger: () => CollapsibleTrigger,
      CollapsibleTriggerFrame: () => CollapsibleTriggerFrame
    });
    module2.exports = __toCommonJS2(Collapsible_exports);
    var import_animate_presence = require_index_native11(), import_use_controllable_state = require_index_native12(), import_web = require_index_native9(), React2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), COLLAPSIBLE_NAME = "Collapsible", { Provider: CollapsibleProvider, useStyledContext: useCollapsibleContext } = (0, import_web.createStyledContext)(), _Collapsible = React2.forwardRef(
      (props, forwardedRef) => {
        let {
          __scopeCollapsible,
          open: openProp,
          defaultOpen,
          disabled,
          onOpenChange,
          ...collapsibleProps
        } = props, [open = !1, setOpen] = (0, import_use_controllable_state.useControllableState)({
          prop: openProp,
          defaultProp: defaultOpen,
          onChange: onOpenChange
        });
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          CollapsibleProvider,
          {
            scope: __scopeCollapsible,
            disabled,
            contentId: React2.useId(),
            open,
            onOpenToggle: React2.useCallback(
              () => setOpen((prevOpen) => !prevOpen),
              [setOpen]
            ),
            children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              import_web.Stack,
              {
                "data-state": getState(open),
                "data-disabled": disabled ? "" : void 0,
                ...collapsibleProps,
                ref: forwardedRef
              }
            )
          }
        );
      }
    );
    _Collapsible.displayName = COLLAPSIBLE_NAME;
    var TRIGGER_NAME = "CollapsibleTrigger", CollapsibleTriggerFrame = (0, import_web.styled)(import_web.Stack, {
      name: TRIGGER_NAME,
      tag: "button"
    }), CollapsibleTrigger = CollapsibleTriggerFrame.styleable(
      (props, forwardedRef) => {
        let { __scopeCollapsible, children, ...triggerProps } = props, context = useCollapsibleContext(__scopeCollapsible);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          CollapsibleTriggerFrame,
          {
            "aria-controls": context.contentId,
            "aria-expanded": context.open || !1,
            "data-state": getState(context.open),
            "data-disabled": context.disabled ? "" : void 0,
            disabled: context.disabled,
            ...triggerProps,
            ref: forwardedRef,
            onPress: (0, import_web.composeEventHandlers)(props.onPress, context.onOpenToggle),
            children: typeof children == "function" ? children({ open: context.open }) : children
          }
        );
      }
    );
    CollapsibleTrigger.displayName = TRIGGER_NAME;
    var CONTENT_NAME = "CollapsibleContent", CollapsibleContentFrame = (0, import_web.styled)(import_web.Stack, {
      name: CONTENT_NAME
    }), CollapsibleContent = CollapsibleContentFrame.styleable((props, forwardedRef) => {
      let { forceMount, children, __scopeCollapsible, ...contentProps } = props, context = useCollapsibleContext(__scopeCollapsible);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_animate_presence.AnimatePresence, { ...contentProps, children: forceMount || context.open ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(CollapsibleContentFrame, { ref: forwardedRef, ...contentProps, children }) : null });
    });
    CollapsibleContent.displayName = CONTENT_NAME;
    function getState(open) {
      return open ? "open" : "closed";
    }
    var Collapsible = (0, import_web.withStaticProperties)(_Collapsible, {
      Trigger: CollapsibleTrigger,
      Content: CollapsibleContent
    });
  }
});

// ../collapsible/dist/cjs/index.native.js
var require_index_native13 = __commonJS({
  "../collapsible/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Collapsible_native(), module2.exports);
  }
});

// ../react-native-use-responder-events/dist/cjs/utils.native.js
var require_utils_native = __commonJS({
  "../react-native-use-responder-events/dist/cjs/utils.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), utils_exports = {};
    __export2(utils_exports, {
      canUseDOM: () => canUseDOM,
      getBoundingClientRect: () => getBoundingClientRect,
      getLowestCommonAncestor: () => getLowestCommonAncestor,
      getResponderPaths: () => getResponderPaths,
      hasTargetTouches: () => hasTargetTouches,
      hasValidSelection: () => hasValidSelection,
      isPrimaryPointerDown: () => isPrimaryPointerDown,
      isSelectionValid: () => isSelectionValid,
      setResponderId: () => setResponderId
    });
    module2.exports = __toCommonJS2(utils_exports);
    var keyName = "__reactResponderId", canUseDOM = !!(typeof window < "u" && window.document && window.document.createElement), getBoundingClientRect = (node) => {
      if (node && node.nodeType === 1 && node.getBoundingClientRect)
        return node.getBoundingClientRect();
    };
    function getEventPath(domEvent) {
      var _a;
      if (domEvent.type === "selectionchange") {
        let target = (_a = window.getSelection()) == null ? void 0 : _a.anchorNode;
        return composedPathFallback(target);
      } else
        return domEvent.composedPath != null ? domEvent.composedPath() : composedPathFallback(domEvent.target);
    }
    function composedPathFallback(target) {
      let path = [];
      for (; target != null && target !== document.body; )
        path.push(target), target = target.parentNode;
      return path;
    }
    function getResponderId(node) {
      return node != null ? node[keyName] : null;
    }
    function setResponderId(node, id) {
      node != null && (node[keyName] = id);
    }
    function getResponderPaths(domEvent) {
      let idPath = [], nodePath = [], eventPath = getEventPath(domEvent);
      for (let i = 0; i < eventPath.length; i++) {
        let node = eventPath[i], id = getResponderId(node);
        id != null && (idPath.push(id), nodePath.push(node));
      }
      return { idPath, nodePath };
    }
    function getLowestCommonAncestor(pathA, pathB) {
      let pathALength = pathA.length, pathBLength = pathB.length;
      if (
        // If either path is empty
        pathALength === 0 || pathBLength === 0 || // If the last elements aren't the same there can't be a common ancestor
        // that is connected to the responder system
        pathA[pathALength - 1] !== pathB[pathBLength - 1]
      )
        return null;
      let itemA = pathA[0], indexA = 0, itemB = pathB[0], indexB = 0;
      pathALength - pathBLength > 0 && (indexA = pathALength - pathBLength, itemA = pathA[indexA], pathALength = pathBLength), pathBLength - pathALength > 0 && (indexB = pathBLength - pathALength, itemB = pathB[indexB], pathBLength = pathALength);
      let depth = pathALength;
      for (; depth--; ) {
        if (itemA === itemB)
          return itemA;
        itemA = pathA[indexA++], itemB = pathB[indexB++];
      }
      return null;
    }
    function hasTargetTouches(target, touches) {
      if (!touches || touches.length === 0)
        return !1;
      for (let i = 0; i < touches.length; i++) {
        let node = touches[i].target;
        if (node != null && target.contains(node))
          return !0;
      }
      return !1;
    }
    function hasValidSelection(domEvent) {
      return domEvent.type === "selectionchange" ? isSelectionValid() : domEvent.type === "select";
    }
    function isPrimaryPointerDown(domEvent) {
      let { altKey, button, buttons, ctrlKey, type } = domEvent, isTouch = type === "touchstart" || type === "touchmove", isPrimaryMouseDown = type === "mousedown" && (button === 0 || buttons === 1), isPrimaryMouseMove = type === "mousemove" && buttons === 1, noModifiers = altKey === !1 && ctrlKey === !1;
      return !!(isTouch || isPrimaryMouseDown && noModifiers || isPrimaryMouseMove && noModifiers);
    }
    function isSelectionValid() {
      let selection = window.getSelection();
      if (!selection)
        return !1;
      let string = selection.toString(), anchorNode = selection.anchorNode, focusNode = selection.focusNode, isTextNode = anchorNode && anchorNode.nodeType === window.Node.TEXT_NODE || focusNode && focusNode.nodeType === window.Node.TEXT_NODE;
      return string.length >= 1 && string !== `
` && !!isTextNode;
    }
  }
});

// ../react-native-use-responder-events/dist/cjs/createResponderEvent.native.js
var require_createResponderEvent_native = __commonJS({
  "../react-native-use-responder-events/dist/cjs/createResponderEvent.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createResponderEvent_exports = {};
    __export2(createResponderEvent_exports, {
      default: () => createResponderEvent
    });
    module2.exports = __toCommonJS2(createResponderEvent_exports);
    var import_utils = require_utils_native(), emptyFunction = () => {
    }, emptyObject = {}, emptyArray = [];
    function normalizeIdentifier(identifier) {
      return identifier > 20 ? identifier % 20 : identifier;
    }
    function createResponderEvent(domEvent, responderTouchHistoryStore) {
      let rect, propagationWasStopped = !1, changedTouches, touches, domEventChangedTouches = domEvent.changedTouches, domEventType = domEvent.type, metaKey = domEvent.metaKey === !0, shiftKey = domEvent.shiftKey === !0, force = (domEventChangedTouches == null ? void 0 : domEventChangedTouches[0].force) || 0, identifier = normalizeIdentifier((domEventChangedTouches == null ? void 0 : domEventChangedTouches[0].identifier) || 0), clientX = (domEventChangedTouches == null ? void 0 : domEventChangedTouches[0].clientX) || domEvent.clientX, clientY = (domEventChangedTouches == null ? void 0 : domEventChangedTouches[0].clientY) || domEvent.clientY, pageX = (domEventChangedTouches == null ? void 0 : domEventChangedTouches[0].pageX) || domEvent.pageX, pageY = (domEventChangedTouches == null ? void 0 : domEventChangedTouches[0].pageY) || domEvent.pageY, preventDefault = typeof domEvent.preventDefault == "function" ? domEvent.preventDefault.bind(domEvent) : emptyFunction, timestamp = domEvent.timeStamp;
      function normalizeTouches(touches2) {
        return Array.prototype.slice.call(touches2).map((touch) => ({
          force: touch.force,
          identifier: normalizeIdentifier(touch.identifier),
          get locationX() {
            return locationX(touch.clientX);
          },
          get locationY() {
            return locationY(touch.clientY);
          },
          pageX: touch.pageX,
          pageY: touch.pageY,
          target: touch.target,
          timestamp
        }));
      }
      if (domEventChangedTouches != null)
        changedTouches = normalizeTouches(domEventChangedTouches), touches = normalizeTouches(domEvent.touches);
      else {
        let emulatedTouches = [
          {
            force,
            identifier,
            get locationX() {
              return locationX(clientX);
            },
            get locationY() {
              return locationY(clientY);
            },
            pageX,
            pageY,
            target: domEvent.target,
            timestamp
          }
        ];
        changedTouches = emulatedTouches, touches = domEventType === "mouseup" || domEventType === "dragstart" ? emptyArray : emulatedTouches;
      }
      let responderEvent = {
        bubbles: !0,
        cancelable: !0,
        // `currentTarget` is set before dispatch
        currentTarget: null,
        defaultPrevented: domEvent.defaultPrevented,
        dispatchConfig: emptyObject,
        eventPhase: domEvent.eventPhase,
        isDefaultPrevented() {
          return domEvent.defaultPrevented;
        },
        isPropagationStopped() {
          return propagationWasStopped;
        },
        isTrusted: domEvent.isTrusted,
        nativeEvent: {
          altKey: !1,
          ctrlKey: !1,
          metaKey,
          shiftKey,
          changedTouches,
          force,
          identifier,
          get locationX() {
            return locationX(clientX);
          },
          get locationY() {
            return locationY(clientY);
          },
          pageX,
          pageY,
          target: domEvent.target,
          timestamp,
          touches,
          type: domEventType
        },
        persist: emptyFunction,
        preventDefault,
        stopPropagation() {
          propagationWasStopped = !0;
        },
        target: domEvent.target,
        timeStamp: timestamp,
        touchHistory: responderTouchHistoryStore.touchHistory
      };
      function locationX(x) {
        if (rect = rect || (0, import_utils.getBoundingClientRect)(responderEvent.currentTarget), rect)
          return x - rect.left;
      }
      function locationY(y) {
        if (rect = rect || (0, import_utils.getBoundingClientRect)(responderEvent.currentTarget), rect)
          return y - rect.top;
      }
      return responderEvent;
    }
  }
});

// ../react-native-use-responder-events/dist/cjs/types.native.js
var require_types_native4 = __commonJS({
  "../react-native-use-responder-events/dist/cjs/types.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), types_exports = {};
    __export2(types_exports, {
      BLUR: () => BLUR,
      CONTEXT_MENU: () => CONTEXT_MENU,
      FOCUS_OUT: () => FOCUS_OUT,
      MOUSE_CANCEL: () => MOUSE_CANCEL,
      MOUSE_DOWN: () => MOUSE_DOWN,
      MOUSE_MOVE: () => MOUSE_MOVE,
      MOUSE_UP: () => MOUSE_UP,
      SCROLL: () => SCROLL,
      SELECT: () => SELECT,
      SELECTION_CHANGE: () => SELECTION_CHANGE,
      TOUCH_CANCEL: () => TOUCH_CANCEL,
      TOUCH_END: () => TOUCH_END,
      TOUCH_MOVE: () => TOUCH_MOVE,
      TOUCH_START: () => TOUCH_START,
      isCancelish: () => isCancelish,
      isEndish: () => isEndish,
      isMoveish: () => isMoveish,
      isScroll: () => isScroll,
      isSelectionChange: () => isSelectionChange,
      isStartish: () => isStartish
    });
    module2.exports = __toCommonJS2(types_exports);
    var BLUR = "blur", CONTEXT_MENU = "contextmenu", FOCUS_OUT = "focusout", MOUSE_DOWN = "mousedown", MOUSE_MOVE = "mousemove", MOUSE_UP = "mouseup", MOUSE_CANCEL = "dragstart", TOUCH_START = "touchstart", TOUCH_MOVE = "touchmove", TOUCH_END = "touchend", TOUCH_CANCEL = "touchcancel", SCROLL = "scroll", SELECT = "select", SELECTION_CHANGE = "selectionchange";
    function isStartish(eventType) {
      return eventType === TOUCH_START || eventType === MOUSE_DOWN;
    }
    function isMoveish(eventType) {
      return eventType === TOUCH_MOVE || eventType === MOUSE_MOVE;
    }
    function isEndish(eventType) {
      return eventType === TOUCH_END || eventType === MOUSE_UP || isCancelish(eventType);
    }
    function isCancelish(eventType) {
      return eventType === TOUCH_CANCEL || eventType === MOUSE_CANCEL;
    }
    function isScroll(eventType) {
      return eventType === SCROLL;
    }
    function isSelectionChange(eventType) {
      return eventType === SELECT || eventType === SELECTION_CHANGE;
    }
  }
});

// ../react-native-use-responder-events/dist/cjs/ResponderTouchHistoryStore.native.js
var require_ResponderTouchHistoryStore_native = __commonJS({
  "../react-native-use-responder-events/dist/cjs/ResponderTouchHistoryStore.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), ResponderTouchHistoryStore_exports = {};
    __export2(ResponderTouchHistoryStore_exports, {
      ResponderTouchHistoryStore: () => ResponderTouchHistoryStore
    });
    module2.exports = __toCommonJS2(ResponderTouchHistoryStore_exports);
    var import_types = require_types_native4(), MAX_TOUCH_BANK = 20;
    function timestampForTouch(touch) {
      return touch.timeStamp || touch.timestamp;
    }
    function createTouchRecord(touch) {
      return {
        touchActive: !0,
        startPageX: touch.pageX,
        startPageY: touch.pageY,
        startTimeStamp: timestampForTouch(touch),
        currentPageX: touch.pageX,
        currentPageY: touch.pageY,
        currentTimeStamp: timestampForTouch(touch),
        previousPageX: touch.pageX,
        previousPageY: touch.pageY,
        previousTimeStamp: timestampForTouch(touch)
      };
    }
    function resetTouchRecord(touchRecord, touch) {
      touchRecord.touchActive = !0, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch);
    }
    function getTouchIdentifier({ identifier }) {
      return identifier == null && console.error("Touch object is missing identifier."), process.env.NODE_ENV === "development" && identifier > MAX_TOUCH_BANK && console.error(
        "Touch identifier %s is greater than maximum supported %s which causes performance issues backfilling array locations for all of the indices.",
        identifier,
        MAX_TOUCH_BANK
      ), identifier;
    }
    function recordTouchStart(touch, touchHistory) {
      let identifier = getTouchIdentifier(touch), touchRecord = touchHistory.touchBank[identifier];
      touchRecord ? resetTouchRecord(touchRecord, touch) : touchHistory.touchBank[identifier] = createTouchRecord(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
    }
    function recordTouchMove(touch, touchHistory) {
      let touchRecord = touchHistory.touchBank[getTouchIdentifier(touch)];
      touchRecord ? (touchRecord.touchActive = !0, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.warn(
        `Cannot record touch move without a touch start.
`,
        `Touch Move: ${printTouch(touch)}
`,
        `Touch Bank: ${printTouchBank(touchHistory)}`
      );
    }
    function recordTouchEnd(touch, touchHistory) {
      let touchRecord = touchHistory.touchBank[getTouchIdentifier(touch)];
      touchRecord ? (touchRecord.touchActive = !1, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.warn(
        `Cannot record touch end without a touch start.
`,
        `Touch End: ${printTouch(touch)}
`,
        `Touch Bank: ${printTouchBank(touchHistory)}`
      );
    }
    function printTouch(touch) {
      return JSON.stringify({
        identifier: touch.identifier,
        pageX: touch.pageX,
        pageY: touch.pageY,
        timestamp: timestampForTouch(touch)
      });
    }
    function printTouchBank(touchHistory) {
      let { touchBank } = touchHistory, printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));
      return touchBank.length > MAX_TOUCH_BANK && (printed += ` (original size: ${touchBank.length})`), printed;
    }
    var ResponderTouchHistoryStore = class {
      constructor() {
        this._touchHistory = {
          touchBank: [],
          //Array<TouchRecord>
          numberActiveTouches: 0,
          // If there is only one active touch, we remember its location. This prevents
          // us having to loop through all of the touches all the time in the most
          // common case.
          indexOfSingleActiveTouch: -1,
          mostRecentTimeStamp: 0
        };
      }
      recordTouchTrack(topLevelType, nativeEvent) {
        let touchHistory = this._touchHistory;
        if ((0, import_types.isMoveish)(topLevelType))
          nativeEvent.changedTouches.forEach((touch) => recordTouchMove(touch, touchHistory));
        else if ((0, import_types.isStartish)(topLevelType))
          nativeEvent.changedTouches.forEach((touch) => recordTouchStart(touch, touchHistory)), touchHistory.numberActiveTouches = nativeEvent.touches.length, touchHistory.numberActiveTouches === 1 && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);
        else if ((0, import_types.isEndish)(topLevelType) && (nativeEvent.changedTouches.forEach((touch) => recordTouchEnd(touch, touchHistory)), touchHistory.numberActiveTouches = nativeEvent.touches.length, touchHistory.numberActiveTouches === 1)) {
          let { touchBank } = touchHistory;
          for (let i = 0; i < touchBank.length; i++) {
            let touchTrackToCheck = touchBank[i];
            if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {
              touchHistory.indexOfSingleActiveTouch = i;
              break;
            }
          }
          if (process.env.NODE_ENV === "development") {
            let activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];
            activeRecord != null && activeRecord.touchActive || console.error("Cannot find single active touch.");
          }
        }
      }
      get touchHistory() {
        return this._touchHistory;
      }
    };
  }
});

// ../react-native-use-responder-events/dist/cjs/ResponderSystem.native.js
var require_ResponderSystem_native = __commonJS({
  "../react-native-use-responder-events/dist/cjs/ResponderSystem.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), ResponderSystem_exports = {};
    __export2(ResponderSystem_exports, {
      addNode: () => addNode,
      attachListeners: () => attachListeners,
      getResponderNode: () => getResponderNode,
      removeNode: () => removeNode,
      terminateResponder: () => terminateResponder
    });
    module2.exports = __toCommonJS2(ResponderSystem_exports);
    var import_createResponderEvent = __toESM2(require_createResponderEvent_native()), import_ResponderTouchHistoryStore = require_ResponderTouchHistoryStore_native(), import_types = require_types_native4(), import_utils = require_utils_native(), import_utils2 = require_utils_native(), emptyObject = {}, startRegistration = [
      "onStartShouldSetResponderCapture",
      "onStartShouldSetResponder",
      { bubbles: !0 }
    ], moveRegistration = [
      "onMoveShouldSetResponderCapture",
      "onMoveShouldSetResponder",
      { bubbles: !0 }
    ], scrollRegistration = [
      "onScrollShouldSetResponderCapture",
      "onScrollShouldSetResponder",
      { bubbles: !1 }
    ], shouldSetResponderEvents = {
      touchstart: startRegistration,
      mousedown: startRegistration,
      touchmove: moveRegistration,
      mousemove: moveRegistration,
      scroll: scrollRegistration
    }, emptyResponder = { id: null, idPath: null, node: null }, responderListenersMap = /* @__PURE__ */ new Map(), isEmulatingMouseEvents = !1, trackedTouchCount = 0, currentResponder = {
      id: null,
      node: null,
      idPath: null
    }, responderTouchHistoryStore = new import_ResponderTouchHistoryStore.ResponderTouchHistoryStore();
    function changeCurrentResponder(responder) {
      currentResponder = responder;
    }
    function getResponderConfig(id) {
      return responderListenersMap.get(id) ?? emptyObject;
    }
    function eventListener(domEvent) {
      let eventType = domEvent.type, eventTarget = domEvent.target;
      if (eventType === "touchstart" && (isEmulatingMouseEvents = !0), (eventType === "touchmove" || trackedTouchCount > 1) && (isEmulatingMouseEvents = !1), // Ignore browser emulated mouse events
      eventType === "mousedown" && isEmulatingMouseEvents || eventType === "mousemove" && isEmulatingMouseEvents || // Ignore mousemove if a mousedown didn't occur first
      eventType === "mousemove" && trackedTouchCount < 1)
        return;
      if (isEmulatingMouseEvents && eventType === "mouseup") {
        trackedTouchCount === 0 && (isEmulatingMouseEvents = !1);
        return;
      }
      let isStartEvent = (0, import_types.isStartish)(eventType) && (0, import_utils2.isPrimaryPointerDown)(domEvent), isMoveEvent = (0, import_types.isMoveish)(eventType), isEndEvent = (0, import_types.isEndish)(eventType), isScrollEvent = (0, import_types.isScroll)(eventType), isSelectionChangeEvent = (0, import_types.isSelectionChange)(eventType), responderEvent = (0, import_createResponderEvent.default)(domEvent, responderTouchHistoryStore);
      (isStartEvent || isMoveEvent || isEndEvent) && (domEvent.touches ? trackedTouchCount = domEvent.touches.length : isStartEvent ? trackedTouchCount = 1 : isEndEvent && (trackedTouchCount = 0), responderTouchHistoryStore.recordTouchTrack(
        eventType,
        responderEvent.nativeEvent
      ));
      let eventPaths = (0, import_utils2.getResponderPaths)(domEvent), wasNegotiated = !1, wantsResponder;
      if (isStartEvent || isMoveEvent || isScrollEvent && trackedTouchCount > 0) {
        let currentResponderIdPath = currentResponder.idPath, eventIdPath = eventPaths.idPath;
        if (currentResponderIdPath != null && eventIdPath != null) {
          let lowestCommonAncestor = (0, import_utils2.getLowestCommonAncestor)(
            currentResponderIdPath,
            eventIdPath
          );
          if (lowestCommonAncestor != null) {
            let index = eventIdPath.indexOf(lowestCommonAncestor) + (lowestCommonAncestor === currentResponder.id ? 1 : 0);
            eventPaths = {
              idPath: eventIdPath.slice(index),
              nodePath: eventPaths.nodePath.slice(index)
            };
          } else
            eventPaths = null;
        }
        eventPaths != null && (wantsResponder = findWantsResponder(eventPaths, domEvent, responderEvent), wantsResponder != null && (attemptTransfer(responderEvent, wantsResponder), wasNegotiated = !0));
      }
      if (currentResponder.id != null && currentResponder.node != null) {
        let { id, node } = currentResponder, {
          onResponderStart,
          onResponderMove,
          onResponderEnd,
          onResponderRelease,
          onResponderTerminate,
          onResponderTerminationRequest
        } = getResponderConfig(id);
        if (responderEvent.bubbles = !1, responderEvent.cancelable = !1, responderEvent.currentTarget = node, isStartEvent)
          onResponderStart != null && (responderEvent.dispatchConfig.registrationName = "onResponderStart", onResponderStart(responderEvent));
        else if (isMoveEvent)
          onResponderMove != null && (responderEvent.dispatchConfig.registrationName = "onResponderMove", onResponderMove(responderEvent));
        else {
          let isTerminateEvent = (0, import_types.isCancelish)(eventType) || // native context menu
          eventType === "contextmenu" || // window blur
          eventType === "blur" && eventTarget === window || // responder (or ancestors) blur
          eventType === "blur" && eventTarget.contains(node) && domEvent.relatedTarget !== node || // native scroll without using a pointer
          isScrollEvent && trackedTouchCount === 0 || // native scroll on node that is parent of the responder (allow siblings to scroll)
          isScrollEvent && eventTarget.contains(node) && eventTarget !== node || // native select/selectionchange on node
          isSelectionChangeEvent && (0, import_utils2.hasValidSelection)(domEvent), isReleaseEvent = isEndEvent && !isTerminateEvent && !(0, import_utils2.hasTargetTouches)(node, domEvent.touches);
          if (isEndEvent && onResponderEnd != null && (responderEvent.dispatchConfig.registrationName = "onResponderEnd", onResponderEnd(responderEvent)), isReleaseEvent && (onResponderRelease != null && (responderEvent.dispatchConfig.registrationName = "onResponderRelease", onResponderRelease(responderEvent)), changeCurrentResponder(emptyResponder)), isTerminateEvent) {
            let shouldTerminate = !0;
            (eventType === "contextmenu" || eventType === "scroll" || eventType === "selectionchange") && (wasNegotiated ? shouldTerminate = !1 : onResponderTerminationRequest != null && (responderEvent.dispatchConfig.registrationName = "onResponderTerminationRequest", onResponderTerminationRequest(responderEvent) === !1 && (shouldTerminate = !1))), shouldTerminate && (onResponderTerminate != null && (responderEvent.dispatchConfig.registrationName = "onResponderTerminate", onResponderTerminate(responderEvent)), changeCurrentResponder(emptyResponder), isEmulatingMouseEvents = !1, trackedTouchCount = 0);
          }
        }
      }
    }
    function findWantsResponder(eventPaths, domEvent, responderEvent) {
      let shouldSetCallbacks = shouldSetResponderEvents[domEvent.type];
      if (shouldSetCallbacks != null) {
        let { idPath, nodePath } = eventPaths, shouldSetCallbackCaptureName = shouldSetCallbacks[0], shouldSetCallbackBubbleName = shouldSetCallbacks[1], { bubbles } = shouldSetCallbacks[2], check = function(id, node, callbackName) {
          let shouldSetCallback = getResponderConfig(id)[callbackName];
          if (shouldSetCallback != null && (responderEvent.currentTarget = node, shouldSetCallback(responderEvent) === !0)) {
            let prunedIdPath = idPath.slice(idPath.indexOf(id));
            return { id, node, idPath: prunedIdPath };
          }
        };
        for (let i = idPath.length - 1; i >= 0; i--) {
          let id = idPath[i], node = nodePath[i], result = check(id, node, shouldSetCallbackCaptureName);
          if (result != null)
            return result;
          if (responderEvent.isPropagationStopped() === !0)
            return;
        }
        if (bubbles)
          for (let i = 0; i < idPath.length; i++) {
            let id = idPath[i], node = nodePath[i], result = check(id, node, shouldSetCallbackBubbleName);
            if (result != null)
              return result;
            if (responderEvent.isPropagationStopped() === !0)
              return;
          }
        else {
          let id = idPath[0], node = nodePath[0];
          if (domEvent.target === node)
            return check(id, node, shouldSetCallbackBubbleName);
        }
      }
    }
    function attemptTransfer(responderEvent, wantsResponder) {
      let { id: currentId, node: currentNode } = currentResponder, { id, node } = wantsResponder, { onResponderGrant, onResponderReject } = getResponderConfig(id);
      if (responderEvent.bubbles = !1, responderEvent.cancelable = !1, responderEvent.currentTarget = node, currentId == null)
        onResponderGrant != null && (responderEvent.currentTarget = node, responderEvent.dispatchConfig.registrationName = "onResponderGrant", onResponderGrant(responderEvent)), changeCurrentResponder(wantsResponder);
      else {
        let { onResponderTerminate, onResponderTerminationRequest } = getResponderConfig(currentId), allowTransfer = !0;
        onResponderTerminationRequest != null && (responderEvent.currentTarget = currentNode, responderEvent.dispatchConfig.registrationName = "onResponderTerminationRequest", onResponderTerminationRequest(responderEvent) === !1 && (allowTransfer = !1)), allowTransfer ? (onResponderTerminate != null && (responderEvent.currentTarget = currentNode, responderEvent.dispatchConfig.registrationName = "onResponderTerminate", onResponderTerminate(responderEvent)), onResponderGrant != null && (responderEvent.currentTarget = node, responderEvent.dispatchConfig.registrationName = "onResponderGrant", onResponderGrant(responderEvent)), changeCurrentResponder(wantsResponder)) : onResponderReject != null && (responderEvent.currentTarget = node, responderEvent.dispatchConfig.registrationName = "onResponderReject", onResponderReject(responderEvent));
      }
    }
    var documentEventsCapturePhase = ["blur", "scroll"], documentEventsBubblePhase = [
      // mouse
      "mousedown",
      "mousemove",
      "mouseup",
      "dragstart",
      // touch
      "touchstart",
      "touchmove",
      "touchend",
      "touchcancel",
      // other
      "contextmenu",
      "select",
      "selectionchange"
    ], isTamaguiResponderActive = Symbol();
    function attachListeners() {
      import_utils.canUseDOM && !window[isTamaguiResponderActive] && (window.addEventListener("blur", eventListener), documentEventsBubblePhase.forEach((eventType) => {
        document.addEventListener(eventType, eventListener);
      }), documentEventsCapturePhase.forEach((eventType) => {
        document.addEventListener(eventType, eventListener, !0);
      }), window[isTamaguiResponderActive] = !0);
    }
    function addNode(id, node, config) {
      (0, import_utils2.setResponderId)(node, id), responderListenersMap.set(id, config);
    }
    function removeNode(id) {
      currentResponder.id === id && terminateResponder(), responderListenersMap.has(id) && responderListenersMap.delete(id);
    }
    function terminateResponder() {
      let { id, node } = currentResponder;
      if (id != null && node != null) {
        let { onResponderTerminate } = getResponderConfig(id);
        if (onResponderTerminate != null) {
          let event = (0, import_createResponderEvent.default)({}, responderTouchHistoryStore);
          event.currentTarget = node, onResponderTerminate(event);
        }
        changeCurrentResponder(emptyResponder);
      }
      isEmulatingMouseEvents = !1, trackedTouchCount = 0;
    }
    function getResponderNode() {
      return currentResponder.node;
    }
  }
});

// ../react-native-use-responder-events/dist/cjs/useResponderEvents.native.js
var require_useResponderEvents_native = __commonJS({
  "../react-native-use-responder-events/dist/cjs/useResponderEvents.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useResponderEvents_exports = {};
    __export2(useResponderEvents_exports, {
      useResponderEvents: () => useResponderEvents
    });
    module2.exports = __toCommonJS2(useResponderEvents_exports);
    var React2 = __toESM2(require("react")), ResponderSystem = __toESM2(require_ResponderSystem_native());
    __reExport2(useResponderEvents_exports, require_utils_native(), module2.exports);
    var emptyObject = {};
    function useResponderEvents(hostRef, config = emptyObject) {
      let id = React2.useId(), isAttachedRef = React2.useRef(!1);
      React2.useEffect(() => (ResponderSystem.attachListeners(), () => {
        ResponderSystem.removeNode(id);
      }), [id]), React2.useEffect(() => {
        let {
          onMoveShouldSetResponder,
          onMoveShouldSetResponderCapture,
          onScrollShouldSetResponder,
          onScrollShouldSetResponderCapture,
          onSelectionChangeShouldSetResponder,
          onSelectionChangeShouldSetResponderCapture,
          onStartShouldSetResponder,
          onStartShouldSetResponderCapture
        } = config, requiresResponderSystem = onMoveShouldSetResponder != null || onMoveShouldSetResponderCapture != null || onScrollShouldSetResponder != null || onScrollShouldSetResponderCapture != null || onSelectionChangeShouldSetResponder != null || onSelectionChangeShouldSetResponderCapture != null || onStartShouldSetResponder != null || onStartShouldSetResponderCapture != null, node = hostRef.current;
        requiresResponderSystem ? (ResponderSystem.addNode(id, node, config), isAttachedRef.current = !0) : isAttachedRef.current && (ResponderSystem.removeNode(id), isAttachedRef.current = !1);
      }, [config, hostRef, id]), process.env.NODE_ENV === "development" && (React2.useDebugValue({
        isResponder: hostRef.current === ResponderSystem.getResponderNode()
      }), React2.useDebugValue(config));
    }
  }
});

// ../react-native-use-responder-events/dist/cjs/index.native.js
var require_index_native14 = __commonJS({
  "../react-native-use-responder-events/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_useResponderEvents_native(), module2.exports);
  }
});

// ../core/dist/cjs/getBaseViews.native.js
var require_getBaseViews_native = __commonJS({
  "../core/dist/cjs/getBaseViews.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getBaseViews_native_exports = {};
    __export2(getBaseViews_native_exports, {
      getBaseViews: () => getBaseViews
    });
    module2.exports = __toCommonJS2(getBaseViews_native_exports);
    function getBaseViews() {
      let native = require("react-native");
      return {
        View: native.View || native.default.View,
        Text: native.Text || native.default.Text,
        Pressable: native.Pressable || native.default.Pressable
      };
    }
  }
});

// ../core/dist/cjs/helpers/getBoundingClientRect.native.js
var require_getBoundingClientRect_native = __commonJS({
  "../core/dist/cjs/helpers/getBoundingClientRect.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getBoundingClientRect_exports = {};
    __export2(getBoundingClientRect_exports, {
      getBoundingClientRect: () => getBoundingClientRect
    });
    module2.exports = __toCommonJS2(getBoundingClientRect_exports);
    var getBoundingClientRect = (node) => {
      var _a;
      if (!(!node || node.nodeType !== 1))
        return (_a = node.getBoundingClientRect) == null ? void 0 : _a.call(node);
    };
  }
});

// ../core/dist/cjs/helpers/getRect.native.js
var require_getRect_native = __commonJS({
  "../core/dist/cjs/helpers/getRect.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getRect_exports = {};
    __export2(getRect_exports, {
      getRect: () => getRect
    });
    module2.exports = __toCommonJS2(getRect_exports);
    var import_getBoundingClientRect = require_getBoundingClientRect_native(), getRect = (node) => {
      let rect = (0, import_getBoundingClientRect.getBoundingClientRect)(node);
      if (!rect)
        return;
      let { x, y, top, left } = rect;
      return { x, y, width: node.offsetWidth, height: node.offsetHeight, top, left };
    };
  }
});

// ../core/dist/cjs/hooks/useElementLayout.native.js
var require_useElementLayout_native = __commonJS({
  "../core/dist/cjs/hooks/useElementLayout.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useElementLayout_exports = {};
    __export2(useElementLayout_exports, {
      measureLayout: () => measureLayout,
      useElementLayout: () => useElementLayout
    });
    module2.exports = __toCommonJS2(useElementLayout_exports);
    var import_constants = require_index_native2(), import_getBoundingClientRect = require_getBoundingClientRect_native(), import_getRect = require_getRect_native(), LayoutHandlers = /* @__PURE__ */ new WeakMap(), resizeObserver = null;
    typeof window < "u" && "ResizeObserver" in window && (resizeObserver = new ResizeObserver((entries) => {
      for (let { target } of entries) {
        let onLayout = LayoutHandlers.get(target);
        if (typeof onLayout != "function")
          return;
        measureLayout(target, null, (x, y, width, height, left, top) => {
          onLayout({
            nativeEvent: {
              layout: { x, y, width, height, left, top },
              target
            },
            timeStamp: Date.now()
          });
        });
      }
    }));
    var measureLayout = (node, relativeTo, callback) => {
      let relativeNode = relativeTo || (node == null ? void 0 : node.parentNode);
      relativeNode instanceof HTMLElement && setTimeout(() => {
        let relativeRect = (0, import_getBoundingClientRect.getBoundingClientRect)(relativeNode), { height, left, top, width } = (0, import_getRect.getRect)(node), x = left - relativeRect.left, y = top - relativeRect.top;
        callback(x, y, width, height, left, top);
      }, 0);
    };
    function useElementLayout(ref, onLayout) {
      (0, import_constants.useIsomorphicLayoutEffect)(() => {
        if (!resizeObserver || !onLayout)
          return;
        let node = ref.current;
        if (node)
          return LayoutHandlers.set(node, onLayout), resizeObserver.observe(node), () => {
            resizeObserver == null || resizeObserver.unobserve(node);
          };
      }, [ref, onLayout]);
    }
  }
});

// ../core/dist/cjs/hooks/usePlatformMethods.native.js
var require_usePlatformMethods_native = __commonJS({
  "../core/dist/cjs/hooks/usePlatformMethods.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), usePlatformMethods_exports = {};
    __export2(usePlatformMethods_exports, {
      usePlatformMethods: () => usePlatformMethods
    });
    module2.exports = __toCommonJS2(usePlatformMethods_exports);
    var import_web = require_index_native9(), import_getRect = require_getRect_native(), import_useElementLayout = require_useElementLayout_native();
    function usePlatformMethods(hostRef) {
      (0, import_web.useIsomorphicLayoutEffect)(() => {
        let node = hostRef.current;
        node && (node.measure = (callback) => (0, import_useElementLayout.measureLayout)(node, null, callback), node.measureLayout = (relativeToNode, success) => (0, import_useElementLayout.measureLayout)(node, relativeToNode, success), node.measureInWindow = (callback) => {
          node && setTimeout(() => {
            let { height, left, top, width } = (0, import_getRect.getRect)(node);
            callback(left, top, width, height);
          }, 0);
        });
      }, [hostRef]);
    }
  }
});

// ../fake-react-native/index.js
var require_fake_react_native = __commonJS({
  "../fake-react-native/index.js"(exports, module2) {
    module2.exports = proxyWorm();
    function proxyWorm() {
      return new Proxy(
        {
          StyleSheet: {
            create() {
            }
          },
          Platform: {
            OS: "web"
          },
          Image: "Image",
          View: "View",
          Text: "Text",
          TextInput: "TextInput",
          ScrollView: "ScrollView",
          Dimensions: {
            addEventListener(cb) {
            }
          },
          addPoolingTo() {
          }
        },
        {
          get(target, key) {
            return Reflect.get(target, key) || proxyWorm();
          },
          apply() {
            return proxyWorm();
          }
        }
      );
    }
  }
});

// ../fake-react-native/idFn.js
var idFn_exports = {};
__export(idFn_exports, {
  default: () => idFn_default
});
var idFn_default, init_idFn = __esm({
  "../fake-react-native/idFn.js"() {
    idFn_default = (_) => _;
  }
});

// ../core/dist/cjs/vendor/Pressability.native.js
var require_Pressability_native = __commonJS({
  "../core/dist/cjs/vendor/Pressability.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Pressability_native_exports = {};
    __export2(Pressability_native_exports, {
      Pressability: () => Pressability,
      usePressability: () => usePressability
    });
    module2.exports = __toCommonJS2(Pressability_native_exports);
    var Pressability = require_fake_react_native().default, usePressability = (init_idFn(), __toCommonJS(idFn_exports)).default;
  }
});

// ../core/dist/cjs/reactNativeTypes.native.js
var require_reactNativeTypes_native = __commonJS({
  "../core/dist/cjs/reactNativeTypes.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), reactNativeTypes_exports = {};
    module2.exports = __toCommonJS2(reactNativeTypes_exports);
  }
});

// ../core/dist/cjs/index.native.js
var require_index_native15 = __commonJS({
  "../core/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      Stack: () => Stack3,
      Text: () => Text3
    });
    module2.exports = __toCommonJS2(src_exports2);
    var import_react_native_use_responder_events = require_index_native14(), import_web = require_index_native9(), import_getBaseViews = require_getBaseViews_native(), import_useElementLayout = require_useElementLayout_native(), import_usePlatformMethods = require_usePlatformMethods_native(), import_Pressability = require_Pressability_native();
    __reExport2(src_exports2, require_index_native9(), module2.exports);
    __reExport2(src_exports2, require_reactNativeTypes_native(), module2.exports);
    var Stack3 = import_web.Stack, Text3 = import_web.Text;
    (0, import_web.setupHooks)({
      getBaseViews: import_getBaseViews.getBaseViews,
      usePropsTransform(elementType, propsIn, hostRef) {
        let {
          // event props
          onMoveShouldSetResponder,
          onMoveShouldSetResponderCapture,
          onResponderEnd,
          onResponderGrant,
          onResponderMove,
          onResponderReject,
          onResponderRelease,
          onResponderStart,
          onResponderTerminate,
          onResponderTerminationRequest,
          onScrollShouldSetResponder,
          onScrollShouldSetResponderCapture,
          onSelectionChangeShouldSetResponder,
          onSelectionChangeShouldSetResponderCapture,
          onStartShouldSetResponder,
          onStartShouldSetResponderCapture,
          // android
          collapsable,
          focusable,
          // deprecated,
          accessible,
          accessibilityDisabled,
          onLayout,
          hrefAttrs,
          ...viewProps
        } = propsIn;
        if ((0, import_usePlatformMethods.usePlatformMethods)(hostRef), (0, import_useElementLayout.useElementLayout)(hostRef, onLayout), (0, import_react_native_use_responder_events.useResponderEvents)(hostRef, {
          onMoveShouldSetResponder,
          onMoveShouldSetResponderCapture,
          onResponderEnd,
          onResponderGrant,
          onResponderMove,
          onResponderReject,
          onResponderRelease,
          onResponderStart,
          onResponderTerminate,
          onResponderTerminationRequest,
          onScrollShouldSetResponder,
          onScrollShouldSetResponderCapture,
          onSelectionChangeShouldSetResponder,
          onSelectionChangeShouldSetResponderCapture,
          onStartShouldSetResponder,
          onStartShouldSetResponderCapture
        }), viewProps.href !== void 0 && hrefAttrs !== void 0) {
          let { download, rel, target } = hrefAttrs;
          download != null && (viewProps.download = download), rel != null && (viewProps.rel = rel), typeof target == "string" && (viewProps.target = target.charAt(0) !== "_" ? `_${target}` : target);
        }
        return viewProps;
      },
      useEvents(viewProps, events, { pseudos }, setStateShallow, staticConfig) {
        if (events != null && events.onFocus && (viewProps.onFocus = events.onFocus), events != null && events.onBlur && (viewProps.onBlur = events.onBlur), staticConfig.isInput) {
          if (events) {
            let { onPressIn, onPressOut, onPress } = events, inputEvents = {
              onPressIn,
              onPressOut: onPressOut || onPress
            };
            onPressOut && onPress && (inputEvents.onPressOut = (0, import_web.composeEventHandlers)(onPress, onPressOut)), Object.assign(viewProps, inputEvents);
          }
        } else {
          events && viewProps.hitSlop && (events.hitSlop = viewProps.hitSlop);
          let pressability = (0, import_Pressability.usePressability)(events || null);
          if (events && events.onPress)
            for (let key in pressability) {
              let og = viewProps[key], val = pressability[key];
              viewProps[key] = og && !dontComposePressabilityKeys[key] ? (0, import_web.composeEventHandlers)(og, val) : val;
            }
        }
      }
      // attempt at properly fixing RN input, but <Pressable><TextInput /> just doesnt work on RN
      // useChildren(children, viewProps, events, staticConfig) {
      //   if (process.env.TAMAGUI_TARGET === 'native') {
      //     if (staticConfig.isInput && !staticConfig.isHOC) {
      //       const Pressable = getBaseViews().Pressable
      //       console.log(
      //         'wrapping in pressable',
      //         events?.['onPressIn']?.toString(),
      //         viewProps['onPressIn']
      //       )
      //       // we need to wrap it in a view?
      //       return <Pressable {...events}>{children}</Pressable>
      //     }
      //   }
      // },
    });
    var dontComposePressabilityKeys = {
      onClick: !0
    };
  }
});

// ../collection/dist/cjs/Collection.native.js
var require_Collection_native = __commonJS({
  "../collection/dist/cjs/Collection.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Collection_exports = {};
    __export2(Collection_exports, {
      createCollection: () => createCollection
    });
    module2.exports = __toCommonJS2(Collection_exports);
    var import_compose_refs = require_index_native5(), import_core13 = require_index_native15(), import_react2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime");
    function createCollection(name) {
      let { Provider: CollectionProviderImpl, useStyledContext: useCollectionContext } = (0, import_core13.createStyledContext)({
        collectionRef: { current: null },
        itemMap: /* @__PURE__ */ new Map()
      }), CollectionProvider = (props) => {
        let { __scopeCollection, children } = props, ref = import_react2.default.useRef(null), itemMap = import_react2.default.useRef(/* @__PURE__ */ new Map()).current;
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          CollectionProviderImpl,
          {
            scope: __scopeCollection,
            itemMap,
            collectionRef: ref,
            children
          }
        );
      };
      CollectionProvider.displayName = "CollectionProvider";
      let COLLECTION_SLOT_NAME = name + "CollectionSlot", CollectionSlot = import_react2.default.forwardRef((props, forwardedRef) => {
        let { __scopeCollection, children } = props, context = useCollectionContext(__scopeCollection), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, context.collectionRef);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_core13.Slot, { ref: composedRefs, children });
      });
      CollectionSlot.displayName = COLLECTION_SLOT_NAME;
      let ITEM_SLOT_NAME = name + "CollectionItemSlot", ITEM_DATA_ATTR = "data-collection-item", CollectionItemSlot = import_react2.default.forwardRef((props, forwardedRef) => {
        let { __scopeCollection, children, ...itemData } = props, ref = import_react2.default.useRef(null), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, ref), context = useCollectionContext(__scopeCollection);
        return import_react2.default.useEffect(() => (context.itemMap.set(ref, { ref, ...itemData }), () => void context.itemMap.delete(ref))), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_core13.Slot, { [ITEM_DATA_ATTR]: "", ref: composedRefs, children });
      });
      CollectionItemSlot.displayName = ITEM_SLOT_NAME;
      function useCollection(__scopeCollection) {
        let context = useCollectionContext(__scopeCollection);
        return import_react2.default.useCallback(() => {
          if (!import_core13.isWeb)
            return [];
          let collectionNode = context.collectionRef.current;
          if (!collectionNode)
            return [];
          let orderedNodes = Array.from(
            collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`)
          );
          return Array.from(context.itemMap.values()).sort(
            (a, b) => orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)
          );
        }, [context.collectionRef, context.itemMap]);
      }
      return [
        { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },
        useCollection
      ];
    }
  }
});

// ../collection/dist/cjs/index.native.js
var require_index_native16 = __commonJS({
  "../collection/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Collection_native(), module2.exports);
  }
});

// ../stacks/dist/cjs/getElevation.native.js
var require_getElevation_native = __commonJS({
  "../stacks/dist/cjs/getElevation.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getElevation_exports = {};
    __export2(getElevation_exports, {
      getElevation: () => getElevation,
      getSizedElevation: () => getSizedElevation
    });
    module2.exports = __toCommonJS2(getElevation_exports);
    var import_core13 = require_index_native15(), getElevation = (size2, extras) => {
      if (!size2)
        return;
      let { tokens } = extras, token = tokens.size[size2], sizeNum = (0, import_core13.isVariable)(token) ? +token.val : size2;
      return getSizedElevation(sizeNum, extras);
    }, getSizedElevation = (val, { theme, tokens }) => {
      let num = 0;
      if (val === !0) {
        let val2 = (0, import_core13.getVariableValue)(tokens.size.true);
        typeof val2 == "number" ? num = val2 : num = 10;
      } else
        num = +val;
      if (num === 0)
        return;
      let [height, shadowRadius] = [Math.round(num / 4 + 1), Math.round(num / 2 + 2)];
      return {
        shadowColor: theme.shadowColor,
        shadowRadius,
        shadowOffset: { height, width: 0 },
        ...import_core13.isAndroid ? {
          elevationAndroid: 2 * height
        } : {}
      };
    };
  }
});

// ../stacks/dist/cjs/Stacks.native.js
var require_Stacks_native = __commonJS({
  "../stacks/dist/cjs/Stacks.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Stacks_exports = {};
    __export2(Stacks_exports, {
      XStack: () => XStack,
      YStack: () => YStack3,
      ZStack: () => ZStack,
      fullscreenStyle: () => fullscreenStyle
    });
    module2.exports = __toCommonJS2(Stacks_exports);
    var import_core13 = require_index_native15(), import_getElevation = require_getElevation_native(), fullscreenStyle = {
      position: "absolute",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0
    }, variants = {
      fullscreen: {
        true: fullscreenStyle
      },
      elevation: {
        "...size": import_getElevation.getElevation,
        ":number": import_getElevation.getElevation
      }
    }, YStack3 = (0, import_core13.styled)(import_core13.Stack, {
      flexDirection: "column",
      variants
    }), XStack = (0, import_core13.styled)(import_core13.Stack, {
      flexDirection: "row",
      variants
    }), ZStack = (0, import_core13.styled)(
      YStack3,
      {
        position: "relative"
      },
      {
        neverFlatten: !0,
        isZStack: !0
      }
    );
  }
});

// ../get-token/dist/cjs/index.native.js
var require_index_native17 = __commonJS({
  "../get-token/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      getRadius: () => getRadius,
      getSize: () => getSize,
      getSpace: () => getSpace2,
      getTokenRelative: () => getTokenRelative,
      stepTokenUpOrDown: () => stepTokenUpOrDown
    });
    module2.exports = __toCommonJS2(src_exports2);
    var import_web = require_index_native9(), import_web2 = require_index_native9(), defaultOptions = {
      shift: 0,
      bounds: [0]
    }, getSize = (size2, options) => getTokenRelative("size", size2, options), getSpace2 = (space, options) => getTokenRelative("space", space, options), getRadius = (radius, options) => getTokenRelative("radius", radius, options), cacheVariables = {}, cacheWholeVariables = {}, cacheKeys = {}, cacheWholeKeys = {}, stepTokenUpOrDown = (type, current, options = defaultOptions) => {
      var _a, _b;
      let tokens = (0, import_web2.getTokens)({ prefixed: !0 })[type];
      if (!(type in cacheVariables)) {
        cacheKeys[type] = [], cacheVariables[type] = [], cacheWholeKeys[type] = [], cacheWholeVariables[type] = [];
        let sorted = Object.keys(tokens).map((k) => tokens[k]).sort((a, b) => a.val - b.val);
        for (let token of sorted)
          cacheKeys[type].push(token.key), cacheVariables[type].push(token);
        let sortedExcludingHalfSteps = sorted.filter((x) => !x.key.endsWith(".5"));
        for (let token of sortedExcludingHalfSteps)
          cacheWholeKeys[type].push(token.key), cacheWholeVariables[type].push(token);
      }
      let isString = typeof current == "string", tokensOrdered = (options.excludeHalfSteps ? isString ? cacheWholeKeys : cacheWholeVariables : isString ? cacheKeys : cacheVariables)[type], min2 = ((_a = options.bounds) == null ? void 0 : _a[0]) ?? 0, max2 = ((_b = options.bounds) == null ? void 0 : _b[1]) ?? tokensOrdered.length - 1, currentIndex = tokensOrdered.indexOf(current), shift2 = options.shift || 0;
      shift2 && (current === "$true" || (0, import_web.isVariable)(current) && current.name === "true") && (shift2 += shift2 > 0 ? 1 : -1);
      let index = Math.min(max2, Math.max(min2, currentIndex + shift2)), found = tokensOrdered[index];
      return (typeof found == "string" ? tokens[found] : found) || tokens.$true;
    }, getTokenRelative = stepTokenUpOrDown;
  }
});

// ../get-button-sized/dist/cjs/index.native.js
var require_index_native18 = __commonJS({
  "../get-button-sized/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      getButtonSized: () => getButtonSized2
    });
    module2.exports = __toCommonJS2(src_exports2);
    var import_get_token2 = require_index_native17(), getButtonSized2 = (val, { tokens, props }) => {
      if (!val)
        return;
      if (typeof val == "number")
        return {
          paddingHorizontal: val * 0.25,
          height: val,
          borderRadius: props.circular ? 1e5 : val * 0.2
        };
      let xSize = (0, import_get_token2.getSpace)(val), radiusToken = tokens.radius[val] ?? tokens.radius.$true;
      return {
        paddingHorizontal: xSize,
        height: val,
        borderRadius: props.circular ? 1e5 : radiusToken
      };
    };
  }
});

// ../stacks/dist/cjs/variants.native.js
var require_variants_native = __commonJS({
  "../stacks/dist/cjs/variants.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), variants_exports = {};
    __export2(variants_exports, {
      bordered: () => bordered,
      circular: () => circular,
      elevate: () => elevate,
      focusTheme: () => focusTheme,
      hoverTheme: () => hoverTheme,
      padded: () => padded,
      pressTheme: () => pressTheme,
      radiused: () => radiused
    });
    module2.exports = __toCommonJS2(variants_exports);
    var import_getElevation = require_getElevation_native(), elevate = {
      true: (_, extras) => (0, import_getElevation.getElevation)(extras.props.size, extras)
    }, bordered = (val, { props }) => ({
      // TODO size it with size in '...size'
      borderWidth: typeof val == "number" ? val : 1,
      borderColor: "$borderColor",
      ...props.hoverTheme && {
        hoverStyle: {
          borderColor: "$borderColorHover"
        }
      },
      ...props.pressTheme && {
        pressStyle: {
          borderColor: "$borderColorPress"
        }
      },
      ...props.focusTheme && {
        focusStyle: {
          borderColor: "$borderColorFocus"
        }
      }
    }), padded = {
      true: (_, extras) => {
        let { tokens, props } = extras;
        return {
          padding: tokens.space[props.size] || tokens.space.$true
        };
      }
    }, radiused = {
      true: (_, extras) => {
        let { tokens, props } = extras;
        return {
          borderRadius: tokens.radius[props.size] || tokens.radius.$true
        };
      }
    }, circularStyle = {
      borderRadius: 1e5,
      padding: 0
    }, circular = {
      true: (_, { props, tokens }) => {
        if (!("size" in props))
          return circularStyle;
        let size2 = tokens.size[props.size];
        return {
          ...circularStyle,
          width: size2,
          height: size2,
          maxWidth: size2,
          maxHeight: size2,
          minWidth: size2,
          minHeight: size2
        };
      }
    }, hoverTheme = {
      true: {
        hoverStyle: {
          backgroundColor: "$backgroundHover",
          borderColor: "$borderColorHover"
        }
      },
      false: {}
    }, pressTheme = {
      true: {
        cursor: "pointer",
        pressStyle: {
          backgroundColor: "$backgroundPress",
          borderColor: "$borderColorPress"
        }
      },
      false: {}
    }, focusTheme = {
      true: {
        focusStyle: {
          backgroundColor: "$backgroundFocus",
          borderColor: "$borderColorFocus"
        }
      },
      false: {}
    };
  }
});

// ../stacks/dist/cjs/SizableStack.native.js
var require_SizableStack_native = __commonJS({
  "../stacks/dist/cjs/SizableStack.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SizableStack_exports = {};
    __export2(SizableStack_exports, {
      SizableStack: () => SizableStack
    });
    module2.exports = __toCommonJS2(SizableStack_exports);
    var import_core13 = require_index_native15(), import_get_button_sized2 = require_index_native18(), import_Stacks = require_Stacks_native(), import_variants = require_variants_native(), SizableStack = (0, import_core13.styled)(import_Stacks.XStack, {
      name: "SizableStack",
      variants: {
        unstyled: {
          true: {
            hoverTheme: !1,
            pressTheme: !1,
            focusTheme: !1,
            elevate: !1,
            bordered: !1
          }
        },
        hoverTheme: import_variants.hoverTheme,
        pressTheme: import_variants.pressTheme,
        focusTheme: import_variants.focusTheme,
        circular: import_variants.circular,
        elevate: import_variants.elevate,
        bordered: import_variants.bordered,
        size: {
          "...size": (val, extras) => (0, import_get_button_sized2.getButtonSized)(val, extras)
        }
      }
    });
  }
});

// ../stacks/dist/cjs/ThemeableStack.native.js
var require_ThemeableStack_native = __commonJS({
  "../stacks/dist/cjs/ThemeableStack.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), ThemeableStack_exports = {};
    __export2(ThemeableStack_exports, {
      ThemeableStack: () => ThemeableStack,
      themeableVariants: () => themeableVariants
    });
    module2.exports = __toCommonJS2(ThemeableStack_exports);
    var import_core13 = require_index_native15(), import_Stacks = require_Stacks_native(), import_variants = require_variants_native(), chromelessStyle = {
      backgroundColor: "transparent",
      borderColor: "transparent",
      shadowColor: "transparent",
      hoverStyle: {
        borderColor: "transparent"
      }
    }, themeableVariants = {
      backgrounded: {
        true: {
          backgroundColor: "$background"
        }
      },
      radiused: import_variants.radiused,
      hoverTheme: import_variants.hoverTheme,
      pressTheme: import_variants.pressTheme,
      focusTheme: import_variants.focusTheme,
      circular: import_variants.circular,
      padded: import_variants.padded,
      elevate: import_variants.elevate,
      bordered: import_variants.bordered,
      transparent: {
        true: {
          backgroundColor: "transparent"
        }
      },
      chromeless: {
        true: chromelessStyle,
        all: {
          ...chromelessStyle,
          hoverStyle: chromelessStyle,
          pressStyle: chromelessStyle,
          focusStyle: chromelessStyle
        }
      }
    }, ThemeableStack = (0, import_core13.styled)(import_Stacks.YStack, {
      variants: themeableVariants
    });
  }
});

// ../stacks/dist/cjs/index.native.js
var require_index_native19 = __commonJS({
  "../stacks/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Stacks_native(), module2.exports);
    __reExport2(src_exports2, require_SizableStack_native(), module2.exports);
    __reExport2(src_exports2, require_ThemeableStack_native(), module2.exports);
  }
});

// ../get-font-sized/dist/cjs/index.native.js
var require_index_native20 = __commonJS({
  "../get-font-sized/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      getFontSized: () => getFontSized2
    });
    module2.exports = __toCommonJS2(src_exports2);
    var import_core13 = require_index_native15(), getFontSized2 = (sizeTokenIn = "$true", { font, fontFamily, props }) => {
      var _a, _b, _c, _d, _e, _f;
      if (!font) {
        process.env.NODE_ENV === "development" && console.warn(
          "Warning: No font found in props",
          { ...props },
          'For a sized text component, you either need to set fontFamily directly, or through the "defaultFont" setting in your createTamagui config.'
        );
        return;
      }
      let sizeToken = sizeTokenIn === "$true" ? getDefaultSizeToken(font) : sizeTokenIn, fontSize = font.size[sizeToken], lineHeight = (_a = font.lineHeight) == null ? void 0 : _a[sizeToken], fontWeight = (_b = font.weight) == null ? void 0 : _b[sizeToken], letterSpacing = (_c = font.letterSpacing) == null ? void 0 : _c[sizeToken], textTransform = (_d = font.transform) == null ? void 0 : _d[sizeToken], fontStyle = props.fontStyle ?? ((_e = font.style) == null ? void 0 : _e[sizeToken]), style = {
        color: props.color ?? ((_f = font.color) == null ? void 0 : _f[sizeToken]),
        fontStyle,
        textTransform,
        fontFamily,
        fontWeight,
        letterSpacing,
        fontSize,
        lineHeight
      };
      return process.env.NODE_ENV === "development" && props.debug && props.debug === "verbose" && (console.groupCollapsed("  \u{1F539} getFontSized", sizeTokenIn, sizeToken), console.info({ style, props, font }), console.groupEnd()), style;
    }, cache = /* @__PURE__ */ new WeakMap();
    function getDefaultSizeToken(font) {
      if (typeof font == "object" && cache.has(font))
        return cache.get(font);
      let sizeTokens = "$true" in font.size ? font.size : (0, import_core13.getTokens)().size, sizeDefault = sizeTokens.$true, sizeDefaultSpecific = sizeDefault ? Object.keys(sizeTokens).find(
        (x) => x !== "$true" && sizeTokens[x].val === sizeDefault.val
      ) : null;
      return !sizeDefault || !sizeDefaultSpecific ? (process.env.NODE_ENV === "development" && console.warn(`No default size is set in your tokens for the "true" key, fonts will be inconsistent.

      Fix this by having consistent tokens across fonts and sizes and setting a true key for your size tokens, or
      set true keys for all your font tokens: "size", "lineHeight", "fontStyle", etc.`), Object.keys(font.size)[3]) : (cache.set(font, sizeDefaultSpecific), sizeDefaultSpecific);
    }
  }
});

// ../text/dist/cjs/SizableText.native.js
var require_SizableText_native = __commonJS({
  "../text/dist/cjs/SizableText.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SizableText_exports = {};
    __export2(SizableText_exports, {
      SizableText: () => SizableText2
    });
    module2.exports = __toCommonJS2(SizableText_exports);
    var import_get_font_sized2 = require_index_native20(), import_web = require_index_native9(), variants = {
      unstyled: {
        false: {
          size: "$true",
          color: "$color"
        }
      },
      size: import_get_font_sized2.getFontSized
    };
    variants.fontFamily = {
      "...": (_, extras) => {
        let size2 = extras.props.size || "$true";
        return (0, import_get_font_sized2.getFontSized)(size2, extras);
      }
    };
    var SizableText2 = (0, import_web.styled)(import_web.Text, {
      name: "SizableText",
      fontFamily: "$body",
      variants,
      defaultVariants: {
        unstyled: !1
      }
    });
  }
});

// ../text/dist/cjs/Paragraph.native.js
var require_Paragraph_native = __commonJS({
  "../text/dist/cjs/Paragraph.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Paragraph_exports = {};
    __export2(Paragraph_exports, {
      Paragraph: () => Paragraph
    });
    module2.exports = __toCommonJS2(Paragraph_exports);
    var import_web = require_index_native9(), import_SizableText = require_SizableText_native(), Paragraph = (0, import_web.styled)(import_SizableText.SizableText, {
      name: "Paragraph",
      tag: "p",
      userSelect: "auto",
      color: "$color",
      size: "$true"
    });
  }
});

// ../text/dist/cjs/Headings.native.js
var require_Headings_native = __commonJS({
  "../text/dist/cjs/Headings.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Headings_exports = {};
    __export2(Headings_exports, {
      H1: () => H1,
      H2: () => H2,
      H3: () => H3,
      H4: () => H4,
      H5: () => H5,
      H6: () => H6,
      Heading: () => Heading
    });
    module2.exports = __toCommonJS2(Headings_exports);
    var import_web = require_index_native9(), import_Paragraph = require_Paragraph_native(), Heading = (0, import_web.styled)(import_Paragraph.Paragraph, {
      tag: "span",
      name: "Heading",
      accessibilityRole: "header",
      fontFamily: "$heading",
      size: "$8",
      margin: 0
    }), H1 = (0, import_web.styled)(Heading, {
      name: "H1",
      tag: "h1",
      size: "$10"
    }), H2 = (0, import_web.styled)(Heading, {
      name: "H2",
      tag: "h2",
      size: "$9"
    }), H3 = (0, import_web.styled)(Heading, {
      name: "H3",
      tag: "h3",
      size: "$8"
    }), H4 = (0, import_web.styled)(Heading, {
      name: "H4",
      tag: "h4",
      size: "$7"
    }), H5 = (0, import_web.styled)(Heading, {
      name: "H5",
      tag: "h5",
      size: "$6"
    }), H6 = (0, import_web.styled)(Heading, {
      name: "H6",
      tag: "h6",
      size: "$5"
    });
  }
});

// ../text/dist/cjs/wrapChildrenInText.native.js
var require_wrapChildrenInText_native = __commonJS({
  "../text/dist/cjs/wrapChildrenInText.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), wrapChildrenInText_exports = {};
    __export2(wrapChildrenInText_exports, {
      wrapChildrenInText: () => wrapChildrenInText
    });
    module2.exports = __toCommonJS2(wrapChildrenInText_exports);
    var import_react2 = __toESM2(require("react")), import_jsx_runtime6 = (
      // so "data-disable-theme" is a hack to fix themeInverse, don't ask me why
      require("react/jsx-runtime")
    );
    function wrapChildrenInText(TextComponent, propsIn, extraProps) {
      let {
        children,
        textProps,
        size: size2,
        noTextWrap,
        color,
        fontFamily,
        fontSize,
        fontWeight,
        letterSpacing,
        textAlign,
        fontStyle,
        maxFontSizeMultiplier
      } = propsIn;
      if (noTextWrap || !children)
        return [children];
      let props = {
        ...extraProps
      };
      return color && (props.color = color), fontFamily && (props.fontFamily = fontFamily), fontSize && (props.fontSize = fontSize), fontWeight && (props.fontWeight = fontWeight), letterSpacing && (props.letterSpacing = letterSpacing), textAlign && (props.textAlign = textAlign), size2 && (props.size = size2), fontStyle && (props.fontStyle = fontStyle), maxFontSizeMultiplier && (props.maxFontSizeMultiplier = maxFontSizeMultiplier), import_react2.default.Children.toArray(children).map((child, index) => typeof child == "string" ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(TextComponent, { ...props, ...textProps, children: child }, index) : child);
    }
  }
});

// ../text/dist/cjs/types.native.js
var require_types_native5 = __commonJS({
  "../text/dist/cjs/types.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), types_exports = {};
    module2.exports = __toCommonJS2(types_exports);
  }
});

// ../text/dist/cjs/index.native.js
var require_index_native21 = __commonJS({
  "../text/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_SizableText_native(), module2.exports);
    __reExport2(src_exports2, require_Paragraph_native(), module2.exports);
    __reExport2(src_exports2, require_Headings_native(), module2.exports);
    __reExport2(src_exports2, require_wrapChildrenInText_native(), module2.exports);
    __reExport2(src_exports2, require_types_native5(), module2.exports);
  }
});

// ../use-direction/dist/cjs/useDirection.native.js
var require_useDirection_native = __commonJS({
  "../use-direction/dist/cjs/useDirection.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useDirection_exports = {};
    __export2(useDirection_exports, {
      DirectionProvider: () => DirectionProvider,
      Provider: () => Provider,
      useDirection: () => useDirection
    });
    module2.exports = __toCommonJS2(useDirection_exports);
    var React2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), DirectionContext = React2.createContext(void 0), DirectionProvider = (props) => {
      let { dir, children } = props;
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(DirectionContext.Provider, { value: dir, children });
    };
    function useDirection(localDir) {
      let globalDir = React2.useContext(DirectionContext);
      return localDir || globalDir || "ltr";
    }
    var Provider = DirectionProvider;
  }
});

// ../use-direction/dist/cjs/index.native.js
var require_index_native22 = __commonJS({
  "../use-direction/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_useDirection_native(), module2.exports);
  }
});

// ../accordion/dist/cjs/Accordion.native.js
var require_Accordion_native = __commonJS({
  "../accordion/dist/cjs/Accordion.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Accordion_exports = {};
    __export2(Accordion_exports, {
      Accordion: () => Accordion
    });
    module2.exports = __toCommonJS2(Accordion_exports);
    var import_collapsible = require_index_native13(), import_collection = require_index_native16(), import_stacks3 = require_index_native19(), import_text2 = require_index_native21(), import_use_controllable_state = require_index_native12(), import_use_direction = require_index_native22(), import_web = require_index_native9(), React2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), ACCORDION_NAME = "Accordion", ACCORDION_KEYS = ["Home", "End", "ArrowDown", "ArrowUp", "ArrowLeft", "ArrowRight"], [Collection, useCollection] = (0, import_collection.createCollection)(ACCORDION_NAME), ACCORDION_CONTEXT = "Accordion", AccordionComponent = React2.forwardRef((props, forwardedRef) => {
      let { type, ...accordionProps } = props, singleProps = accordionProps, multipleProps = accordionProps;
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Collection.Provider, { __scopeCollection: props.__scopeAccordion || ACCORDION_CONTEXT, children: type === "multiple" ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AccordionImplMultiple, { ...multipleProps, ref: forwardedRef }) : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AccordionImplSingle, { ...singleProps, ref: forwardedRef }) });
    });
    AccordionComponent.displayName = ACCORDION_NAME;
    AccordionComponent.propTypes = {
      type(props) {
        let value = props.value || props.defaultValue;
        return props.type && !["single", "multiple"].includes(props.type) ? new Error(
          "Invalid prop `type` supplied to `Accordion`. Expected one of `single | multiple`."
        ) : props.type === "multiple" && typeof value == "string" ? new Error(
          "Invalid prop `type` supplied to `Accordion`. Expected `single` when `defaultValue` or `value` is type `string`."
        ) : props.type === "single" && Array.isArray(value) ? new Error(
          "Invalid prop `type` supplied to `Accordion`. Expected `multiple` when `defaultValue` or `value` is type `string[]`."
        ) : null;
      }
    };
    var { Provider: AccordionValueProvider, useStyledContext: useAccordionValueContext } = (0, import_web.createStyledContext)(), {
      Provider: AccordionCollapsibleProvider,
      useStyledContext: useAccordionCollapsibleContext
    } = (0, import_web.createStyledContext)(), AccordionImplSingle = React2.forwardRef((props, forwardedRef) => {
      let {
        value: valueProp,
        defaultValue,
        control,
        onValueChange = () => {
        },
        collapsible = !1,
        ...accordionSingleProps
      } = props, [value, setValue] = (0, import_use_controllable_state.useControllableState)({
        prop: valueProp,
        defaultProp: defaultValue || "",
        onChange: onValueChange
      });
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        AccordionValueProvider,
        {
          scope: props.__scopeAccordion,
          value: value ? [value] : [],
          onItemOpen: setValue,
          onItemClose: React2.useCallback(
            () => collapsible && setValue(""),
            [setValue, collapsible]
          ),
          children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            AccordionCollapsibleProvider,
            {
              scope: props.__scopeAccordion,
              collapsible,
              children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AccordionImpl, { ...accordionSingleProps, ref: forwardedRef })
            }
          )
        }
      );
    }), AccordionImplMultiple = React2.forwardRef((props, forwardedRef) => {
      let {
        value: valueProp,
        defaultValue,
        onValueChange = () => {
        },
        ...accordionMultipleProps
      } = props, [value, setValue] = (0, import_use_controllable_state.useControllableState)({
        prop: valueProp,
        defaultProp: defaultValue || [],
        onChange: onValueChange
      }), handleItemOpen = React2.useCallback(
        (itemValue) => setValue((prevValue = []) => [...prevValue, itemValue]),
        [setValue]
      ), handleItemClose = React2.useCallback(
        (itemValue) => setValue((prevValue = []) => prevValue.filter((value2) => value2 !== itemValue)),
        [setValue]
      );
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        AccordionValueProvider,
        {
          scope: props.__scopeAccordion,
          value: value || [],
          onItemOpen: handleItemOpen,
          onItemClose: handleItemClose,
          children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AccordionCollapsibleProvider, { scope: props.__scopeAccordion, collapsible: !0, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AccordionImpl, { ...accordionMultipleProps, ref: forwardedRef }) })
        }
      );
    }), { Provider: AccordionImplProvider, useStyledContext: useAccordionContext } = (0, import_web.createStyledContext)(), AccordionImpl = React2.forwardRef(
      (props, forwardedRef) => {
        let {
          __scopeAccordion,
          disabled,
          dir,
          orientation = "vertical",
          ...accordionProps
        } = props, accordionRef = React2.useRef(null), composedRef = (0, import_web.useComposedRefs)(accordionRef, forwardedRef), getItems = useCollection(__scopeAccordion || ACCORDION_CONTEXT), isDirectionLTR = (0, import_use_direction.useDirection)(dir) === "ltr", handleKeyDown = (0, import_web.composeEventHandlers)(
          props.onKeyDown,
          (event) => {
            var _a;
            if (!ACCORDION_KEYS.includes(event.key))
              return;
            let target = event.target, triggerCollection = getItems().filter((item) => {
              let el = item.ref.current;
              return !(el != null && el.disabled);
            }), triggerIndex = triggerCollection.findIndex(
              (item) => item.ref.current === target
            ), triggerCount = triggerCollection.length;
            if (triggerIndex === -1)
              return;
            event.preventDefault();
            let nextIndex = triggerIndex, homeIndex = 0, endIndex = triggerCount - 1, moveNext = () => {
              nextIndex = triggerIndex + 1, nextIndex > endIndex && (nextIndex = homeIndex);
            }, movePrev = () => {
              nextIndex = triggerIndex - 1, nextIndex < homeIndex && (nextIndex = endIndex);
            };
            switch (event.key) {
              case "Home":
                nextIndex = homeIndex;
                break;
              case "End":
                nextIndex = endIndex;
                break;
              case "ArrowRight":
                orientation === "horizontal" && (isDirectionLTR ? moveNext() : movePrev());
                break;
              case "ArrowDown":
                orientation === "vertical" && moveNext();
                break;
              case "ArrowLeft":
                orientation === "horizontal" && (isDirectionLTR ? movePrev() : moveNext());
                break;
              case "ArrowUp":
                orientation === "vertical" && movePrev();
                break;
            }
            let clampedIndex = nextIndex % triggerCount;
            (_a = triggerCollection[clampedIndex].ref.current) == null || _a.focus();
          }
        );
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          AccordionImplProvider,
          {
            scope: __scopeAccordion,
            disabled,
            direction: dir,
            orientation,
            children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Collection.Slot, { __scopeCollection: __scopeAccordion || ACCORDION_CONTEXT, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              import_stacks3.YStack,
              {
                "data-orientation": orientation,
                ref: composedRef,
                ...accordionProps,
                ...import_web.isWeb && {
                  onKeyDown: handleKeyDown
                }
              }
            ) })
          }
        );
      }
    ), ITEM_NAME = "AccordionItem", { Provider: AccordionItemProvider, useStyledContext: useAccordionItemContext } = (0, import_web.createStyledContext)(), AccordionItem = React2.forwardRef(
      (props, forwardedRef) => {
        let { __scopeAccordion, value, ...accordionItemProps } = props, accordionContext = useAccordionContext(__scopeAccordion), valueContext = useAccordionValueContext(__scopeAccordion), triggerId = React2.useId(), open = value && valueContext.value.includes(value) || !1, disabled = accordionContext.disabled || props.disabled;
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          AccordionItemProvider,
          {
            scope: __scopeAccordion,
            open,
            disabled,
            triggerId,
            children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              import_collapsible.Collapsible,
              {
                "data-orientation": accordionContext.orientation,
                "data-state": open ? "open" : "closed",
                __scopeCollapsible: __scopeAccordion || ACCORDION_CONTEXT,
                ...accordionItemProps,
                ref: forwardedRef,
                disabled,
                open,
                onOpenChange: (open2) => {
                  open2 ? valueContext.onItemOpen(value) : valueContext.onItemClose(value);
                }
              }
            )
          }
        );
      }
    );
    AccordionItem.displayName = ITEM_NAME;
    var HEADER_NAME = "AccordionHeader", AccordionHeader = React2.forwardRef(
      (props, forwardedRef) => {
        let { __scopeAccordion, ...headerProps } = props, accordionContext = useAccordionContext(__scopeAccordion), itemContext = useAccordionItemContext(__scopeAccordion);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_text2.H1,
          {
            "data-orientation": accordionContext.orientation,
            "data-state": getState(itemContext.open),
            "data-disabled": itemContext.disabled ? "" : void 0,
            ...headerProps,
            ref: forwardedRef
          }
        );
      }
    );
    AccordionHeader.displayName = HEADER_NAME;
    var AccordionTriggerFrame = (0, import_web.styled)(import_collapsible.Collapsible.Trigger, {
      variants: {
        unstyled: {
          false: {
            cursor: "pointer",
            backgroundColor: "$background",
            borderColor: "$borderColor",
            borderWidth: 1,
            padding: "$true",
            hoverStyle: {
              backgroundColor: "$backgroundHover"
            },
            focusStyle: {
              backgroundColor: "$backgroundFocus"
            },
            pressStyle: {
              backgroundColor: "$backgroundPress"
            }
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), AccordionTrigger = AccordionTriggerFrame.styleable(function(props, forwardedRef) {
      let { __scopeAccordion, ...triggerProps } = props, accordionContext = useAccordionContext(__scopeAccordion), itemContext = useAccordionItemContext(__scopeAccordion), collapsibleContext = useAccordionCollapsibleContext(__scopeAccordion);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Collection.ItemSlot, { __scopeCollection: __scopeAccordion || ACCORDION_CONTEXT, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        AccordionTriggerFrame,
        {
          __scopeCollapsible: __scopeAccordion || ACCORDION_CONTEXT,
          "aria-disabled": itemContext.open && !collapsibleContext.collapsible || void 0,
          "data-orientation": accordionContext.orientation,
          id: itemContext.triggerId,
          ...triggerProps,
          ref: forwardedRef
        }
      ) });
    }), AccordionContentFrame = (0, import_web.styled)(import_collapsible.Collapsible.Content, {
      variants: {
        unstyled: {
          false: {
            padding: "$true",
            backgroundColor: "$background"
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), AccordionContent = AccordionContentFrame.styleable(function(props, forwardedRef) {
      let { __scopeAccordion, ...contentProps } = props, accordionContext = useAccordionContext(__scopeAccordion), itemContext = useAccordionItemContext(__scopeAccordion);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        AccordionContentFrame,
        {
          role: "region",
          "aria-labelledby": itemContext.triggerId,
          "data-orientation": accordionContext.orientation,
          __scopeCollapsible: __scopeAccordion || ACCORDION_CONTEXT,
          ...contentProps,
          ref: forwardedRef
        }
      );
    });
    function getState(open) {
      return open ? "open" : "closed";
    }
    var Accordion = (0, import_web.withStaticProperties)(AccordionComponent, {
      Trigger: AccordionTrigger,
      Header: AccordionHeader,
      Content: AccordionContent,
      Item: AccordionItem
    });
  }
});

// ../accordion/dist/cjs/index.native.js
var require_index_native23 = __commonJS({
  "../accordion/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Accordion_native(), module2.exports);
  }
});

// ../adapt/dist/cjs/Adapt.native.js
var require_Adapt_native = __commonJS({
  "../adapt/dist/cjs/Adapt.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Adapt_exports = {};
    __export2(Adapt_exports, {
      Adapt: () => Adapt,
      AdaptContents: () => AdaptContents,
      AdaptParentContext: () => AdaptParentContext,
      useAdaptParent: () => useAdaptParent
    });
    module2.exports = __toCommonJS2(Adapt_exports);
    var import_core13 = require_index_native15(), import_react2 = require("react"), import_jsx_runtime6 = require("react/jsx-runtime"), AdaptParentContext = (0, import_react2.createContext)(null), AdaptContents = (props) => {
      let context = (0, import_react2.useContext)(AdaptParentContext);
      if (!(context != null && context.Contents))
        throw new Error("Adapt not supported by this component");
      return (0, import_react2.createElement)(context.Contents, props);
    };
    AdaptContents.shouldForwardSpace = !0;
    var useAdaptParent = ({
      Contents
    }) => {
      let [when, setWhen] = (0, import_react2.useState)(null);
      return {
        AdaptProvider: (0, import_react2.useMemo)(() => {
          let context = {
            Contents,
            setWhen
          };
          function AdaptProviderView(props) {
            return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AdaptParentContext.Provider, { value: context, children: props.children });
          }
          return AdaptProviderView;
        }, [Contents]),
        when
      };
    }, Adapt = (0, import_core13.withStaticProperties)(
      function({ platform, when, children }) {
        let context = (0, import_react2.useContext)(AdaptParentContext), media = (0, import_core13.useMedia)(), enabled = !platform;
        return platform === "touch" && (enabled = import_core13.isTouchable), platform === "native" && (enabled = !import_core13.isWeb), platform === "web" && (enabled = import_core13.isWeb), when && !media[when] && (enabled = !1), (0, import_core13.useIsomorphicLayoutEffect)(() => {
          enabled && (context == null || context.setWhen(when || enabled));
        }, [when, context, enabled]), enabled ? children : null;
      },
      {
        Contents: AdaptContents
      }
    );
  }
});

// ../adapt/dist/cjs/index.native.js
var require_index_native24 = __commonJS({
  "../adapt/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Adapt_native(), module2.exports);
  }
});

// ../create-context/dist/cjs/create-context.native.js
var require_create_context_native = __commonJS({
  "../create-context/dist/cjs/create-context.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), create_context_exports = {};
    __export2(create_context_exports, {
      createContext: () => createContext,
      createContextScope: () => createContextScope
    });
    module2.exports = __toCommonJS2(create_context_exports);
    var React2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime");
    function createContext(rootComponentName, defaultContext) {
      let Context = React2.createContext(defaultContext);
      function Provider(props) {
        let { children, ...context } = props, value = React2.useMemo(() => context, Object.values(context));
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Context.Provider, { value, children });
      }
      function useContext(consumerName) {
        let context = React2.useContext(Context);
        if (context)
          return context;
        if (defaultContext !== void 0)
          return defaultContext;
        throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
      }
      return Provider.displayName = `${rootComponentName}Provider`, [Provider, useContext];
    }
    function createContextScope(scopeName, createContextScopeDeps = []) {
      let defaultContexts = [];
      function createContext2(rootComponentName, defaultContext) {
        let BaseContext = React2.createContext(defaultContext), index = defaultContexts.length;
        defaultContexts = [...defaultContexts, defaultContext];
        function Provider(props) {
          var _a;
          let { scope, children, ...context } = props, Context = ((_a = scope == null ? void 0 : scope[scopeName]) == null ? void 0 : _a[index]) || BaseContext, value = React2.useMemo(
            () => context,
            Object.values(context)
          );
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Context.Provider, { value, children });
        }
        function useContext(consumerName, scope, options) {
          var _a;
          let Context = ((_a = scope == null ? void 0 : scope[scopeName]) == null ? void 0 : _a[index]) || BaseContext, context = React2.useContext(Context);
          if (context)
            return context;
          if (defaultContext !== void 0)
            return defaultContext;
          let missingContextMessage = `\`${consumerName}\` must be used within \`${rootComponentName}\``;
          if (options != null && options.fallback)
            return (options == null ? void 0 : options.warn) !== !1 && console.warn(missingContextMessage), options.fallback;
          throw new Error(missingContextMessage);
        }
        return Provider.displayName = `${rootComponentName}Provider`, [Provider, useContext];
      }
      let createScope = () => {
        let scopeContexts = defaultContexts.map((defaultContext) => React2.createContext(defaultContext));
        return function(scope) {
          let contexts = (scope == null ? void 0 : scope[scopeName]) || scopeContexts;
          return React2.useMemo(
            () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),
            [scope, contexts]
          );
        };
      };
      return createScope.scopeName = scopeName, [
        createContext2,
        composeContextScopes(createScope, ...createContextScopeDeps)
      ];
    }
    function composeContextScopes(...scopes) {
      let baseScope = scopes[0];
      if (scopes.length === 1)
        return baseScope;
      let createScope = () => {
        let scopeHooks = scopes.map((createScope2) => ({
          useScope: createScope2(),
          scopeName: createScope2.scopeName
        }));
        return function(overrideScopes) {
          let nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {
            let currentScope = useScope(overrideScopes)[`__scope${scopeName}`];
            return { ...nextScopes2, ...currentScope };
          }, {});
          return React2.useMemo(
            () => ({ [`__scope${baseScope.scopeName}`]: nextScopes }),
            [nextScopes]
          );
        };
      };
      return createScope.scopeName = baseScope.scopeName, createScope;
    }
  }
});

// ../create-context/dist/cjs/index.native.js
var require_index_native25 = __commonJS({
  "../create-context/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_create_context_native(), module2.exports);
  }
});

// ../aria-hidden/dist/cjs/AriaHidden.native.js
var require_AriaHidden_native = __commonJS({
  "../aria-hidden/dist/cjs/AriaHidden.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), AriaHidden_native_exports = {};
    __export2(AriaHidden_native_exports, {
      hideOthers: () => hideOthers
    });
    module2.exports = __toCommonJS2(AriaHidden_native_exports);
    var hideOthers = () => {
    };
  }
});

// ../aria-hidden/dist/cjs/index.native.js
var require_index_native26 = __commonJS({
  "../aria-hidden/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_AriaHidden_native(), module2.exports);
  }
});

// ../dismissable/dist/cjs/Dismissable.native.js
var require_Dismissable_native = __commonJS({
  "../dismissable/dist/cjs/Dismissable.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Dismissable_native_exports = {};
    __export2(Dismissable_native_exports, {
      Dismissable: () => Dismissable,
      DismissableBranch: () => DismissableBranch
    });
    module2.exports = __toCommonJS2(Dismissable_native_exports);
    var import_react2 = require("react"), Dismissable = (0, import_react2.forwardRef)((props, _ref) => props.children), DismissableBranch = (0, import_react2.forwardRef)((props, _ref) => props.children);
  }
});

// ../dismissable/dist/cjs/index.native.js
var require_index_native27 = __commonJS({
  "../dismissable/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Dismissable_native(), module2.exports);
  }
});

// ../focus-scope/dist/cjs/FocusScope.native.js
var require_FocusScope_native = __commonJS({
  "../focus-scope/dist/cjs/FocusScope.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), FocusScope_native_exports = {};
    __export2(FocusScope_native_exports, {
      FocusScope: () => FocusScope
    });
    module2.exports = __toCommonJS2(FocusScope_native_exports);
    var import_react2 = require("react"), FocusScope = (0, import_react2.forwardRef)((props, _ref) => props.children);
  }
});

// ../focus-scope/dist/cjs/index.native.js
var require_index_native28 = __commonJS({
  "../focus-scope/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_FocusScope_native(), module2.exports);
  }
});

// ../portal/dist/cjs/GorhomPortal.native.js
var require_GorhomPortal_native = __commonJS({
  "../portal/dist/cjs/GorhomPortal.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), GorhomPortal_exports = {};
    __export2(GorhomPortal_exports, {
      ACTIONS: () => ACTIONS,
      INITIAL_STATE: () => INITIAL_STATE,
      PortalHost: () => PortalHost,
      PortalItem: () => PortalItem,
      PortalProvider: () => PortalProvider2,
      usePortal: () => usePortal
    });
    module2.exports = __toCommonJS2(GorhomPortal_exports);
    var import_core13 = require_index_native15(), import_react2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), ACTIONS = /* @__PURE__ */ ((ACTIONS2) => (ACTIONS2[ACTIONS2.REGISTER_HOST = 0] = "REGISTER_HOST", ACTIONS2[ACTIONS2.DEREGISTER_HOST = 1] = "DEREGISTER_HOST", ACTIONS2[ACTIONS2.ADD_UPDATE_PORTAL = 2] = "ADD_UPDATE_PORTAL", ACTIONS2[ACTIONS2.REMOVE_PORTAL = 3] = "REMOVE_PORTAL", ACTIONS2))(ACTIONS || {}), INITIAL_STATE = {}, registerHost = (state, hostName) => (hostName in state || (state[hostName] = []), state), deregisterHost = (state, hostName) => (delete state[hostName], state), addUpdatePortal = (state, hostName, portalName, node) => {
      hostName in state || (state = registerHost(state, hostName));
      let index = state[hostName].findIndex((item) => item.name === portalName);
      return index !== -1 ? state[hostName][index].node = node : state[hostName].push({
        name: portalName,
        node
      }), state;
    }, removePortal = (state, hostName, portalName) => {
      if (!(hostName in state))
        return console.info(
          `Failed to remove portal '${portalName}', '${hostName}' was not registered!`
        ), state;
      let index = state[hostName].findIndex((item) => item.name === portalName);
      return index !== -1 && state[hostName].splice(index, 1), state;
    }, reducer = (state, action) => {
      let { type } = action;
      switch (type) {
        case 0:
          return registerHost({ ...state }, action.hostName);
        case 1:
          return deregisterHost({ ...state }, action.hostName);
        case 2:
          return addUpdatePortal(
            { ...state },
            action.hostName,
            action.portalName,
            action.node
          );
        case 3:
          return removePortal(
            { ...state },
            action.hostName,
            action.portalName
          );
        default:
          return state;
      }
    }, PortalStateContext = (0, import_react2.createContext)(null), PortalDispatchContext = (0, import_react2.createContext)(null), usePortalState = (hostName) => {
      let state = (0, import_react2.useContext)(PortalStateContext);
      if (state === null)
        throw new Error(
          "'PortalStateContext' cannot be null, please add 'PortalProvider' to the root component."
        );
      return state[hostName] || [];
    }, usePortal = (hostName = "root") => {
      let dispatch = (0, import_react2.useContext)(PortalDispatchContext);
      if (dispatch === null)
        throw new Error(
          "'PortalDispatchContext' cannot be null, please add 'PortalProvider' to the root component."
        );
      let registerHost2 = (0, import_react2.useCallback)(() => {
        dispatch({
          type: 0,
          hostName
        });
      }, []), deregisterHost2 = (0, import_react2.useCallback)(() => {
        dispatch({
          type: 1,
          hostName
        });
      }, []), addUpdatePortal2 = (0, import_react2.useCallback)((name, node) => {
        dispatch({
          type: 2,
          hostName,
          portalName: name,
          node
        });
      }, []), removePortal2 = (0, import_react2.useCallback)((name) => {
        dispatch({
          type: 3,
          hostName,
          portalName: name
        });
      }, []);
      return {
        registerHost: registerHost2,
        deregisterHost: deregisterHost2,
        addPortal: addUpdatePortal2,
        updatePortal: addUpdatePortal2,
        removePortal: removePortal2
      };
    }, PortalProviderComponent = ({
      rootHostName = "root",
      shouldAddRootHost = !0,
      children
    }) => {
      let [state, dispatch] = (0, import_react2.useReducer)(reducer, INITIAL_STATE), transitionDispatch = (0, import_react2.useMemo)(() => (value) => {
        (0, import_react2.startTransition)(() => {
          dispatch(value);
        });
      }, [dispatch]);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(PortalDispatchContext.Provider, { value: transitionDispatch, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(PortalStateContext.Provider, { value: state, children: [
        children,
        shouldAddRootHost && /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(PortalHost, { name: rootHostName })
      ] }) });
    }, PortalProvider2 = (0, import_react2.memo)(PortalProviderComponent);
    PortalProvider2.displayName = "PortalProvider";
    var defaultRenderer = (children) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, { children }), PortalHostComponent = (props) => {
      let { name, forwardProps, render = defaultRenderer } = props, isServer2 = !(0, import_core13.useDidFinishSSR)(), state = usePortalState(name), { registerHost: registerHost2, deregisterHost: deregisterHost2 } = usePortal(props.name);
      return (0, import_react2.useEffect)(() => {
        if (!isServer2)
          return registerHost2(), () => {
            deregisterHost2();
          };
      }, [isServer2]), render(
        forwardProps ? state.map((item) => {
          let next = item.node;
          return forwardProps ? import_react2.default.Children.map(next, (child) => import_react2.default.isValidElement(child) ? import_react2.default.cloneElement(child, { key: child.key, ...forwardProps }) : child) : next;
        }) : state.map((item) => item.node)
      );
    }, PortalHost = (0, import_react2.memo)(PortalHostComponent);
    PortalHost.displayName = "PortalHost";
    var PortalComponent = (props) => {
      let {
        name: _providedName,
        hostName,
        handleOnMount: _providedHandleOnMount,
        handleOnUnmount: _providedHandleOnUnmount,
        handleOnUpdate: _providedHandleOnUpdate,
        children
      } = props, { addPortal: addUpdatePortal2, removePortal: removePortal2 } = usePortal(hostName), id = (0, import_react2.useId)(), name = _providedName || id, handleOnMount = (0, import_core13.useEvent)(() => {
        _providedHandleOnMount ? _providedHandleOnMount(() => addUpdatePortal2(name, children)) : addUpdatePortal2(name, children);
      }), handleOnUnmount = (0, import_core13.useEvent)(() => {
        _providedHandleOnUnmount ? _providedHandleOnUnmount(() => removePortal2(name)) : removePortal2(name);
      }), handleOnUpdate = (0, import_core13.useEvent)(() => {
        _providedHandleOnUpdate ? _providedHandleOnUpdate(() => addUpdatePortal2(name, children)) : addUpdatePortal2(name, children);
      });
      return (0, import_core13.useIsomorphicLayoutEffect)(() => (handleOnMount(), () => {
        handleOnUnmount();
      }), []), (0, import_react2.useEffect)(() => {
        handleOnUpdate();
      }, [children]), null;
    }, PortalItem = (0, import_react2.memo)(PortalComponent);
    PortalItem.displayName = "Portal";
  }
});

// ../portal/dist/cjs/Portal.native.js
var require_Portal_native = __commonJS({
  "../portal/dist/cjs/Portal.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Portal_native_exports = {};
    __export2(Portal_native_exports, {
      Portal: () => Portal
    });
    module2.exports = __toCommonJS2(Portal_native_exports);
    var import_stacks3 = require_index_native19(), React2 = __toESM2(require("react")), import_react_native4 = require("react-native"), import_GorhomPortal = require_GorhomPortal_native(), import_jsx_runtime6 = require("react/jsx-runtime"), isFabric = global == null ? void 0 : global.nativeFabricUIManager, createPortal;
    isFabric ? createPortal = require("react-native/Libraries/Renderer/shims/ReactFabric").createPortal : createPortal = require("react-native/Libraries/Renderer/shims/ReactNative").createPortal;
    var Portal = (props) => {
      let rootTag = React2.useContext(import_react_native4.RootTagContext), contents = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_stacks3.YStack,
        {
          pointerEvents: "box-none",
          fullscreen: !0,
          position: "absolute",
          maxWidth: "100%",
          zIndex: 1e5,
          ...props
        }
      );
      return import_react_native4.Platform.OS === "android" || !rootTag ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_GorhomPortal.PortalItem, { hostName: "root", children: contents }) : createPortal(contents, rootTag);
    };
  }
});

// ../portal/dist/cjs/PortalProps.native.js
var require_PortalProps_native = __commonJS({
  "../portal/dist/cjs/PortalProps.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), PortalProps_exports = {};
    module2.exports = __toCommonJS2(PortalProps_exports);
  }
});

// ../portal/dist/cjs/index.native.js
var require_index_native29 = __commonJS({
  "../portal/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Portal_native(), module2.exports);
    __reExport2(src_exports2, require_PortalProps_native(), module2.exports);
    __reExport2(src_exports2, require_GorhomPortal_native(), module2.exports);
  }
});

// ../remove-scroll/dist/cjs/RemoveScroll.native.js
var require_RemoveScroll_native = __commonJS({
  "../remove-scroll/dist/cjs/RemoveScroll.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), RemoveScroll_native_exports = {};
    __export2(RemoveScroll_native_exports, {
      RemoveScroll: () => RemoveScroll
    });
    module2.exports = __toCommonJS2(RemoveScroll_native_exports);
    var RemoveScroll = (props) => props.children;
  }
});

// ../remove-scroll/dist/cjs/index.native.js
var require_index_native30 = __commonJS({
  "../remove-scroll/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_RemoveScroll_native(), module2.exports);
  }
});

// ../sheet/dist/cjs/constants.native.js
var require_constants_native3 = __commonJS({
  "../sheet/dist/cjs/constants.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), constants_exports = {};
    __export2(constants_exports, {
      SHEET_HANDLE_NAME: () => SHEET_HANDLE_NAME,
      SHEET_HIDDEN_STYLESHEET: () => SHEET_HIDDEN_STYLESHEET,
      SHEET_NAME: () => SHEET_NAME,
      SHEET_OVERLAY_NAME: () => SHEET_OVERLAY_NAME,
      constants: () => constants
    });
    module2.exports = __toCommonJS2(constants_exports);
    var import_core13 = require_index_native15(), constants = {}, SHEET_NAME = "Sheet", SHEET_HANDLE_NAME = "SheetHandle", SHEET_OVERLAY_NAME = "SheetOverlay", SHEET_HIDDEN_STYLESHEET = import_core13.isClient ? document.createElement("style") : null;
    SHEET_HIDDEN_STYLESHEET && document.head.appendChild(SHEET_HIDDEN_STYLESHEET);
  }
});

// ../sheet/dist/cjs/SheetContext.native.js
var require_SheetContext_native = __commonJS({
  "../sheet/dist/cjs/SheetContext.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SheetContext_exports = {};
    __export2(SheetContext_exports, {
      SheetProvider: () => SheetProvider,
      createSheetContext: () => createSheetContext,
      createSheetScope: () => createSheetScope2,
      useSheetContext: () => useSheetContext
    });
    module2.exports = __toCommonJS2(SheetContext_exports);
    var import_create_context = require_index_native25(), import_constants = require_constants_native3(), [createSheetContext, createSheetScope2] = (0, import_create_context.createContextScope)(import_constants.SHEET_NAME), [SheetProvider, useSheetContext] = createSheetContext(
      import_constants.SHEET_NAME,
      {}
    );
  }
});

// ../sheet/dist/cjs/useSheetController.native.js
var require_useSheetController_native = __commonJS({
  "../sheet/dist/cjs/useSheetController.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useSheetController_exports = {};
    __export2(useSheetController_exports, {
      SheetControllerContext: () => SheetControllerContext,
      useSheetController: () => useSheetController
    });
    module2.exports = __toCommonJS2(useSheetController_exports);
    var import_react2 = require("react"), useSheetController = () => {
      let controller = (0, import_react2.useContext)(SheetControllerContext), isHidden = controller == null ? void 0 : controller.hidden, isShowingNonSheet = isHidden && (controller == null ? void 0 : controller.open);
      return {
        controller,
        isHidden,
        isShowingNonSheet,
        disableDrag: controller == null ? void 0 : controller.disableDrag
      };
    }, SheetControllerContext = (0, import_react2.createContext)(
      null
    );
  }
});

// ../sheet/dist/cjs/useSheetOpenState.native.js
var require_useSheetOpenState_native = __commonJS({
  "../sheet/dist/cjs/useSheetOpenState.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useSheetOpenState_exports = {};
    __export2(useSheetOpenState_exports, {
      useSheetOpenState: () => useSheetOpenState
    });
    module2.exports = __toCommonJS2(useSheetOpenState_exports);
    var import_use_controllable_state = require_index_native12(), import_useSheetController = require_useSheetController_native(), useSheetOpenState = (props) => {
      let { isHidden, controller } = (0, import_useSheetController.useSheetController)(), onOpenChangeInternal = (val) => {
        var _a, _b;
        (_a = controller == null ? void 0 : controller.onOpenChange) == null || _a.call(controller, val), (_b = props.onOpenChange) == null || _b.call(props, val);
      }, [open, setOpen] = (0, import_use_controllable_state.useControllableState)({
        prop: (controller == null ? void 0 : controller.open) ?? props.open,
        defaultProp: props.defaultOpen ?? !1,
        onChange: onOpenChangeInternal,
        strategy: "most-recent-wins",
        transition: !0
      });
      return {
        open,
        setOpen,
        isHidden,
        controller
      };
    };
  }
});

// ../use-constant/dist/cjs/index.native.js
var require_index_native31 = __commonJS({
  "../use-constant/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      useConstant: () => useConstant
    });
    module2.exports = __toCommonJS2(src_exports2);
    var import_react2 = require("react");
    function useConstant(fn) {
      if (typeof document > "u")
        return (0, import_react2.useMemo)(() => fn(), []);
      let ref = (0, import_react2.useRef)();
      return ref.current || (ref.current = { v: fn() }), ref.current.v;
    }
  }
});

// ../sheet/dist/cjs/useSheetProviderProps.native.js
var require_useSheetProviderProps_native = __commonJS({
  "../sheet/dist/cjs/useSheetProviderProps.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useSheetProviderProps_exports = {};
    __export2(useSheetProviderProps_exports, {
      useSheetProviderProps: () => useSheetProviderProps
    });
    module2.exports = __toCommonJS2(useSheetProviderProps_exports);
    var import_core13 = require_index_native15(), import_use_constant = require_index_native31(), import_use_controllable_state = require_index_native12(), import_react2 = __toESM2(require("react"));
    function useSheetProviderProps(props, state, options = {}) {
      let contentRef = import_react2.default.useRef(null), [frameSize, setFrameSize] = (0, import_react2.useState)(0), [maxContentSize, setMaxContentSize] = (0, import_react2.useState)(0), snapPointsMode = props.snapPointsMode ?? "percent", snapPointsProp = props.snapPoints ?? (snapPointsMode === "percent" ? [80] : snapPointsMode === "constant" ? [256] : ["fit"]), hasFit = snapPointsProp[0] === "fit", snapPoints = (0, import_react2.useMemo)(
        () => props.dismissOnSnapToBottom ? [...snapPointsProp, 0] : snapPointsProp,
        // eslint-disable-next-line react-hooks/exhaustive-deps
        [JSON.stringify(snapPointsProp), props.dismissOnSnapToBottom]
      ), [position_, setPositionImmediate] = (0, import_use_controllable_state.useControllableState)({
        prop: props.position,
        defaultProp: props.defaultPosition || (state.open ? 0 : -1),
        onChange: props.onPositionChange,
        strategy: "most-recent-wins",
        transition: !0
      }), position = state.open === !1 ? -1 : position_, { open } = state, setPosition = (0, import_react2.useCallback)(
        (next) => {
          props.dismissOnSnapToBottom && next === snapPoints.length - 1 ? state.setOpen(!1) : setPositionImmediate(next);
        },
        [props.dismissOnSnapToBottom, snapPoints.length, setPositionImmediate, state.setOpen]
      );
      process.env.NODE_ENV === "development" && (snapPointsMode === "mixed" && snapPoints.some((p) => {
        if (typeof p == "string") {
          if (p === "fit")
            return !1;
          if (p.endsWith("%")) {
            let n = Number(p.slice(0, -1));
            return n < 0 || n > 100;
          }
          return !0;
        }
        return typeof p != "number" || p < 0;
      }) && console.warn(
        '\u26A0\uFE0F Invalid snapPoint given, snapPoints must be positive numeric values, string percentages between 0-100%, or "fit" when snapPointsMode is mixed'
      ), snapPointsMode === "mixed" && snapPoints.indexOf("fit") > 0 && console.warn(
        '\u26A0\uFE0F Invalid snapPoint given, "fit" must be the first/largest snap point when snapPointsMode is mixed'
      ), snapPointsMode === "fit" && (snapPoints.length !== (props.dismissOnSnapToBottom ? 2 : 1) || snapPoints[0] !== "fit") && console.warn(
        "\u26A0\uFE0F Invalid snapPoint given, there are no snap points when snapPointsMode is fit"
      ), snapPointsMode === "constant" && snapPoints.some((p) => typeof p != "number" || p < 0) && console.warn(
        "\u26A0\uFE0F Invalid snapPoint given, snapPoints must be positive numeric values when snapPointsMode is constant"
      ), snapPointsMode === "percent" && snapPoints.some((p) => typeof p != "number" || p < 0 || p > 100) && console.warn(
        "\u26A0\uFE0F Invalid snapPoint given, snapPoints must be numeric values between 0 and 100 when snapPointsMode is percent"
      )), open && props.dismissOnSnapToBottom && position === snapPoints.length - 1 && setPositionImmediate(0);
      let shouldSetPositionOpen = open && position < 0;
      (0, import_react2.useEffect)(() => {
        shouldSetPositionOpen && setPosition(0);
      }, [setPosition, shouldSetPositionOpen]);
      let { animationDriver } = (0, import_core13.useConfiguration)();
      if (!animationDriver)
        throw new Error("Must set animations in tamagui.config.ts");
      let scrollBridge = (0, import_use_constant.useConstant)(() => ({
        enabled: !1,
        y: 0,
        paneY: 0,
        paneMinY: 0,
        scrollStartY: -1,
        drag: () => {
        },
        release: () => {
        },
        scrollLock: !1
      })), removeScrollEnabled = props.forceRemoveScrollEnabled ?? (open && props.modal), maxSnapPoint = snapPoints[0];
      return {
        screenSize: snapPointsMode === "percent" ? frameSize / ((typeof maxSnapPoint == "number" ? maxSnapPoint : 100) / 100) : maxContentSize,
        maxSnapPoint,
        removeScrollEnabled,
        scrollBridge,
        modal: !!props.modal,
        open: state.open,
        setOpen: state.setOpen,
        hidden: !!state.isHidden,
        contentRef,
        frameSize,
        setFrameSize,
        dismissOnOverlayPress: props.dismissOnOverlayPress ?? !0,
        dismissOnSnapToBottom: props.dismissOnSnapToBottom ?? !1,
        onOverlayComponent: options.onOverlayComponent,
        scope: props.__scopeSheet,
        hasFit,
        position,
        snapPoints,
        snapPointsMode,
        setMaxContentSize,
        setPosition,
        setPositionImmediate,
        onlyShowFrame: !1
      };
    }
  }
});

// ../sheet/dist/cjs/nativeSheet.native.js
var require_nativeSheet_native = __commonJS({
  "../sheet/dist/cjs/nativeSheet.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), nativeSheet_exports = {};
    __export2(nativeSheet_exports, {
      getNativeSheet: () => getNativeSheet,
      setupNativeSheet: () => setupNativeSheet2
    });
    module2.exports = __toCommonJS2(nativeSheet_exports);
    var import_stacks3 = require_index_native19(), import_react2 = require("react"), import_react_native4 = require("react-native"), import_SheetContext = require_SheetContext_native(), import_useSheetOpenState = require_useSheetOpenState_native(), import_useSheetProviderProps = require_useSheetProviderProps_native(), import_jsx_runtime6 = require("react/jsx-runtime"), nativeSheets = {
      ios: null
    };
    function getNativeSheet(platform) {
      return nativeSheets[platform];
    }
    function setupNativeSheet2(platform, Implementation) {
      platform === "ios" && (nativeSheets[platform] = (props) => {
        let state = (0, import_useSheetOpenState.useSheetOpenState)(props), providerProps = (0, import_useSheetProviderProps.useSheetProviderProps)(props, state), { open, setOpen } = state, ref = (0, import_react2.useRef)();
        return (0, import_react2.useEffect)(() => {
          var _a;
          (_a = ref.current) == null || _a.setVisibility(open);
        }, [open]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, { children: /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_SheetContext.SheetProvider, { ...providerProps, onlyShowFrame: !0, children: [
          /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Implementation, { ref, onModalDismiss: () => setOpen(!1), children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_react_native4.View, { style: { flex: 1 }, children: props.children }) }),
          /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            import_stacks3.YStack,
            {
              position: "absolute",
              opacity: 0,
              pointerEvents: "none",
              width: 0,
              height: 0,
              children: props.children
            }
          )
        ] }) });
      });
    }
  }
});

// ../use-keyboard-visible/dist/cjs/useKeyboardVisible.native.js
var require_useKeyboardVisible_native = __commonJS({
  "../use-keyboard-visible/dist/cjs/useKeyboardVisible.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useKeyboardVisible_exports = {};
    __export2(useKeyboardVisible_exports, {
      useKeyboardVisible: () => useKeyboardVisible2
    });
    module2.exports = __toCommonJS2(useKeyboardVisible_exports);
    var import_react2 = require("react"), import_react_native4 = require("react-native"), useKeyboardVisible2 = () => {
      let [isKeyboardVisible, setKeyboardVisible] = (0, import_react2.useState)(!1);
      return (0, import_react2.useEffect)(() => {
        let keyboardDidShowListener = import_react_native4.Keyboard.addListener("keyboardDidShow", () => {
          setKeyboardVisible(!0);
        }), keyboardDidHideListener = import_react_native4.Keyboard.addListener("keyboardDidHide", () => {
          setKeyboardVisible(!1);
        });
        return () => {
          keyboardDidHideListener.remove(), keyboardDidShowListener.remove();
        };
      }, []), isKeyboardVisible;
    };
  }
});

// ../use-keyboard-visible/dist/cjs/index.native.js
var require_index_native32 = __commonJS({
  "../use-keyboard-visible/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      useKeyboardVisible: () => import_useKeyboardVisible.useKeyboardVisible
    });
    module2.exports = __toCommonJS2(src_exports2);
    var import_useKeyboardVisible = require_useKeyboardVisible_native();
  }
});

// ../sheet/dist/cjs/contexts.native.js
var require_contexts_native = __commonJS({
  "../sheet/dist/cjs/contexts.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), contexts_exports = {};
    __export2(contexts_exports, {
      ParentSheetContext: () => ParentSheetContext,
      SheetInsideSheetContext: () => SheetInsideSheetContext
    });
    module2.exports = __toCommonJS2(contexts_exports);
    var import_react2 = require("react"), ParentSheetContext = (0, import_react2.createContext)({
      zIndex: 1e5
    }), SheetInsideSheetContext = (0, import_react2.createContext)(null);
  }
});

// ../sheet/dist/cjs/helpers.native.js
var require_helpers_native = __commonJS({
  "../sheet/dist/cjs/helpers.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), helpers_exports = {};
    __export2(helpers_exports, {
      resisted: () => resisted
    });
    module2.exports = __toCommonJS2(helpers_exports);
    function resisted(y, minY, maxOverflow = 25) {
      if (y < minY) {
        let past = minY - y, extra = -(1.1 - 0.1 ** (Math.min(maxOverflow, past) / maxOverflow)) * maxOverflow;
        return minY + extra;
      }
      return y;
    }
  }
});

// ../sheet/dist/cjs/SheetImplementationCustom.native.js
var require_SheetImplementationCustom_native = __commonJS({
  "../sheet/dist/cjs/SheetImplementationCustom.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SheetImplementationCustom_exports = {};
    __export2(SheetImplementationCustom_exports, {
      SheetImplementationCustom: () => SheetImplementationCustom
    });
    module2.exports = __toCommonJS2(SheetImplementationCustom_exports);
    var import_adapt = require_index_native24(), import_animate_presence = require_index_native11(), import_compose_refs = require_index_native5(), import_core13 = require_index_native15(), import_portal2 = require_index_native29(), import_use_keyboard_visible = require_index_native32(), import_react2 = require("react"), import_react_native4 = require("react-native"), import_constants = require_constants_native3(), import_contexts = require_contexts_native(), import_helpers = require_helpers_native(), import_SheetContext = require_SheetContext_native(), import_useSheetOpenState = require_useSheetOpenState_native(), import_useSheetProviderProps = require_useSheetProviderProps_native(), import_jsx_runtime6 = require("react/jsx-runtime"), hiddenSize = 10000.1, SheetImplementationCustom = (0, import_core13.themeable)(
      (0, import_react2.forwardRef)(function(props, forwardedRef) {
        let parentSheet = (0, import_react2.useContext)(import_contexts.ParentSheetContext), {
          animation,
          animationConfig: animationConfigProp,
          modal = !1,
          zIndex = parentSheet.zIndex + 1,
          moveOnKeyboardChange = !1,
          unmountChildrenWhenHidden = !1,
          portalProps
        } = props, keyboardIsVisible = (0, import_use_keyboard_visible.useKeyboardVisible)(), state = (0, import_useSheetOpenState.useSheetOpenState)(props), [overlayComponent, setOverlayComponent] = (0, import_react2.useState)(null), providerProps = (0, import_useSheetProviderProps.useSheetProviderProps)(props, state, {
          onOverlayComponent: setOverlayComponent
        }), {
          frameSize,
          setFrameSize,
          snapPoints,
          snapPointsMode,
          hasFit,
          position,
          setPosition,
          scrollBridge,
          screenSize,
          setMaxContentSize,
          maxSnapPoint
        } = providerProps, { open, controller, isHidden } = state, sheetRef = (0, import_react2.useRef)(null), ref = (0, import_compose_refs.useComposedRefs)(forwardedRef, sheetRef), animationConfig = (() => {
          let [animationProp, animationPropConfig] = animation ? Array.isArray(animation) ? animation : [animation] : [];
          return animationConfigProp ?? (animationProp ? {
            ...(0, import_core13.getConfig)().animations.animations[animationProp],
            ...animationPropConfig
          } : null);
        })(), [isShowingInnerSheet, setIsShowingInnerSheet] = (0, import_react2.useState)(!1), shouldHideParentSheet = !import_core13.isWeb && modal && isShowingInnerSheet, parentSheetContext = (0, import_react2.useContext)(import_contexts.SheetInsideSheetContext), onInnerSheet = (0, import_react2.useCallback)((hasChild) => {
          setIsShowingInnerSheet(hasChild);
        }, []), positions = (0, import_react2.useMemo)(
          () => snapPoints.map(
            (point) => getYPositions(snapPointsMode, point, screenSize, frameSize)
          ),
          [screenSize, frameSize, snapPoints, snapPointsMode]
        ), { animationDriver } = (0, import_core13.useConfiguration)(), { useAnimatedNumber, useAnimatedNumberStyle, useAnimatedNumberReaction } = animationDriver, AnimatedView = animationDriver.View;
        (0, import_core13.useIsomorphicLayoutEffect)(() => {
          if (parentSheetContext && open)
            return parentSheetContext(!0), () => {
              parentSheetContext(!1);
            };
        }, [parentSheetContext, open]);
        let nextParentContext = (0, import_react2.useMemo)(
          () => ({
            zIndex
          }),
          [zIndex]
        ), animatedNumber = useAnimatedNumber(hiddenSize), at = (0, import_react2.useRef)(hiddenSize);
        useAnimatedNumberReaction(
          {
            value: animatedNumber,
            hostRef: sheetRef
          },
          (0, import_react2.useCallback)(
            (value) => {
              animationDriver.isReactNative && (at.current = value, scrollBridge.paneY = value);
            },
            [animationDriver]
          )
        );
        function stopSpring() {
          animatedNumber.stop(), scrollBridge.onFinishAnimate && (scrollBridge.onFinishAnimate(), scrollBridge.onFinishAnimate = void 0);
        }
        let hasntMeasured = at.current === hiddenSize, animateTo = (0, import_core13.useEvent)((position2) => {
          if (frameSize === 0)
            return;
          let toValue = isHidden || position2 === -1 ? screenSize : positions[position2];
          if (at.current !== toValue) {
            if (at.current = toValue, stopSpring(), hasntMeasured || isHidden) {
              if (animatedNumber.setValue(screenSize, {
                type: "timing",
                duration: 0
              }), isHidden)
                return;
              toValue = positions[position2], at.current = toValue;
            }
            animatedNumber.setValue(toValue, {
              type: "spring",
              ...animationConfig
            });
          }
        });
        (0, import_core13.useIsomorphicLayoutEffect)(() => {
          screenSize && hasntMeasured && animatedNumber.setValue(screenSize, {
            type: "timing",
            duration: 0
          });
        }, [hasntMeasured, screenSize]), (0, import_core13.useIsomorphicLayoutEffect)(() => {
          !frameSize || !screenSize || isHidden || hasntMeasured && !open || animateTo(position);
        }, [isHidden, frameSize, screenSize, open, position]);
        let disableDrag = props.disableDrag ?? (controller == null ? void 0 : controller.disableDrag), themeName = (0, import_core13.useThemeName)(), panResponder = (0, import_react2.useMemo)(
          () => {
            if (disableDrag || !frameSize || isShowingInnerSheet)
              return;
            let minY = positions[0];
            scrollBridge.paneMinY = minY;
            let startY = at.current;
            function makeUnselectable(val) {
              import_constants.SHEET_HIDDEN_STYLESHEET && (val ? import_constants.SHEET_HIDDEN_STYLESHEET.innerText = ":root * { user-select: none !important; -webkit-user-select: none !important; }" : import_constants.SHEET_HIDDEN_STYLESHEET.innerText = "");
            }
            let release = ({ vy, dragAt }) => {
              isExternalDrag = !1, previouslyScrolling = !1, makeUnselectable(!1);
              let end = dragAt + startY + frameSize * vy * 0.2, closestPoint = 0, dist = 1 / 0;
              for (let i = 0; i < positions.length; i++) {
                let position2 = positions[i], curDist = end > position2 ? end - position2 : position2 - end;
                curDist < dist && (dist = curDist, closestPoint = i);
              }
              setPosition(closestPoint), animateTo(closestPoint);
            }, finish = (_e, state2) => {
              release({
                vy: state2.vy,
                dragAt: state2.dy
              });
            }, previouslyScrolling = !1, onMoveShouldSet = (_e, { dy }) => {
              let isScrolled = scrollBridge.y !== 0, isDraggingUp = dy < 0, isNearTop = scrollBridge.paneY - 5 <= scrollBridge.paneMinY;
              return isScrolled ? (previouslyScrolling = !0, !1) : isNearTop && !isScrolled && isDraggingUp ? !1 : Math.abs(dy) > 5;
            }, grant = () => {
              makeUnselectable(!0), stopSpring(), startY = at.current;
            }, isExternalDrag = !1;
            return scrollBridge.drag = (dy) => {
              isExternalDrag || (isExternalDrag = !0, grant());
              let to = dy + startY;
              animatedNumber.setValue((0, import_helpers.resisted)(to, minY), { type: "direct" });
            }, scrollBridge.release = release, import_react_native4.PanResponder.create({
              onMoveShouldSetPanResponder: onMoveShouldSet,
              onPanResponderGrant: grant,
              onPanResponderMove: (_e, { dy }) => {
                let toFull = dy + startY, to = (0, import_helpers.resisted)(toFull, minY);
                animatedNumber.setValue(to, { type: "direct" });
              },
              onPanResponderEnd: finish,
              onPanResponderTerminate: finish,
              onPanResponderRelease: finish
            });
          },
          // eslint-disable-next-line react-hooks/exhaustive-deps
          [disableDrag, isShowingInnerSheet, animateTo, frameSize, positions, setPosition]
        ), handleAnimationViewLayout = (0, import_react2.useCallback)(
          (e) => {
            var _a;
            let next = (_a = e.nativeEvent) == null ? void 0 : _a.layout.height;
            next && setFrameSize(next);
          },
          [keyboardIsVisible]
        ), handleMaxContentViewLayout = (0, import_react2.useCallback)(
          (e) => {
            var _a;
            let next = (_a = e.nativeEvent) == null ? void 0 : _a.layout.height;
            next && setMaxContentSize(next);
          },
          [keyboardIsVisible]
        ), animatedStyle = useAnimatedNumberStyle(animatedNumber, (val) => {
          "worklet";
          return {
            transform: [{ translateY: frameSize === 0 ? hiddenSize : val }]
          };
        }), sizeBeforeKeyboard = (0, import_react2.useRef)(null);
        (0, import_react2.useEffect)(() => {
          if (import_core13.isWeb || !moveOnKeyboardChange)
            return;
          let keyboardDidShowListener = import_react_native4.Keyboard.addListener("keyboardDidShow", (e) => {
            sizeBeforeKeyboard.current === null && (sizeBeforeKeyboard.current = animatedNumber.getValue(), animatedNumber.setValue(
              Math.max(animatedNumber.getValue() - e.endCoordinates.height, 0)
            ));
          }), keyboardDidHideListener = import_react_native4.Keyboard.addListener("keyboardDidHide", () => {
            sizeBeforeKeyboard.current !== null && (animatedNumber.setValue(sizeBeforeKeyboard.current), sizeBeforeKeyboard.current = null);
          });
          return () => {
            keyboardDidHideListener.remove(), keyboardDidShowListener.remove();
          };
        }, [moveOnKeyboardChange]);
        let [opacity, setOpacity] = (0, import_react2.useState)(open ? 1 : 0);
        open && opacity === 0 && setOpacity(1), (0, import_react2.useEffect)(() => {
          if (!open) {
            let tm = setTimeout(() => {
              setOpacity(0);
            }, 400);
            return () => {
              clearTimeout(tm);
            };
          }
        }, [open]);
        let forcedContentHeight = hasFit ? void 0 : snapPointsMode === "percent" ? `${maxSnapPoint}%` : maxSnapPoint, contents = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_contexts.ParentSheetContext.Provider, { value: nextParentContext, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_SheetContext.SheetProvider, { ...providerProps, children: [
          /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_animate_presence.AnimatePresence, { enterExitVariant: "open", children: shouldHideParentSheet || !open ? null : overlayComponent }),
          snapPointsMode !== "percent" && /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            import_react_native4.View,
            {
              style: {
                opacity: 0,
                position: "absolute",
                top: 0,
                left: 0,
                right: 0,
                bottom: 0,
                pointerEvents: "none"
              },
              pointerEvents: "none",
              onLayout: handleMaxContentViewLayout
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            AnimatedView,
            {
              ref,
              ...panResponder == null ? void 0 : panResponder.panHandlers,
              onLayout: handleAnimationViewLayout,
              pointerEvents: open && !shouldHideParentSheet ? "auto" : "none",
              style: [
                {
                  position: "absolute",
                  zIndex,
                  width: "100%",
                  height: forcedContentHeight,
                  minHeight: forcedContentHeight,
                  opacity
                },
                animatedStyle
              ],
              children: props.children
            }
          )
        ] }) }), adaptContext = (0, import_react2.useContext)(import_adapt.AdaptParentContext), shouldMountChildren = !!(opacity || !unmountChildrenWhenHidden);
        if (modal) {
          let modalContents = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_portal2.Portal, { zIndex, ...portalProps, children: shouldMountChildren && /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_core13.Theme, { forceClassName: !0, name: themeName, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_adapt.AdaptParentContext.Provider, { value: adaptContext, children: contents }) }) });
          return import_core13.isWeb ? modalContents : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_contexts.SheetInsideSheetContext.Provider, { value: onInnerSheet, children: modalContents });
        }
        return contents;
      })
    );
    function getYPositions(mode, point, screenSize, frameSize) {
      if (!screenSize || !frameSize)
        return 0;
      if (mode === "mixed") {
        if (typeof point == "number")
          return screenSize - Math.min(screenSize, Math.max(0, point));
        if (point === "fit")
          return screenSize - Math.min(screenSize, frameSize);
        if (point.endsWith("%")) {
          let pct2 = Math.min(100, Math.max(0, Number(point.slice(0, -1)))) / 100;
          return Number.isNaN(pct2) ? (console.warn("Invalid snapPoint percentage string"), 0) : Math.round(screenSize - pct2 * screenSize);
        }
        return console.warn("Invalid snapPoint unknown value"), 0;
      }
      if (mode === "fit")
        return point === 0 ? screenSize : screenSize - Math.min(screenSize, frameSize);
      if (mode === "constant" && typeof point == "number")
        return screenSize - Math.min(screenSize, Math.max(0, point));
      let pct = Math.min(100, Math.max(0, Number(point))) / 100;
      return Number.isNaN(pct) ? (console.warn("Invalid snapPoint percentage"), 0) : Math.round(screenSize - pct * screenSize);
    }
  }
});

// ../scroll-view/dist/cjs/ScrollView.native.js
var require_ScrollView_native = __commonJS({
  "../scroll-view/dist/cjs/ScrollView.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), ScrollView_exports = {};
    __export2(ScrollView_exports, {
      ScrollView: () => ScrollView
    });
    module2.exports = __toCommonJS2(ScrollView_exports);
    var import_stacks3 = require_index_native19(), import_web = require_index_native9(), import_react_native4 = require("react-native"), ScrollView = (0, import_web.styled)(import_react_native4.ScrollView, {
      name: "ScrollView",
      scrollEnabled: !0,
      variants: {
        fullscreen: {
          true: import_stacks3.fullscreenStyle
        }
      }
    });
  }
});

// ../scroll-view/dist/cjs/index.native.js
var require_index_native33 = __commonJS({
  "../scroll-view/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_ScrollView_native(), module2.exports);
  }
});

// ../sheet/dist/cjs/SheetScrollView.native.js
var require_SheetScrollView_native = __commonJS({
  "../sheet/dist/cjs/SheetScrollView.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SheetScrollView_exports = {};
    __export2(SheetScrollView_exports, {
      SheetScrollView: () => SheetScrollView
    });
    module2.exports = __toCommonJS2(SheetScrollView_exports);
    var import_core13 = require_index_native15(), import_scroll_view = require_index_native33(), import_react2 = require("react"), import_SheetContext = require_SheetContext_native(), import_jsx_runtime6 = require("react/jsx-runtime"), SHEET_SCROLL_VIEW_NAME = "SheetScrollView", SheetScrollView = (0, import_react2.forwardRef)(
      ({ __scopeSheet, children, ...props }, ref) => {
        let context = (0, import_SheetContext.useSheetContext)(SHEET_SCROLL_VIEW_NAME, __scopeSheet), { scrollBridge } = context, scrollRef = (0, import_react2.useRef)(null), state = (0, import_react2.useRef)({
          lastPageY: 0,
          dragAt: 0,
          dys: [],
          // store a few recent dys to get velocity on release
          isScrolling: !1,
          isDragging: !1
        }), release = () => {
          if (!state.current.isDragging)
            return;
          state.current.isDragging = !1, scrollBridge.scrollStartY = -1, state.current.isScrolling = !1;
          let vy = 0;
          if (state.current.dys.length) {
            let recentDys = state.current.dys.slice(-10);
            vy = (recentDys.length ? recentDys.reduce((a, b) => a + b, 0) : 0) / recentDys.length * 0.04;
          }
          state.current.dys = [], scrollBridge.release({
            dragAt: state.current.dragAt,
            vy
          });
        };
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_scroll_view.ScrollView,
          {
            ref: (0, import_core13.composeRefs)(scrollRef, ref),
            flex: 1,
            scrollEventThrottle: 8,
            onScroll: (e) => {
              let { y } = e.nativeEvent.contentOffset;
              scrollBridge.y = y, y > 0 && (scrollBridge.scrollStartY = -1);
            },
            onStartShouldSetResponder: () => (scrollBridge.scrollStartY = -1, state.current.isDragging = !0, !0),
            onMoveShouldSetResponder: () => !1,
            onResponderRelease: release,
            className: "_ovs-contain",
            ...props,
            children: (0, import_react2.useMemo)(() => children, [children])
          }
        );
      }
    );
  }
});

// ../sheet/dist/cjs/useSheetOffscreenSize.native.js
var require_useSheetOffscreenSize_native = __commonJS({
  "../sheet/dist/cjs/useSheetOffscreenSize.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useSheetOffscreenSize_exports = {};
    __export2(useSheetOffscreenSize_exports, {
      useSheetOffscreenSize: () => useSheetOffscreenSize
    });
    module2.exports = __toCommonJS2(useSheetOffscreenSize_exports);
    var useSheetOffscreenSize = ({
      snapPoints,
      position,
      screenSize,
      frameSize,
      snapPointsMode
    }) => {
      if (snapPointsMode === "fit")
        return 0;
      if (snapPointsMode === "constant") {
        let maxSize2 = Number(snapPoints[0]), currentSize2 = Number(snapPoints[position] ?? 0);
        return maxSize2 - currentSize2;
      }
      if (snapPointsMode === "percent") {
        let maxPercentOpened = Number(snapPoints[0]) / 100, percentOpened = Number(snapPoints[position] ?? 0) / 100;
        return (maxPercentOpened - percentOpened) * screenSize;
      }
      let maxSnapPoint = snapPoints[0];
      if (maxSnapPoint === "fit")
        return 0;
      let maxSize = typeof maxSnapPoint == "string" ? Number(maxSnapPoint.slice(0, -1)) / 100 * screenSize : maxSnapPoint, currentSnapPoint = snapPoints[position] ?? 0, currentSize = typeof currentSnapPoint == "string" ? Number(currentSnapPoint.slice(0, -1)) / 100 * screenSize : currentSnapPoint, offscreenSize = maxSize - currentSize;
      return Number.isNaN(offscreenSize) ? 0 : offscreenSize;
    };
  }
});

// ../sheet/dist/cjs/createSheet.native.js
var require_createSheet_native = __commonJS({
  "../sheet/dist/cjs/createSheet.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createSheet_exports = {};
    __export2(createSheet_exports, {
      createSheet: () => createSheet
    });
    module2.exports = __toCommonJS2(createSheet_exports);
    var import_compose_refs = require_index_native5(), import_core13 = require_index_native15(), import_remove_scroll = require_index_native30(), import_react2 = require("react"), import_react_native4 = require("react-native"), import_constants = require_constants_native3(), import_nativeSheet = require_nativeSheet_native(), import_SheetContext = require_SheetContext_native(), import_SheetImplementationCustom = require_SheetImplementationCustom_native(), import_SheetScrollView = require_SheetScrollView_native(), import_useSheetController = require_useSheetController_native(), import_useSheetOffscreenSize = require_useSheetOffscreenSize_native(), import_jsx_runtime6 = (
      // @ts-ignore
      require("react/jsx-runtime")
    );
    function createSheet({ Handle, Frame, Overlay }) {
      let SheetHandle = Handle.extractable(
        ({ __scopeSheet, ...props }) => {
          let context = (0, import_SheetContext.useSheetContext)(import_constants.SHEET_HANDLE_NAME, __scopeSheet);
          return context.onlyShowFrame ? null : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            Handle,
            {
              onPress: () => {
                let max2 = context.snapPoints.length + (context.dismissOnSnapToBottom ? -1 : 0), nextPos = (context.position + 1) % max2;
                context.setPosition(nextPos);
              },
              open: context.open,
              ...props
            }
          );
        }
      ), SheetOverlay = Overlay.extractable(
        (0, import_react2.memo)((propsIn) => {
          let { __scopeSheet, ...props } = propsIn, context = (0, import_SheetContext.useSheetContext)(import_constants.SHEET_OVERLAY_NAME, __scopeSheet), element = (0, import_react2.useMemo)(
            () => (
              // @ts-ignore
              /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                Overlay,
                {
                  ...props,
                  onPress: (0, import_core13.composeEventHandlers)(
                    props.onPress,
                    context.dismissOnOverlayPress ? () => {
                      context.setOpen(!1);
                    } : void 0
                  )
                }
              )
            ),
            [props.onPress, context.dismissOnOverlayPress]
          );
          return (0, import_core13.useIsomorphicLayoutEffect)(() => {
            var _a;
            (_a = context.onOverlayComponent) == null || _a.call(context, element);
          }, [element]), context.onlyShowFrame, null;
        })
      ), SheetFrame = Frame.extractable(
        (0, import_react2.forwardRef)(
          ({
            __scopeSheet,
            adjustPaddingForOffscreenContent,
            disableHideBottomOverflow,
            children,
            ...props
          }, forwardedRef) => {
            let context = (0, import_SheetContext.useSheetContext)(import_constants.SHEET_NAME, __scopeSheet), { hasFit, removeScrollEnabled, frameSize, contentRef } = context, composedContentRef = (0, import_compose_refs.useComposedRefs)(forwardedRef, contentRef), offscreenSize = (0, import_useSheetOffscreenSize.useSheetOffscreenSize)(context), sheetContents = (0, import_react2.useMemo)(() => (
              // @ts-ignore
              /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(
                Frame,
                {
                  ref: composedContentRef,
                  flex: hasFit ? 0 : 1,
                  height: hasFit ? void 0 : frameSize,
                  ...props,
                  children: [
                    children,
                    adjustPaddingForOffscreenContent && /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_core13.Stack, { "data-sheet-offscreen-pad": !0, height: offscreenSize, width: "100%" })
                  ]
                }
              )
            ), [props, frameSize, offscreenSize, adjustPaddingForOffscreenContent, hasFit]);
            return /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                import_remove_scroll.RemoveScroll,
                {
                  forwardProps: !0,
                  enabled: removeScrollEnabled,
                  allowPinchZoom: !0,
                  shards: [contentRef],
                  removeScrollBar: !1,
                  children: sheetContents
                }
              ),
              !disableHideBottomOverflow && // @ts-ignore
              /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                Frame,
                {
                  ...props,
                  componentName: "SheetCover",
                  children: null,
                  position: "absolute",
                  bottom: "-50%",
                  zIndex: -1,
                  height: context.frameSize,
                  left: 0,
                  right: 0,
                  borderWidth: 0,
                  borderRadius: 0,
                  shadowOpacity: 0
                }
              )
            ] });
          }
        )
      ), Sheet = (0, import_react2.forwardRef)(function(props, ref) {
        let hydrated = (0, import_core13.useDidFinishSSR)(), { isShowingNonSheet } = (0, import_useSheetController.useSheetController)(), SheetImplementation = import_SheetImplementationCustom.SheetImplementationCustom;
        if (props.native && import_react_native4.Platform.OS === "ios") {
          let impl = (0, import_nativeSheet.getNativeSheet)("ios");
          impl && (SheetImplementation = impl);
        }
        return isShowingNonSheet || !hydrated ? null : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(SheetImplementation, { ref, ...props });
      }), components = {
        Frame: SheetFrame,
        Overlay: SheetOverlay,
        Handle: SheetHandle,
        ScrollView: import_SheetScrollView.SheetScrollView
      }, Controlled = (0, import_core13.withStaticProperties)(Sheet, components);
      return (0, import_core13.withStaticProperties)(Sheet, {
        ...components,
        Controlled
      });
    }
  }
});

// ../sheet/dist/cjs/types.native.js
var require_types_native6 = __commonJS({
  "../sheet/dist/cjs/types.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), types_exports = {};
    module2.exports = __toCommonJS2(types_exports);
  }
});

// ../sheet/dist/cjs/Sheet.native.js
var require_Sheet_native = __commonJS({
  "../sheet/dist/cjs/Sheet.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Sheet_exports = {};
    __export2(Sheet_exports, {
      Frame: () => Frame,
      Handle: () => Handle,
      Overlay: () => Overlay,
      Sheet: () => Sheet,
      SheetHandleFrame: () => SheetHandleFrame,
      SheetOverlayFrame: () => SheetOverlayFrame,
      createSheetScope: () => import_SheetContext.createSheetScope
    });
    module2.exports = __toCommonJS2(Sheet_exports);
    var import_core13 = require_index_native15(), import_stacks3 = require_index_native19(), import_constants = require_constants_native3(), import_createSheet = require_createSheet_native(), import_SheetContext = require_SheetContext_native();
    __reExport2(Sheet_exports, require_types_native6(), module2.exports);
    var Handle = (0, import_core13.styled)(import_stacks3.XStack, {
      name: import_constants.SHEET_HANDLE_NAME,
      variants: {
        open: {
          true: {
            pointerEvents: "auto"
          },
          false: {
            opacity: 0,
            pointerEvents: "none"
          }
        },
        unstyled: {
          false: {
            height: 10,
            borderRadius: 100,
            backgroundColor: "$background",
            zIndex: 10,
            marginHorizontal: "35%",
            marginBottom: "$2",
            opacity: 0.5,
            hoverStyle: {
              opacity: 0.7
            }
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), Overlay = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: import_constants.SHEET_OVERLAY_NAME,
      variants: {
        open: {
          true: {
            opacity: 1,
            pointerEvents: "auto"
          },
          false: {
            opacity: 0,
            pointerEvents: "none"
          }
        },
        unstyled: {
          false: {
            fullscreen: !0,
            position: "absolute",
            backgrounded: !0,
            zIndex: 1e5 - 1,
            pointerEvents: "auto"
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), Frame = (0, import_core13.styled)(import_stacks3.YStack, {
      name: import_constants.SHEET_NAME,
      variants: {
        unstyled: {
          false: {
            flex: 1,
            backgroundColor: "$background",
            borderTopLeftRadius: "$true",
            borderTopRightRadius: "$true",
            width: "100%",
            maxHeight: "100%",
            overflow: "hidden"
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), Sheet = (0, import_createSheet.createSheet)({
      Frame,
      Handle,
      Overlay
    }), SheetOverlayFrame = Overlay, SheetHandleFrame = Handle;
  }
});

// ../sheet/dist/cjs/useSheet.native.js
var require_useSheet_native = __commonJS({
  "../sheet/dist/cjs/useSheet.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useSheet_exports = {};
    __export2(useSheet_exports, {
      useSheet: () => useSheet
    });
    module2.exports = __toCommonJS2(useSheet_exports);
    var import_SheetContext = require_SheetContext_native(), useSheet = () => (0, import_SheetContext.useSheetContext)("", void 0);
  }
});

// ../sheet/dist/cjs/SheetController.native.js
var require_SheetController_native = __commonJS({
  "../sheet/dist/cjs/SheetController.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SheetController_exports = {};
    __export2(SheetController_exports, {
      SheetController: () => SheetController
    });
    module2.exports = __toCommonJS2(SheetController_exports);
    var import_core13 = require_index_native15(), import_react2 = require("react"), import_useSheetController = require_useSheetController_native(), import_jsx_runtime6 = require("react/jsx-runtime"), SheetController = ({
      children,
      onOpenChange: onOpenChangeProp,
      ...value
    }) => {
      let onOpenChange = (0, import_core13.useEvent)(onOpenChangeProp), memoValue = (0, import_react2.useMemo)(
        () => ({
          open: value.open,
          hidden: value.hidden,
          disableDrag: value.disableDrag,
          onOpenChange
        }),
        [onOpenChange, value.open, value.hidden, value.disableDrag]
      );
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_useSheetController.SheetControllerContext.Provider, { value: memoValue, children });
    };
  }
});

// ../sheet/dist/cjs/index.native.js
var require_index_native34 = __commonJS({
  "../sheet/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      setupNativeSheet: () => import_nativeSheet.setupNativeSheet
    });
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Sheet_native(), module2.exports);
    __reExport2(src_exports2, require_useSheet_native(), module2.exports);
    __reExport2(src_exports2, require_createSheet_native(), module2.exports);
    __reExport2(src_exports2, require_SheetController_native(), module2.exports);
    __reExport2(src_exports2, require_useSheetController_native(), module2.exports);
    var import_nativeSheet = require_nativeSheet_native();
  }
});

// ../dialog/dist/cjs/Dialog.native.js
var require_Dialog_native = __commonJS({
  "../dialog/dist/cjs/Dialog.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Dialog_exports = {};
    __export2(Dialog_exports, {
      Dialog: () => Dialog,
      DialogClose: () => DialogClose,
      DialogContent: () => DialogContent,
      DialogDescription: () => DialogDescription,
      DialogOverlay: () => DialogOverlay,
      DialogOverlayFrame: () => DialogOverlayFrame,
      DialogPortal: () => DialogPortal,
      DialogPortalFrame: () => DialogPortalFrame,
      DialogSheetContents: () => DialogSheetContents,
      DialogTitle: () => DialogTitle,
      DialogTrigger: () => DialogTrigger,
      DialogWarningProvider: () => DialogWarningProvider,
      createDialogScope: () => createDialogScope
    });
    module2.exports = __toCommonJS2(Dialog_exports);
    var import_adapt = require_index_native24(), import_animate_presence = require_index_native11(), import_aria_hidden = require_index_native26(), import_compose_refs = require_index_native5(), import_core13 = require_index_native15(), import_create_context = require_index_native25(), import_dismissable = require_index_native27(), import_focus_scope = require_index_native28(), import_portal2 = require_index_native29(), import_remove_scroll = require_index_native30(), import_sheet = require_index_native34(), import_stacks3 = require_index_native19(), import_text2 = require_index_native21(), import_use_controllable_state = require_index_native12(), React2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), DIALOG_NAME = "Dialog", [createDialogContext, createDialogScope] = (0, import_create_context.createContextScope)(DIALOG_NAME), [DialogProvider, useDialogContext] = createDialogContext(DIALOG_NAME), TRIGGER_NAME = "DialogTrigger", DialogTriggerFrame = (0, import_core13.styled)(import_core13.View, {
      name: TRIGGER_NAME
    }), DialogTrigger = DialogTriggerFrame.styleable(
      (props, forwardedRef) => {
        let { __scopeDialog, ...triggerProps } = props, context = useDialogContext(TRIGGER_NAME, __scopeDialog), composedTriggerRef = (0, import_compose_refs.useComposedRefs)(forwardedRef, context.triggerRef);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          DialogTriggerFrame,
          {
            tag: "button",
            "aria-haspopup": "dialog",
            "aria-expanded": context.open,
            "aria-controls": context.contentId,
            "data-state": getState(context.open),
            ...triggerProps,
            ref: composedTriggerRef,
            onPress: (0, import_core13.composeEventHandlers)(props.onPress, context.onOpenToggle)
          }
        );
      }
    );
    DialogTrigger.displayName = TRIGGER_NAME;
    var PORTAL_NAME = "DialogPortal", [PortalProvider2, usePortalContext] = createDialogContext(
      PORTAL_NAME,
      {
        forceMount: void 0
      }
    ), DialogPortalFrame = (0, import_core13.styled)(import_stacks3.YStack, {
      variants: {
        unstyled: {
          false: {
            alignItems: "center",
            justifyContent: "center",
            fullscreen: !0,
            zIndex: 1e5,
            ...import_core13.isWeb && {
              maxHeight: "100vh",
              position: "fixed"
            }
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), DialogPortalItem = (props) => {
      let themeName = (0, import_core13.useThemeName)(), context = useDialogContext(PORTAL_NAME, props.__scopeDialog);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_portal2.PortalItem, { hostName: props.hostName, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(DialogPortalItemContent, { ...props, themeName, context }) });
    };
    function DialogPortalItemContent(props) {
      let {
        __scopeDialog,
        children,
        context,
        themeName,
        space,
        spaceDirection,
        separator
      } = props, childrenSpaced = children;
      return (space || separator) && (childrenSpaced = (0, import_core13.spacedChildren)({
        children,
        separator,
        space,
        direction: spaceDirection
      })), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(DialogProvider, { scope: __scopeDialog, ...context, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_core13.Theme, { name: themeName, children: childrenSpaced }) });
    }
    var DialogPortal = (props) => {
      let { __scopeDialog, forceMount, children, ...frameProps } = props, context = useDialogContext(PORTAL_NAME, __scopeDialog), isShowing = forceMount || context.open, [isFullyHidden, setIsFullyHidden] = React2.useState(!isShowing);
      isShowing && isFullyHidden && setIsFullyHidden(!1);
      let contents = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_animate_presence.AnimatePresence,
        {
          onExitComplete: () => {
            setIsFullyHidden(!0);
          },
          children: isShowing ? children : null
        }
      );
      return useShowDialogSheet(context) ? children : context.modal ? isFullyHidden ? null : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(DialogPortalItem, { __scopeDialog, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(PortalProvider2, { scope: __scopeDialog, forceMount, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(DialogPortalFrame, { pointerEvents: isShowing ? "auto" : "none", ...frameProps, children: contents }) }) }) : contents;
    };
    DialogPortal.displayName = PORTAL_NAME;
    var OVERLAY_NAME = "DialogOverlay", DialogOverlayFrame = (0, import_core13.styled)(import_sheet.Overlay, {
      name: OVERLAY_NAME
    }), DialogOverlay = DialogOverlayFrame.extractable(
      React2.forwardRef(
        ({ __scopeDialog, ...props }, forwardedRef) => {
          let portalContext = usePortalContext(OVERLAY_NAME, __scopeDialog), { forceMount = portalContext.forceMount, ...overlayProps } = props, context = useDialogContext(OVERLAY_NAME, __scopeDialog), showSheet = useShowDialogSheet(context);
          return !forceMount && (!context.modal || showSheet) ? null : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(DialogOverlayImpl, { context, ...overlayProps, ref: forwardedRef });
        }
      )
    );
    DialogOverlay.displayName = OVERLAY_NAME;
    var DialogOverlayImpl = React2.forwardRef(
      (props, forwardedRef) => {
        let { context, ...overlayProps } = props;
        return (
          // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
          // ie. when `Overlay` and `Content` are siblings
          /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            DialogOverlayFrame,
            {
              "data-state": getState(context.open),
              pointerEvents: context.open ? "auto" : "none",
              ...overlayProps,
              ref: forwardedRef
            }
          )
        );
      }
    ), CONTENT_NAME = "DialogContent", DialogContentFrame = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: CONTENT_NAME,
      tag: "dialog",
      variants: {
        size: {
          "...size": (val, extras) => ({})
        },
        unstyled: {
          false: {
            position: "relative",
            backgrounded: !0,
            padded: !0,
            radiused: !0,
            elevate: !0,
            zIndex: 1e5
          }
        }
      },
      defaultVariants: {
        size: "$true",
        unstyled: !1
      }
    }), DialogContent = DialogContentFrame.extractable(
      React2.forwardRef(
        ({ __scopeDialog, ...props }, forwardedRef) => {
          let portalContext = usePortalContext(CONTENT_NAME, __scopeDialog), { forceMount = portalContext.forceMount, ...contentProps } = props, context = useDialogContext(CONTENT_NAME, __scopeDialog), contents = context.modal ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(DialogContentModal, { context, ...contentProps, ref: forwardedRef }) : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(DialogContentNonModal, { context, ...contentProps, ref: forwardedRef });
          return !import_core13.isWeb || context.disableRemoveScroll ? contents : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            import_remove_scroll.RemoveScroll,
            {
              forwardProps: !0,
              enabled: context.open,
              allowPinchZoom: context.allowPinchZoom,
              shards: [context.contentRef],
              removeScrollBar: !1,
              children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("div", { "data-remove-scroll-container": !0, className: "_dsp_contents", children: contents })
            }
          );
        }
      )
    );
    DialogContent.displayName = CONTENT_NAME;
    var DialogContentModal = React2.forwardRef(
      ({ children, context, ...props }, forwardedRef) => {
        let contentRef = React2.useRef(null), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, context.contentRef, contentRef);
        return import_core13.isWeb && React2.useEffect(() => {
          if (!context.open)
            return;
          let content = contentRef.current;
          if (content)
            return (0, import_aria_hidden.hideOthers)(content);
        }, [context.open]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          DialogContentImpl,
          {
            ...props,
            context,
            ref: composedRefs,
            disableOutsidePointerEvents: !0,
            onCloseAutoFocus: (0, import_core13.composeEventHandlers)(props.onCloseAutoFocus, (event) => {
              var _a;
              event.preventDefault(), (_a = context.triggerRef.current) == null || _a.focus();
            }),
            onPointerDownOutside: (0, import_core13.composeEventHandlers)(
              props.onPointerDownOutside,
              (event) => {
                let originalEvent = event.detail.originalEvent, ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === !0;
                (originalEvent.button === 2 || ctrlLeftClick) && event.preventDefault();
              }
            ),
            onFocusOutside: (0, import_core13.composeEventHandlers)(
              props.onFocusOutside,
              (event) => event.preventDefault()
            ),
            children
          }
        );
      }
    ), DialogContentNonModal = React2.forwardRef(
      (props, forwardedRef) => {
        let hasInteractedOutsideRef = React2.useRef(!1);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          DialogContentImpl,
          {
            ...props,
            ref: forwardedRef,
            trapFocus: !1,
            disableOutsidePointerEvents: !1,
            onCloseAutoFocus: (event) => {
              var _a, _b;
              (_a = props.onCloseAutoFocus) == null || _a.call(props, event), event.defaultPrevented || (hasInteractedOutsideRef.current || (_b = props.context.triggerRef.current) == null || _b.focus(), event.preventDefault()), hasInteractedOutsideRef.current = !1;
            },
            onInteractOutside: (event) => {
              var _a;
              (_a = props.onInteractOutside) == null || _a.call(props, event), event.defaultPrevented || (hasInteractedOutsideRef.current = !0);
              let target = event.target, trigger = props.context.triggerRef.current;
              trigger instanceof HTMLElement && trigger.contains(target) && event.preventDefault();
            }
          }
        );
      }
    ), DialogContentImpl = React2.forwardRef(
      (props, forwardedRef) => {
        let {
          __scopeDialog,
          trapFocus,
          onOpenAutoFocus,
          onCloseAutoFocus,
          disableOutsidePointerEvents,
          onEscapeKeyDown,
          onPointerDownOutside,
          onFocusOutside,
          onInteractOutside,
          context,
          ...contentProps
        } = props, contentRef = React2.useRef(null), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, contentRef), showSheet = useShowDialogSheet(context), contents = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          DialogContentFrame,
          {
            id: context.contentId,
            "aria-describedby": context.descriptionId,
            "aria-labelledby": context.titleId,
            "data-state": getState(context.open),
            ...contentProps
          }
        );
        return showSheet ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(DialogPortalItem, { hostName: getSheetContentsName(context), children: contentProps.children }) : import_core13.isWeb ? /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            import_focus_scope.FocusScope,
            {
              loop: !0,
              enabled: context.open,
              trapped: trapFocus,
              onMountAutoFocus: onOpenAutoFocus,
              forceUnmount: !context.open,
              onUnmountAutoFocus: onCloseAutoFocus,
              children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                import_dismissable.Dismissable,
                {
                  disableOutsidePointerEvents: context.open && disableOutsidePointerEvents,
                  forceUnmount: !context.open,
                  onEscapeKeyDown,
                  onPointerDownOutside,
                  onFocusOutside,
                  onInteractOutside,
                  ref: composedRefs,
                  onDismiss: () => context.onOpenChange(!1),
                  children: contents
                }
              )
            }
          ),
          process.env.NODE_ENV === "development" && /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(TitleWarning, { titleId: context.titleId }),
            /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              DescriptionWarning,
              {
                contentRef,
                descriptionId: context.descriptionId
              }
            )
          ] })
        ] }) : contents;
      }
    ), TITLE_NAME = "DialogTitle", DialogTitleFrame = (0, import_core13.styled)(import_text2.H2, {
      name: TITLE_NAME
    }), DialogTitle = React2.forwardRef(
      (props, forwardedRef) => {
        let { __scopeDialog, ...titleProps } = props, context = useDialogContext(TITLE_NAME, __scopeDialog);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(DialogTitleFrame, { id: context.titleId, ...titleProps, ref: forwardedRef });
      }
    );
    DialogTitle.displayName = TITLE_NAME;
    var DialogDescriptionFrame = (0, import_core13.styled)(import_text2.Paragraph, {
      name: "DialogDescription"
    }), DESCRIPTION_NAME = "DialogDescription", DialogDescription = React2.forwardRef((props, forwardedRef) => {
      let { __scopeDialog, ...descriptionProps } = props, context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        DialogDescriptionFrame,
        {
          id: context.descriptionId,
          ...descriptionProps,
          ref: forwardedRef
        }
      );
    });
    DialogDescription.displayName = DESCRIPTION_NAME;
    var CLOSE_NAME = "DialogClose", DialogCloseFrame = (0, import_core13.styled)(import_core13.View, {
      name: CLOSE_NAME,
      tag: "button",
      variants: {
        unstyled: {
          false: {
            zIndex: 100
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), DialogClose = DialogCloseFrame.styleable(
      (props, forwardedRef) => {
        let { __scopeDialog, displayWhenAdapted, ...closeProps } = props, context = useDialogContext(CLOSE_NAME, __scopeDialog, {
          warn: !1,
          fallback: {}
        });
        return useShowDialogSheet(context) && !displayWhenAdapted ? null : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          DialogCloseFrame,
          {
            accessibilityLabel: "Dialog Close",
            ...closeProps,
            ref: forwardedRef,
            onPress: (0, import_core13.composeEventHandlers)(
              props.onPress,
              () => context.onOpenChange(!1)
            )
          }
        );
      }
    );
    function getState(open) {
      return open ? "open" : "closed";
    }
    var TITLE_WARNING_NAME = "DialogTitleWarning", [DialogWarningProvider, useWarningContext] = (0, import_create_context.createContext)(TITLE_WARNING_NAME, {
      contentName: CONTENT_NAME,
      titleName: TITLE_NAME,
      docsSlug: "dialog"
    }), TitleWarning = ({ titleId }) => {
      if (process.env.NODE_ENV === "development") {
        let titleWarningContext = useWarningContext(TITLE_WARNING_NAME), MESSAGE = `\`${titleWarningContext.contentName}\` requires a \`${titleWarningContext.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${titleWarningContext.titleName}\`, you can wrap it with our VisuallyHidden component.`;
        React2.useEffect(() => {
          import_core13.isWeb && titleId && (document.getElementById(titleId) || console.warn(MESSAGE));
        }, [MESSAGE, titleId]);
      }
      return null;
    }, DESCRIPTION_WARNING_NAME = "DialogDescriptionWarning", DescriptionWarning = ({
      contentRef,
      descriptionId
    }) => {
      if (process.env.NODE_ENV === "development") {
        let MESSAGE = `Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${useWarningContext(DESCRIPTION_WARNING_NAME).contentName}}.`;
        React2.useEffect(() => {
          if (!import_core13.isWeb)
            return;
          let contentNode = contentRef.current;
          if (!(contentNode instanceof HTMLElement))
            return;
          let describedById = contentNode.getAttribute("aria-describedby");
          descriptionId && describedById && (document.getElementById(descriptionId) || console.warn(MESSAGE));
        }, [MESSAGE, contentRef, descriptionId]);
      }
      return null;
    }, Dialog = (0, import_core13.withStaticProperties)(
      React2.forwardRef(function(props, ref) {
        let {
          __scopeDialog,
          children,
          open: openProp,
          defaultOpen = !1,
          onOpenChange,
          modal = !0,
          allowPinchZoom = !1,
          disableRemoveScroll = !1
        } = props, baseId = React2.useId(), scopeId = `scope-${baseId}`, contentId = `content-${baseId}`, titleId = `title-${baseId}`, descriptionId = `description-${baseId}`, scopeKey = __scopeDialog ? Object.keys(__scopeDialog)[0] : scopeId, sheetContentsName = getSheetContentsName({ scopeKey, contentId }), triggerRef = React2.useRef(null), contentRef = React2.useRef(null), [open, setOpen] = (0, import_use_controllable_state.useControllableState)({
          prop: openProp,
          defaultProp: defaultOpen,
          onChange: onOpenChange
        }), onOpenToggle = React2.useCallback(() => {
          setOpen((prevOpen) => !prevOpen);
        }, [setOpen]), context = {
          scope: __scopeDialog,
          scopeKey,
          triggerRef,
          contentRef,
          contentId,
          titleId,
          descriptionId,
          open,
          onOpenChange: setOpen,
          onOpenToggle,
          modal,
          allowPinchZoom
        }, { when, AdaptProvider } = (0, import_adapt.useAdaptParent)({
          Contents: React2.useCallback(
            (props2) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_portal2.PortalHost, { forwardProps: props2, name: sheetContentsName }),
            [sheetContentsName]
          )
        });
        return React2.useImperativeHandle(
          ref,
          () => ({
            open: setOpen
          }),
          [setOpen]
        ), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AdaptProvider, { children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          DialogProvider,
          {
            ...context,
            sheetBreakpoint: when,
            disableRemoveScroll,
            children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(DialogSheetController, { onOpenChange: setOpen, __scopeDialog, children })
          }
        ) });
      }),
      {
        Trigger: DialogTrigger,
        Portal: DialogPortal,
        Overlay: DialogOverlay,
        Content: DialogContent,
        Title: DialogTitle,
        Description: DialogDescription,
        Close: DialogClose,
        Sheet: import_sheet.Sheet.Controlled,
        Adapt: import_adapt.Adapt
      }
    ), SHEET_CONTENTS_NAME = "DialogSheetContents", DialogSheetContents = ({
      name,
      ...props
    }) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_portal2.PortalHost, { forwardProps: props, name });
    DialogSheetContents.displayName = SHEET_CONTENTS_NAME;
    var getSheetContentsName = ({
      scopeKey,
      contentId
    }) => `${scopeKey || contentId}SheetContents`, DialogSheetController = (props) => {
      let context = useDialogContext("DialogSheetController", props.__scopeDialog), showSheet = useShowDialogSheet(context), breakpointActive = useSheetBreakpointActive(context), getShowSheet = (0, import_core13.useGet)(showSheet);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_sheet.SheetController,
        {
          onOpenChange: (val) => {
            getShowSheet() && props.onOpenChange(val);
          },
          open: context.open,
          hidden: breakpointActive === !1,
          children: props.children
        }
      );
    }, useSheetBreakpointActive = (context) => {
      let media = (0, import_core13.useMedia)();
      return context.sheetBreakpoint ? context.sheetBreakpoint === !0 ? !0 : media[context.sheetBreakpoint] : !1;
    }, useShowDialogSheet = (context) => {
      let breakpointActive = useSheetBreakpointActive(context);
      return context.open === !1 ? !1 : breakpointActive;
    };
  }
});

// ../dialog/dist/cjs/index.native.js
var require_index_native35 = __commonJS({
  "../dialog/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Dialog_native(), module2.exports);
  }
});

// ../alert-dialog/dist/cjs/AlertDialog.native.js
var require_AlertDialog_native = __commonJS({
  "../alert-dialog/dist/cjs/AlertDialog.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), AlertDialog_exports = {};
    __export2(AlertDialog_exports, {
      AlertDialog: () => AlertDialog,
      AlertDialogAction: () => AlertDialogAction,
      AlertDialogCancel: () => AlertDialogCancel,
      AlertDialogContent: () => AlertDialogContent,
      AlertDialogDescription: () => AlertDialogDescription,
      AlertDialogOverlay: () => AlertDialogOverlay,
      AlertDialogPortal: () => AlertDialogPortal,
      AlertDialogTitle: () => AlertDialogTitle,
      AlertDialogTrigger: () => AlertDialogTrigger,
      createAlertDialogScope: () => createAlertDialogScope
    });
    module2.exports = __toCommonJS2(AlertDialog_exports);
    var import_compose_refs = require_index_native5(), import_core13 = require_index_native15(), import_create_context = require_index_native25(), import_dialog = require_index_native35(), import_use_controllable_state = require_index_native12(), React2 = __toESM2(require("react")), import_react_native4 = require("react-native"), import_jsx_runtime6 = require("react/jsx-runtime"), ROOT_NAME = "AlertDialog", [createAlertDialogContext, createAlertDialogScope] = (0, import_create_context.createContextScope)(ROOT_NAME, [
      import_dialog.createDialogScope
    ]), useDialogScope = (0, import_dialog.createDialogScope)(), TRIGGER_NAME = "AlertDialogTrigger", NativeAlertDialogTriggerFrame = (0, import_core13.styled)(import_core13.View, {
      name: TRIGGER_NAME
    }), AlertDialogTrigger = React2.forwardRef(
      (props, forwardedRef) => {
        if (props.__native) {
          let { __native, onPress, __onPress, ...rest } = props;
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            NativeAlertDialogTriggerFrame,
            {
              ...rest,
              onPress: (0, import_core13.composeEventHandlers)(onPress, __onPress)
            }
          );
        }
        let { __scopeAlertDialog, ...triggerProps } = props, dialogScope = useDialogScope(__scopeAlertDialog);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_dialog.DialogTrigger, { ...dialogScope, ...triggerProps, ref: forwardedRef });
      }
    );
    AlertDialogTrigger.displayName = TRIGGER_NAME;
    var PORTAL_NAME = "AlertDialogPortal", AlertDialogPortal = (props) => {
      let { __scopeAlertDialog, ...portalProps } = props, dialogScope = useDialogScope(__scopeAlertDialog);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_dialog.DialogPortal, { ...dialogScope, ...portalProps });
    };
    AlertDialogPortal.displayName = PORTAL_NAME;
    var OVERLAY_NAME = "AlertDialogOverlay", AlertDialogOverlayFrame = (0, import_core13.styled)(import_dialog.DialogOverlayFrame, {
      name: OVERLAY_NAME
    }), AlertDialogOverlay = AlertDialogOverlayFrame.extractable(
      React2.forwardRef(
        (props, forwardedRef) => {
          let { __scopeAlertDialog, ...overlayProps } = props, dialogScope = useDialogScope(__scopeAlertDialog);
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_dialog.DialogOverlay, { ...dialogScope, ...overlayProps, ref: forwardedRef });
        }
      )
    );
    AlertDialogOverlay.displayName = OVERLAY_NAME;
    var CONTENT_NAME = "AlertDialogContent", [AlertDialogContentProvider, useAlertDialogContentContext] = createAlertDialogContext(CONTENT_NAME), AlertDialogContent = React2.forwardRef(
      (props, forwardedRef) => {
        let { __scopeAlertDialog, children, ...contentProps } = props, dialogScope = useDialogScope(__scopeAlertDialog), contentRef = React2.useRef(null), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, contentRef), cancelRef = React2.useRef(null);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_dialog.DialogWarningProvider,
          {
            contentName: CONTENT_NAME,
            titleName: TITLE_NAME,
            docsSlug: "alert-dialog",
            children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AlertDialogContentProvider, { scope: __scopeAlertDialog, cancelRef, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(
              import_dialog.DialogContent,
              {
                role: "alertdialog",
                ...dialogScope,
                ...contentProps,
                ref: composedRefs,
                onOpenAutoFocus: (0, import_core13.composeEventHandlers)(
                  contentProps.onOpenAutoFocus,
                  (event) => {
                    var _a;
                    event.preventDefault(), import_core13.isWeb && ((_a = cancelRef.current) == null || _a.focus({ preventScroll: !0 }));
                  }
                ),
                onPointerDownOutside: (event) => event.preventDefault(),
                onInteractOutside: (event) => event.preventDefault(),
                children: [
                  /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_core13.Slottable, { children }),
                  process.env.NODE_ENV === "development" && /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(DescriptionWarning, { contentRef })
                ]
              }
            ) })
          }
        );
      }
    );
    AlertDialogContent.displayName = CONTENT_NAME;
    var TITLE_NAME = "AlertDialogTitle", AlertDialogTitle = React2.forwardRef(
      (props, forwardedRef) => {
        let { __scopeAlertDialog, ...titleProps } = props, dialogScope = useDialogScope(__scopeAlertDialog);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_dialog.DialogTitle, { ...dialogScope, ...titleProps, ref: forwardedRef });
      }
    );
    AlertDialogTitle.displayName = TITLE_NAME;
    var DESCRIPTION_NAME = "AlertDialogDescription", AlertDialogDescription = React2.forwardRef((props, forwardedRef) => {
      let { __scopeAlertDialog, ...descriptionProps } = props, dialogScope = useDialogScope(__scopeAlertDialog);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_dialog.DialogDescription, { ...dialogScope, ...descriptionProps, ref: forwardedRef });
    });
    AlertDialogDescription.displayName = DESCRIPTION_NAME;
    var ACTION_NAME = "AlertDialogAction", AlertDialogAction = React2.forwardRef(
      (props, forwardedRef) => {
        let { __scopeAlertDialog, ...actionProps } = props, dialogScope = useDialogScope(__scopeAlertDialog);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_dialog.DialogClose, { ...dialogScope, ...actionProps, ref: forwardedRef });
      }
    );
    AlertDialogAction.displayName = ACTION_NAME;
    var CANCEL_NAME = "AlertDialogCancel", AlertDialogCancel = React2.forwardRef(
      (props, forwardedRef) => {
        let { __scopeAlertDialog, ...cancelProps } = props, { cancelRef } = useAlertDialogContentContext(CANCEL_NAME, __scopeAlertDialog), dialogScope = useDialogScope(__scopeAlertDialog), ref = (0, import_compose_refs.useComposedRefs)(forwardedRef, cancelRef);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_dialog.DialogClose, { ...dialogScope, ...cancelProps, ref });
      }
    );
    AlertDialogCancel.displayName = CANCEL_NAME;
    var DescriptionWarning = ({ contentRef }) => (process.env.NODE_ENV === "development" && React2.useEffect(() => {
      var _a;
      import_core13.isWeb && (document.getElementById(
        // @ts-ignore
        // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain
        (_a = contentRef.current) == null ? void 0 : _a.getAttribute("aria-describedby")
      ) || console.warn(`\`${CONTENT_NAME}\` requires a description for the component to be accessible for screen reader users.
  
        You can add a description to the \`${CONTENT_NAME}\` by passing a \`${DESCRIPTION_NAME}\` component as a child, which also benefits sighted users by adding visible context to the dialog.
        
        Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${CONTENT_NAME}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.
        
        For more information, see https://tamagui.dev/docs/components/alert-dialog`));
    }, [contentRef]), null), AlertDialogInner = (props) => {
      let { __scopeAlertDialog, native, ...alertDialogProps } = props, dialogScope = useDialogScope(__scopeAlertDialog);
      {
        let [open, setOpen] = (0, import_use_controllable_state.useControllableState)({
          prop: props.open,
          defaultProp: props.defaultOpen || !1,
          onChange: props.onOpenChange,
          transition: !0
        }), triggerElement = null, title = "", description = "", buttons = [];
        if (forEachChildDeep(React2.Children.toArray(props.children), (child) => {
          if (!React2.isValidElement(child))
            return !1;
          let name = (0, import_core13.isTamaguiElement)(child) ? child.type.staticConfig.componentName : child.type.displayName;
          switch (name) {
            case TRIGGER_NAME:
              return triggerElement = React2.cloneElement(child, {
                __native: !0
              }), !1;
            case TITLE_NAME:
              return title = getStringChildren(child), !1;
            case DESCRIPTION_NAME:
              return description = getStringChildren(child), !1;
            case ACTION_NAME:
            case CANCEL_NAME: {
              let style = name === ACTION_NAME ? "default" : "cancel", text = getStringChildren(child), onPress = () => {
                var _a;
                let childProps = child.props;
                (_a = childProps == null ? void 0 : childProps.onPress) == null || _a.call(childProps, { native: !0 }), setOpen(!1);
              };
              return buttons.push({
                style,
                text,
                // @ts-ignore
                onPress
              }), !1;
            }
            default:
              return !0;
          }
        }), (0, import_core13.useIsomorphicLayoutEffect)(() => {
          !open || !native || (title || description) && import_react_native4.Alert.alert(title, description, buttons);
        }, [native, open]), native)
          return React2.cloneElement(triggerElement, {
            __onPress: () => {
              setOpen(!0);
            }
          });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_dialog.Dialog, { ...dialogScope, ...alertDialogProps, modal: !0 });
    };
    function forEachChildDeep(children, onChild) {
      for (let child of children)
        React2.isValidElement(child) && onChild(child) && child.props.children && forEachChildDeep(React2.Children.toArray(child.props.children), onChild);
    }
    function getStringChildren(child) {
      let string = "";
      return forEachChildDeep(React2.Children.toArray(child), (child2) => typeof child2.props.children == "string" ? (string = child2.props.children, !1) : !0), string;
    }
    var AlertDialog = (0, import_core13.withStaticProperties)(AlertDialogInner, {
      Trigger: AlertDialogTrigger,
      Portal: AlertDialogPortal,
      Overlay: AlertDialogOverlay,
      Content: AlertDialogContent,
      Action: AlertDialogAction,
      Cancel: AlertDialogCancel,
      Title: AlertDialogTitle,
      Description: AlertDialogDescription
    });
    AlertDialog.displayName = ROOT_NAME;
  }
});

// ../alert-dialog/dist/cjs/index.native.js
var require_index_native36 = __commonJS({
  "../alert-dialog/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_AlertDialog_native(), module2.exports);
  }
});

// ../image/dist/cjs/Image.native.js
var require_Image_native = __commonJS({
  "../image/dist/cjs/Image.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Image_exports = {};
    __export2(Image_exports, {
      Image: () => Image
    });
    module2.exports = __toCommonJS2(Image_exports);
    var import_core13 = require_index_native15(), import_react2 = require("react"), import_react_native4 = require("react-native"), import_jsx_runtime6 = require("react/jsx-runtime"), StyledImage = (0, import_core13.styled)(import_react_native4.Image, {
      name: "Image",
      position: "relative",
      source: { uri: "" }
    }), hasWarned = !1, Image = StyledImage.extractable(
      (0, import_react2.forwardRef)((inProps, ref) => {
        let [props, style] = (0, import_core13.usePropsAndStyle)(inProps), { src, source, ...rest } = props;
        process.env.NODE_ENV === "development" && typeof src == "string" && (typeof props.width == "string" && props.width[0] !== "$" || typeof props.height == "string" && props.height[0] !== "$") && (hasWarned || (hasWarned = !0, console.warn(
          'React Native expects a numerical width/height. If you want to use a percent you must define the "source" prop with width, height, and uri.'
        )));
        let finalSource = typeof src == "string" ? { uri: src, ...import_core13.isWeb && { width: props.width, height: props.height } } : source ?? src;
        return finalSource && typeof finalSource == "object" && (Array.isArray(finalSource) || typeof finalSource.uri == "number" && (finalSource = finalSource.uri, source && typeof source == "object" && !Array.isArray(source) && (style.width ??= source.width, style.height ??= source.height)), finalSource.default && (finalSource = finalSource.default)), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(StyledImage, { ref, source: finalSource, style, ...rest });
      })
    );
    Image.getSize = import_react_native4.Image.getSize;
    Image.getSizeWithHeaders = import_react_native4.Image.getSizeWithHeaders;
    Image.prefetch = import_react_native4.Image.prefetch;
    Image.prefetchWithMetadata = import_react_native4.Image.prefetchWithMetadata;
    Image.abortPrefetch = import_react_native4.Image.abortPrefetch;
    Image.queryCache = import_react_native4.Image.queryCache;
  }
});

// ../image/dist/cjs/index.native.js
var require_index_native37 = __commonJS({
  "../image/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Image_native(), module2.exports);
  }
});

// ../shapes/dist/cjs/getShapeSize.native.js
var require_getShapeSize_native = __commonJS({
  "../shapes/dist/cjs/getShapeSize.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getShapeSize_exports = {};
    __export2(getShapeSize_exports, {
      getShapeSize: () => getShapeSize
    });
    module2.exports = __toCommonJS2(getShapeSize_exports);
    var getShapeSize = (size2, { tokens }) => {
      let width = tokens.size[size2] ?? size2, height = tokens.size[size2] ?? size2;
      return {
        width,
        height,
        minWidth: width,
        maxWidth: width,
        maxHeight: height,
        minHeight: height
      };
    };
  }
});

// ../shapes/dist/cjs/Square.native.js
var require_Square_native = __commonJS({
  "../shapes/dist/cjs/Square.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Square_exports = {};
    __export2(Square_exports, {
      Square: () => Square
    });
    module2.exports = __toCommonJS2(Square_exports);
    var import_stacks3 = require_index_native19(), import_web = require_index_native9(), import_getShapeSize = require_getShapeSize_native(), Square = (0, import_web.styled)(import_stacks3.ThemeableStack, {
      name: "Square",
      alignItems: "center",
      justifyContent: "center",
      variants: {
        size: {
          "...size": import_getShapeSize.getShapeSize,
          ":number": import_getShapeSize.getShapeSize
        }
      }
    });
  }
});

// ../shapes/dist/cjs/Circle.native.js
var require_Circle_native = __commonJS({
  "../shapes/dist/cjs/Circle.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Circle_exports = {};
    __export2(Circle_exports, {
      Circle: () => Circle
    });
    module2.exports = __toCommonJS2(Circle_exports);
    var import_web = require_index_native9(), import_Square = require_Square_native(), Circle = (0, import_web.styled)(import_Square.Square, {
      name: "Circle",
      circular: !0
    });
  }
});

// ../shapes/dist/cjs/index.native.js
var require_index_native38 = __commonJS({
  "../shapes/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Square_native(), module2.exports);
    __reExport2(src_exports2, require_Circle_native(), module2.exports);
    __reExport2(src_exports2, require_getShapeSize_native(), module2.exports);
  }
});

// ../avatar/dist/cjs/Avatar.native.js
var require_Avatar_native = __commonJS({
  "../avatar/dist/cjs/Avatar.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Avatar_exports = {};
    __export2(Avatar_exports, {
      Avatar: () => Avatar,
      AvatarFallback: () => AvatarFallback,
      AvatarFallbackFrame: () => AvatarFallbackFrame,
      AvatarFrame: () => AvatarFrame,
      AvatarImage: () => AvatarImage,
      createAvatarScope: () => createAvatarScope
    });
    module2.exports = __toCommonJS2(Avatar_exports);
    var import_core13 = require_index_native15(), import_create_context = require_index_native25(), import_image = require_index_native37(), import_shapes = require_index_native38(), import_stacks3 = require_index_native19(), React2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), AVATAR_NAME = "Avatar", [createAvatarContext, createAvatarScope] = (0, import_create_context.createContextScope)(AVATAR_NAME), [AvatarProvider, useAvatarContext] = createAvatarContext(AVATAR_NAME), IMAGE_NAME = "AvatarImage", AvatarImage = React2.forwardRef(
      (props, forwardedRef) => {
        var _a;
        let { __scopeAvatar, src, onLoadingStatusChange = () => {
        }, ...imageProps } = props, context = useAvatarContext(IMAGE_NAME, __scopeAvatar), [status, setStatus] = React2.useState("idle"), shapeSize = (0, import_core13.getVariableValue)(
          (_a = (0, import_shapes.getShapeSize)(
            context.size,
            // @ts-expect-error
            { tokens: (0, import_core13.getTokens)() }
          )) == null ? void 0 : _a.width
        );
        return React2.useEffect(() => {
          setStatus("idle");
        }, [JSON.stringify(src)]), React2.useEffect(() => {
          onLoadingStatusChange(status), context.onImageLoadingStatusChange(status);
        }, [status]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_stacks3.YStack, { fullscreen: !0, zIndex: 1, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_image.Image,
          {
            fullscreen: !0,
            ...typeof shapeSize == "number" && !isNaN(shapeSize) && {
              width: shapeSize,
              height: shapeSize
            },
            ...imageProps,
            ref: forwardedRef,
            src,
            onError: () => {
              setStatus("error");
            },
            onLoad: () => {
              setStatus("loaded");
            }
          }
        ) });
      }
    );
    AvatarImage.displayName = IMAGE_NAME;
    var FALLBACK_NAME = "AvatarFallback", AvatarFallbackFrame = (0, import_core13.styled)(import_stacks3.YStack, {
      name: FALLBACK_NAME,
      position: "absolute",
      fullscreen: !0,
      zIndex: 0
    }), AvatarFallback = AvatarFallbackFrame.extractable(
      React2.forwardRef(
        (props, forwardedRef) => {
          let { __scopeAvatar, delayMs, ...fallbackProps } = props, context = useAvatarContext(FALLBACK_NAME, __scopeAvatar), [canRender, setCanRender] = React2.useState(delayMs === void 0);
          return React2.useEffect(() => {
            if (delayMs !== void 0) {
              let timerId = setTimeout(() => setCanRender(!0), delayMs);
              return () => clearTimeout(timerId);
            }
          }, [delayMs]), canRender && context.imageLoadingStatus !== "loaded" ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AvatarFallbackFrame, { ...fallbackProps, ref: forwardedRef }) : null;
        }
      )
    );
    AvatarFallback.displayName = FALLBACK_NAME;
    var AvatarFrame = (0, import_core13.styled)(import_shapes.Square, {
      name: AVATAR_NAME,
      position: "relative",
      overflow: "hidden"
    }), Avatar = (0, import_core13.withStaticProperties)(
      React2.forwardRef(
        (props, forwardedRef) => {
          let { __scopeAvatar, size: size2 = "$true", ...avatarProps } = props, [imageLoadingStatus, setImageLoadingStatus] = React2.useState("idle");
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            AvatarProvider,
            {
              size: size2,
              scope: __scopeAvatar,
              imageLoadingStatus,
              onImageLoadingStatusChange: setImageLoadingStatus,
              children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AvatarFrame, { size: size2, ...avatarProps, ref: forwardedRef })
            }
          );
        }
      ),
      {
        Image: AvatarImage,
        Fallback: AvatarFallback
      }
    );
    Avatar.displayName = AVATAR_NAME;
  }
});

// ../avatar/dist/cjs/index.native.js
var require_index_native39 = __commonJS({
  "../avatar/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Avatar_native(), module2.exports);
  }
});

// ../font-size/dist/cjs/getFontSize.native.js
var require_getFontSize_native = __commonJS({
  "../font-size/dist/cjs/getFontSize.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), getFontSize_exports = {};
    __export2(getFontSize_exports, {
      getFontSize: () => getFontSize,
      getFontSizeToken: () => getFontSizeToken,
      getFontSizeVariable: () => getFontSizeVariable
    });
    module2.exports = __toCommonJS2(getFontSize_exports);
    var import_core13 = require_index_native15(), getFontSize = (inSize, opts) => {
      let res = getFontSizeVariable(inSize, opts);
      return (0, import_core13.isVariable)(res) ? +res.val : res ? +res : 16;
    }, getFontSizeVariable = (inSize, opts) => {
      let token = getFontSizeToken(inSize, opts);
      return token ? (0, import_core13.getConfig)().fontsParsed[(opts == null ? void 0 : opts.font) || "$body"].size[token] : inSize;
    }, getFontSizeToken = (inSize, opts) => {
      if (typeof inSize == "number")
        return null;
      let relativeSize = (opts == null ? void 0 : opts.relativeSize) || 0, fontSize = (0, import_core13.getConfig)().fontsParsed[(opts == null ? void 0 : opts.font) || "$body"].size, size2 = inSize || ("$true" in fontSize ? "$true" : "$4"), sizeTokens = Object.keys(fontSize), foundIndex = sizeTokens.indexOf(size2);
      foundIndex === -1 && size2.endsWith(".5") && (foundIndex = sizeTokens.indexOf(size2.replace(".5", ""))), process.env.NODE_ENV === "development" && foundIndex === -1 && console.warn("No font size found", size2, opts, "in size tokens", sizeTokens);
      let tokenIndex = Math.min(
        Math.max(0, foundIndex + relativeSize),
        sizeTokens.length - 1
      );
      return sizeTokens[tokenIndex] ?? size2;
    };
  }
});

// ../font-size/dist/cjs/index.native.js
var require_index_native40 = __commonJS({
  "../font-size/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_getFontSize_native(), module2.exports);
  }
});

// ../helpers-tamagui/dist/cjs/prevent.native.js
var require_prevent_native = __commonJS({
  "../helpers-tamagui/dist/cjs/prevent.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), prevent_exports = {};
    __export2(prevent_exports, {
      prevent: () => prevent
    });
    module2.exports = __toCommonJS2(prevent_exports);
    var prevent = (e) => [e.preventDefault(), e.stopPropagation()];
  }
});

// ../helpers-tamagui/dist/cjs/useCurrentColor.native.js
var require_useCurrentColor_native = __commonJS({
  "../helpers-tamagui/dist/cjs/useCurrentColor.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useCurrentColor_exports = {};
    __export2(useCurrentColor_exports, {
      useCurrentColor: () => useCurrentColor
    });
    module2.exports = __toCommonJS2(useCurrentColor_exports);
    var import_web = require_index_native9(), useCurrentColor = (colorProp) => {
      let theme = (0, import_web.useTheme)();
      return (0, import_web.getVariable)(colorProp || theme[colorProp] || theme.color);
    };
  }
});

// ../helpers-tamagui/dist/cjs/useGetThemedIcon.native.js
var require_useGetThemedIcon_native = __commonJS({
  "../helpers-tamagui/dist/cjs/useGetThemedIcon.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useGetThemedIcon_exports = {};
    __export2(useGetThemedIcon_exports, {
      useGetThemedIcon: () => useGetThemedIcon
    });
    module2.exports = __toCommonJS2(useGetThemedIcon_exports);
    var import_react2 = require("react"), import_useCurrentColor = require_useCurrentColor_native(), useGetThemedIcon = (props) => {
      let color = (0, import_useCurrentColor.useCurrentColor)(props.color);
      return (el) => el && ((0, import_react2.isValidElement)(el) ? (0, import_react2.cloneElement)(el, {
        ...props,
        color,
        // @ts-expect-error
        ...el.props
      }) : (0, import_react2.createElement)(el, props));
    };
  }
});

// ../helpers-tamagui/dist/cjs/index.native.js
var require_index_native41 = __commonJS({
  "../helpers-tamagui/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_index_native4(), module2.exports);
    __reExport2(src_exports2, require_prevent_native(), module2.exports);
    __reExport2(src_exports2, require_useCurrentColor_native(), module2.exports);
    __reExport2(src_exports2, require_useGetThemedIcon_native(), module2.exports);
  }
});

// ../button/dist/cjs/Button.native.js
var require_Button_native = __commonJS({
  "../button/dist/cjs/Button.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Button_exports = {};
    __export2(Button_exports, {
      Button: () => Button2,
      ButtonContext: () => ButtonContext,
      ButtonFrame: () => ButtonFrame,
      ButtonIcon: () => ButtonIcon,
      ButtonNestingContext: () => ButtonNestingContext,
      ButtonText: () => ButtonText,
      buttonStaticConfig: () => buttonStaticConfig,
      useButton: () => useButton
    });
    module2.exports = __toCommonJS2(Button_exports);
    var import_font_size = require_index_native40(), import_get_button_sized2 = require_index_native18(), import_helpers_tamagui = require_index_native41(), import_stacks3 = require_index_native19(), import_text2 = require_index_native21(), import_web = require_index_native9(), import_react2 = require("react"), import_jsx_runtime6 = require("react/jsx-runtime"), ButtonContext = (0, import_web.createStyledContext)({
      // keeping these here means they work with styled() passing down color to text
      color: void 0,
      ellipse: void 0,
      fontFamily: void 0,
      fontSize: void 0,
      fontStyle: void 0,
      fontWeight: void 0,
      letterSpacing: void 0,
      maxFontSizeMultiplier: void 0,
      size: void 0,
      textAlign: void 0
    }), BUTTON_NAME = "Button", ButtonFrame = (0, import_web.styled)(import_stacks3.ThemeableStack, {
      name: BUTTON_NAME,
      tag: "button",
      context: ButtonContext,
      focusable: !0,
      role: "button",
      variants: {
        unstyled: {
          false: {
            size: "$true",
            justifyContent: "center",
            alignItems: "center",
            flexWrap: "nowrap",
            flexDirection: "row",
            cursor: "pointer",
            hoverTheme: !0,
            pressTheme: !0,
            backgrounded: !0,
            borderWidth: 1,
            borderColor: "transparent",
            focusStyle: {
              outlineColor: "$borderColorFocus",
              outlineStyle: "solid",
              outlineWidth: 2
            }
          }
        },
        variant: {
          outlined: {
            backgroundColor: "transparent",
            borderWidth: 2,
            borderColor: "$borderColor",
            hoverStyle: {
              backgroundColor: "transparent",
              borderColor: "$borderColorHover"
            },
            pressStyle: {
              backgroundColor: "transparent",
              borderColor: "$borderColorPress"
            },
            focusStyle: {
              backgroundColor: "transparent",
              borderColor: "$borderColorFocus"
            }
          }
        },
        size: {
          "...size": import_get_button_sized2.getButtonSized
        },
        disabled: {
          true: {
            pointerEvents: "none"
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), ButtonText = (0, import_web.styled)(import_text2.SizableText, {
      name: "Button",
      context: ButtonContext,
      variants: {
        unstyled: {
          false: {
            userSelect: "none",
            cursor: "pointer",
            // flexGrow 1 leads to inconsistent native style where text pushes to start of view
            flexGrow: 0,
            flexShrink: 1,
            ellipse: !0,
            color: "$color"
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), ButtonIcon = (props) => {
      let { children, scaleIcon = 1 } = props, { size: size2, color } = (0, import_react2.useContext)(ButtonContext), iconSize = (typeof size2 == "number" ? size2 * 0.5 : (0, import_font_size.getFontSize)(size2)) * scaleIcon;
      return (0, import_helpers_tamagui.useGetThemedIcon)({ size: iconSize, color })(children);
    }, ButtonComponent = ButtonFrame.styleable(function(props, ref) {
      let { props: buttonProps } = useButton(props);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(ButtonFrame, { ...buttonProps, ref });
    }), buttonStaticConfig = {
      inlineProps: /* @__PURE__ */ new Set([
        // text props go here (can't really optimize them, but we never fully extract button anyway)
        // may be able to remove this entirely, as the compiler / runtime have gotten better
        "color",
        "fontWeight",
        "fontSize",
        "fontFamily",
        "fontStyle",
        "letterSpacing",
        "textAlign",
        "unstyled"
      ])
    }, Button2 = (0, import_web.withStaticProperties)(ButtonComponent, {
      Text: ButtonText,
      Icon: ButtonIcon
    }), ButtonNestingContext = (0, import_react2.createContext)(!1);
    function useButton({ textProps, ...propsIn }, { Text: Text3 = Button2.Text } = { Text: Button2.Text }) {
      let isNested = (0, import_react2.useContext)(ButtonNestingContext), didFinishSSR = (0, import_web.useDidFinishSSR)(), propsActive = (0, import_web.useProps)(propsIn), {
        icon,
        iconAfter,
        space,
        spaceFlex,
        scaleIcon = 1,
        scaleSpace = 0.66,
        separator,
        noTextWrap,
        fontFamily,
        fontSize
      } = propsActive, size2 = propsActive.size || (propsActive.unstyled ? void 0 : "$true"), iconSize = (typeof size2 == "number" ? size2 * 0.5 : (0, import_font_size.getFontSize)(size2)) * scaleIcon, getThemedIcon = (0, import_helpers_tamagui.useGetThemedIcon)({
        size: iconSize,
        color: propsActive.color
      }), [themedIcon, themedIconAfter] = [icon, iconAfter].map(getThemedIcon), spaceSize = space ?? (0, import_web.getVariableValue)(iconSize) * scaleSpace, contents = noTextWrap ? [propsIn.children] : (0, import_text2.wrapChildrenInText)(
        Text3,
        { children: propsIn.children, fontFamily, fontSize, textProps },
        Text3 === ButtonText && propsActive.unstyled !== !0 ? {
          unstyled: !1,
          size: size2
        } : void 0
      ), inner = (0, import_web.spacedChildren)({
        // a bit arbitrary but scaling to font size is necessary so long as button does
        space: spaceSize,
        spaceFlex,
        separator,
        direction: propsActive.flexDirection === "column" || propsActive.flexDirection === "column-reverse" ? "vertical" : "horizontal",
        children: [themedIcon, ...contents, themedIconAfter]
      }), tag = isNested ? "span" : (
        // defaults to <a /> when accessibilityRole = link
        // see https://github.com/tamagui/tamagui/issues/505
        propsActive.accessibilityRole === "link" ? "a" : void 0
      ), { iconAfter: _1, icon: _2, noTextWrap: _3, ...restProps } = propsIn, props = {
        size: size2,
        ...propsIn.disabled && {
          // in rnw - false still has keyboard tabIndex, undefined = not actually focusable
          focusable: void 0,
          // even with tabIndex unset, it will keep focusStyle on web so disable it here
          focusStyle: {
            borderColor: "$background"
          }
        },
        ...tag && {
          tag
        },
        ...restProps,
        children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(ButtonNestingContext.Provider, { value: !0, children: inner }),
        // forces it to be a runtime pressStyle so it passes through context text colors
        disableClassName: didFinishSSR
      };
      return {
        spaceSize,
        isNested,
        props
      };
    }
  }
});

// ../button/dist/cjs/index.native.js
var require_index_native42 = __commonJS({
  "../button/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Button_native(), module2.exports);
  }
});

// ../card/dist/cjs/Card.native.js
var require_Card_native = __commonJS({
  "../card/dist/cjs/Card.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Card_exports = {};
    __export2(Card_exports, {
      Card: () => Card,
      CardBackground: () => CardBackground,
      CardFooter: () => CardFooter,
      CardFrame: () => CardFrame,
      CardHeader: () => CardHeader
    });
    module2.exports = __toCommonJS2(Card_exports);
    var import_stacks3 = require_index_native19(), import_web = require_index_native9(), CardContext = (0, import_web.createStyledContext)({
      size: "$true"
    }), CardFrame = (0, import_web.styled)(import_stacks3.ThemeableStack, {
      name: "Card",
      context: CardContext,
      variants: {
        unstyled: {
          false: {
            size: "$true",
            backgroundColor: "$background",
            position: "relative"
          }
        },
        size: {
          "...size": (val, { tokens }) => ({
            borderRadius: tokens.radius[val] ?? val
          })
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), CardHeader = (0, import_web.styled)(import_stacks3.ThemeableStack, {
      name: "CardHeader",
      context: CardContext,
      variants: {
        unstyled: {
          false: {
            zIndex: 10,
            backgroundColor: "transparent",
            marginBottom: "auto"
          }
        },
        size: {
          "...size": (val, { tokens }) => ({
            padding: tokens.space[val] ?? val
          })
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), CardFooter = (0, import_web.styled)(CardHeader, {
      name: "CardFooter",
      variants: {
        unstyled: {
          false: {
            zIndex: 5,
            flexDirection: "row",
            marginTop: "auto",
            marginBottom: 0
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), CardBackground = (0, import_web.styled)(import_stacks3.ThemeableStack, {
      name: "CardBackground",
      variants: {
        unstyled: {
          false: {
            zIndex: 0,
            fullscreen: !0,
            overflow: "hidden",
            pointerEvents: "none",
            padding: 0
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), Card = (0, import_web.withStaticProperties)(CardFrame, {
      Header: CardHeader,
      Footer: CardFooter,
      Background: CardBackground
    });
  }
});

// ../card/dist/cjs/index.native.js
var require_index_native43 = __commonJS({
  "../card/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Card_native(), module2.exports);
  }
});

// ../focusable/dist/cjs/registerFocusable.native.js
var require_registerFocusable_native = __commonJS({
  "../focusable/dist/cjs/registerFocusable.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), registerFocusable_native_exports = {};
    __export2(registerFocusable_native_exports, {
      focusFocusable: () => focusFocusable,
      registerFocusable: () => registerFocusable,
      unregisterFocusable: () => unregisterFocusable
    });
    module2.exports = __toCommonJS2(registerFocusable_native_exports);
    var InputsMap = /* @__PURE__ */ new Map(), registerFocusable = (id, input) => (process.env.NODE_ENV === "development" && InputsMap.has(id) && console.warn(`Warning, duplicate ID for input: ${id}`), InputsMap.set(id, input), () => {
      InputsMap.delete(id);
    }), unregisterFocusable = (id) => {
      InputsMap.delete(id);
    }, focusFocusable = (id, select = !1) => {
      let input = InputsMap.get(id);
      if (!input) {
        process.env.NODE_ENV === "development" && console.warn("No input found for id", id);
        return;
      }
      select || !input.focusAndSelect ? input.focus() : input.focusAndSelect();
    };
  }
});

// ../focusable/dist/cjs/focusableInputHOC.native.js
var require_focusableInputHOC_native = __commonJS({
  "../focusable/dist/cjs/focusableInputHOC.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), focusableInputHOC_exports = {};
    __export2(focusableInputHOC_exports, {
      focusableInputHOC: () => focusableInputHOC,
      useFocusable: () => useFocusable2
    });
    module2.exports = __toCommonJS2(focusableInputHOC_exports);
    var import_compose_refs = require_index_native5(), import_web = require_index_native9(), import_react2 = require("react"), import_registerFocusable = require_registerFocusable_native(), import_jsx_runtime6 = require("react/jsx-runtime");
    function useFocusable2({
      isInput,
      props,
      ref
    }) {
      let { id, onChangeText, value, defaultValue } = props, inputValue = (0, import_react2.useRef)(value || defaultValue || ""), unregisterFocusable = (0, import_react2.useRef)(), inputRef = (0, import_react2.useCallback)(
        (input) => {
          var _a;
          id && input && ((_a = unregisterFocusable.current) == null || _a.call(unregisterFocusable), unregisterFocusable.current = (0, import_registerFocusable.registerFocusable)(id, {
            focus: input.focus,
            ...isInput && {
              // react-native doesn't support programmatic .select()
              focusAndSelect() {
                input.focus(), input.setSelection && typeof inputValue.current == "string" && input.setSelection(0, inputValue.current.length);
              }
            }
          }));
        },
        [isInput, id]
      ), combinedRefs = (0, import_compose_refs.composeRefs)(ref, inputRef);
      return (0, import_react2.useEffect)(() => () => {
        var _a;
        (_a = unregisterFocusable.current) == null || _a.call(unregisterFocusable);
      }, []), {
        ref: combinedRefs,
        onChangeText: (0, import_web.useEvent)((value2) => {
          inputValue.current = value2, onChangeText == null || onChangeText(value2);
        })
      };
    }
    function focusableInputHOC(Component) {
      return Component.styleable((props, ref) => {
        var _a;
        let isInput = (_a = Component.staticConfig) == null ? void 0 : _a.isInput, { ref: combinedRef, onChangeText } = useFocusable2({
          ref,
          props,
          isInput
        }), finalProps = isInput ? {
          ...props,
          onChangeText
        } : props;
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Component, { ref: combinedRef, ...finalProps });
      });
    }
  }
});

// ../focusable/dist/cjs/focusable.native.js
var require_focusable_native = __commonJS({
  "../focusable/dist/cjs/focusable.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), focusable_exports = {};
    module2.exports = __toCommonJS2(focusable_exports);
  }
});

// ../focusable/dist/cjs/index.native.js
var require_index_native44 = __commonJS({
  "../focusable/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_registerFocusable_native(), module2.exports);
    __reExport2(src_exports2, require_focusableInputHOC_native(), module2.exports);
    __reExport2(src_exports2, require_focusable_native(), module2.exports);
  }
});

// ../label/dist/cjs/Label.native.js
var require_Label_native = __commonJS({
  "../label/dist/cjs/Label.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Label_exports = {};
    __export2(Label_exports, {
      Label: () => Label,
      LabelFrame: () => LabelFrame,
      useLabelContext: () => useLabelContext
    });
    module2.exports = __toCommonJS2(Label_exports);
    var import_compose_refs = require_index_native5(), import_create_context = require_index_native25(), import_focusable2 = require_index_native44(), import_get_button_sized2 = require_index_native18(), import_get_font_sized2 = require_index_native20(), import_text2 = require_index_native21(), import_web = require_index_native9(), React2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), NAME = "Label", [LabelProvider, useLabelContextImpl] = (0, import_create_context.createContext)(NAME, {
      id: void 0,
      controlRef: { current: null }
    }), LabelFrame = (0, import_web.styled)(import_text2.SizableText, {
      name: "Label",
      tag: "label",
      variants: {
        unstyled: {
          false: {
            size: "$true",
            color: "$color",
            backgroundColor: "transparent",
            display: "flex",
            alignItems: "center",
            userSelect: "none",
            cursor: "default",
            pressStyle: {
              color: "$colorPress"
            }
          }
        },
        size: {
          "...size": (val, extras) => {
            let buttonStyle = (0, import_get_button_sized2.getButtonSized)(val, extras), buttonHeight = buttonStyle == null ? void 0 : buttonStyle.height;
            return {
              ...(0, import_get_font_sized2.getFontSized)(val, extras),
              lineHeight: buttonHeight ? extras.tokens.size[buttonHeight] : void 0
            };
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), LabelComponent = React2.forwardRef(
      (props, forwardedRef) => {
        let { htmlFor, id: idProp, ...labelProps } = props, controlRef = React2.useRef(null), ref = React2.useRef(null), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, ref), backupId = React2.useId(), id = idProp ?? backupId;
        return import_web.isWeb && React2.useEffect(() => {
          if (htmlFor) {
            let element = document.getElementById(htmlFor);
            if (ref.current && element) {
              let getAriaLabel = () => element.getAttribute("aria-labelledby"), ariaLabelledBy = [id, getAriaLabel()].filter(Boolean).join(" ");
              return element.setAttribute("aria-labelledby", ariaLabelledBy), controlRef.current = element, () => {
                var _a;
                if (!id)
                  return;
                let ariaLabelledBy2 = (_a = getAriaLabel()) == null ? void 0 : _a.replace(id, "");
                ariaLabelledBy2 === "" ? element.removeAttribute("aria-labelledby") : ariaLabelledBy2 && element.setAttribute("aria-labelledby", ariaLabelledBy2);
              };
            }
          }
        }, [id, htmlFor]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(LabelProvider, { id, controlRef, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          LabelFrame,
          {
            id,
            htmlFor,
            ...labelProps,
            ref: composedRefs,
            onMouseDown: (event) => {
              var _a;
              (_a = props.onMouseDown) == null || _a.call(props, event), !event.defaultPrevented && event.detail > 1 && event.preventDefault();
            },
            onPress: (event) => {
              var _a;
              if ((_a = props.onPress) == null || _a.call(props, event), import_web.isWeb) {
                if (htmlFor || !controlRef.current || event.defaultPrevented)
                  return;
                let isClickingControl = controlRef.current.contains(
                  event.target
                ), isUserClick = event.isTrusted === !0;
                !isClickingControl && isUserClick && (controlRef.current.click(), controlRef.current.focus());
              } else
                props.htmlFor && (0, import_focusable2.focusFocusable)(props.htmlFor);
            }
          }
        ) });
      }
    );
    LabelComponent.displayName = NAME;
    var Label = LabelFrame.extractable((0, import_web.themeable)(LabelComponent), {
      neverFlatten: !0
    }), useLabelContext = (element) => {
      let context = useLabelContextImpl("LabelConsumer"), { controlRef } = context;
      return React2.useEffect(() => {
        element && (controlRef.current = element);
      }, [element, controlRef]), context.id;
    };
  }
});

// ../label/dist/cjs/index.native.js
var require_index_native45 = __commonJS({
  "../label/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Label_native(), module2.exports);
  }
});

// ../use-previous/dist/cjs/index.native.js
var require_index_native46 = __commonJS({
  "../use-previous/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      usePrevious: () => usePrevious
    });
    module2.exports = __toCommonJS2(src_exports2);
    var import_react2 = require("react");
    function usePrevious(value) {
      let ref = (0, import_react2.useRef)({ value, previous: value });
      return (0, import_react2.useMemo)(() => (ref.current.value !== value && (ref.current.previous = ref.current.value, ref.current.value = value), ref.current.previous), [value]);
    }
  }
});

// ../checkbox/dist/cjs/Checkbox.native.js
var require_Checkbox_native = __commonJS({
  "../checkbox/dist/cjs/Checkbox.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Checkbox_exports = {};
    __export2(Checkbox_exports, {
      BubbleInput: () => BubbleInput,
      Checkbox: () => Checkbox2,
      CheckboxFrame: () => CheckboxFrame,
      CheckboxStyledContext: () => CheckboxStyledContext,
      createCheckboxScope: () => createCheckboxScope,
      getState: () => getState,
      isIndeterminate: () => isIndeterminate
    });
    module2.exports = __toCommonJS2(Checkbox_exports);
    var import_core13 = require_index_native15(), import_create_context = require_index_native25(), import_focusable2 = require_index_native44(), import_font_size = require_index_native40(), import_get_token2 = require_index_native17(), import_helpers_tamagui = require_index_native41(), import_label = require_index_native45(), import_stacks3 = require_index_native19(), import_use_controllable_state = require_index_native12(), import_use_previous = require_index_native46(), React2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), CheckboxStyledContext = (0, import_core13.createStyledContext)({
      size: "$true",
      scaleIcon: 1
    });
    function isIndeterminate(checked) {
      return checked === "indeterminate";
    }
    function getState(checked) {
      return isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
    }
    var BubbleInput = (props) => {
      let { checked, bubbles = !0, control, isHidden, ...inputProps } = props, ref = React2.useRef(null), prevChecked = (0, import_use_previous.usePrevious)(checked);
      return React2.useEffect(() => {
        let input = ref.current, inputProto = window.HTMLInputElement.prototype, setChecked = Object.getOwnPropertyDescriptor(
          inputProto,
          "checked"
        ).set;
        if (prevChecked !== checked && setChecked) {
          let event = new Event("click", { bubbles });
          input.indeterminate = isIndeterminate(checked), setChecked.call(input, isIndeterminate(checked) ? !1 : checked), input.dispatchEvent(event);
        }
      }, [prevChecked, checked, bubbles]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        "input",
        {
          type: "checkbox",
          defaultChecked: isIndeterminate(checked) ? !1 : checked,
          ...inputProps,
          tabIndex: -1,
          ref,
          "aria-hidden": isHidden,
          style: {
            ...isHidden ? {
              // ...controlSize,
              position: "absolute",
              pointerEvents: "none",
              opacity: 0,
              margin: 0
            } : {
              appearance: "auto",
              accentColor: "var(--color6)"
            },
            ...props.style
          }
        }
      );
    }, INDICATOR_NAME = "CheckboxIndicator", CheckboxIndicatorFrame = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      // use Checkbox for easier themes
      name: INDICATOR_NAME,
      context: CheckboxStyledContext
    }), CheckboxIndicator = CheckboxIndicatorFrame.extractable(
      React2.forwardRef(
        (props, forwardedRef) => {
          let {
            __scopeCheckbox,
            children: childrenProp,
            forceMount,
            disablePassStyles,
            ...indicatorProps
          } = props;
          process.env.NODE_ENV === "development" && !childrenProp && console.warn(
            "Warning: You created a Checkbox.Indicator without passing an child prop for it to use as an icon."
          );
          let context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox), styledContext = React2.useContext(CheckboxStyledContext), iconSize = (typeof styledContext.size == "number" ? styledContext.size * 0.65 : (0, import_font_size.getFontSize)(styledContext.size)) * styledContext.scaleIcon, theme = (0, import_core13.useTheme)(), getThemedIcon = (0, import_helpers_tamagui.useGetThemedIcon)({ size: iconSize, color: theme.color }), children = React2.Children.toArray(childrenProp).map((child) => disablePassStyles || !React2.isValidElement(child) ? child : getThemedIcon(child));
          return forceMount || isIndeterminate(context.state) || context.state === !0 ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            CheckboxIndicatorFrame,
            {
              "data-state": getState(context.state),
              "data-disabled": context.disabled ? "" : void 0,
              pointerEvents: "none",
              ...indicatorProps,
              ref: forwardedRef,
              children
            }
          ) : null;
        }
      )
    );
    CheckboxIndicator.displayName = INDICATOR_NAME;
    var CHECKBOX_NAME = "Checkbox", CheckboxFrame = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: CHECKBOX_NAME,
      tag: "button",
      context: CheckboxStyledContext,
      variants: {
        unstyled: {
          false: {
            size: "$true",
            backgroundColor: "$background",
            alignItems: "center",
            justifyContent: "center",
            pressTheme: !0,
            focusable: !0,
            borderWidth: 1,
            borderColor: "$borderColor",
            hoverStyle: {
              borderColor: "$borderColorHover"
            },
            focusStyle: {
              borderColor: "$borderColorFocus",
              outlineStyle: "solid",
              outlineWidth: 2,
              outlineColor: "$borderColorFocus"
            }
          }
        },
        disabled: {
          true: {
            pointerEvents: "none",
            userSelect: "none",
            cursor: "not-allowed",
            hoverStyle: {
              borderColor: "$borderColor",
              backgroundColor: "$background"
            },
            pressStyle: {
              borderColor: "$borderColor",
              backgroundColor: "$backgroundColor"
            },
            focusStyle: {
              outlineWidth: 0
            }
          }
        },
        size: {
          "...size": (val, { tokens }) => ({
            borderRadius: (0, import_core13.getVariableValue)((0, import_get_token2.getSize)(val)) / 8
          })
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), [createCheckboxContext, createCheckboxScope] = (0, import_create_context.createContextScope)(CHECKBOX_NAME), [CheckboxProvider, useCheckboxContext] = createCheckboxContext(CHECKBOX_NAME), CheckboxComponent = CheckboxFrame.styleable(function(props, forwardedRef) {
      let {
        __scopeCheckbox,
        labelledBy: ariaLabelledby,
        name,
        checked: checkedProp,
        defaultChecked,
        required,
        scaleSize = 0.45,
        sizeAdjust = 0,
        disabled,
        value = "on",
        onCheckedChange,
        native,
        scaleIcon,
        ...checkboxProps
      } = props, [button, setButton] = React2.useState(null), composedRefs = (0, import_core13.useComposedRefs)(forwardedRef, (node) => setButton(node)), hasConsumerStoppedPropagationRef = React2.useRef(!1), propsActive = (0, import_core13.useProps)(props), isFormControl = import_core13.isWeb ? button ? !!button.closest("form") : !0 : !1, [checked = !1, setChecked] = (0, import_use_controllable_state.useControllableState)({
        prop: checkedProp,
        defaultProp: defaultChecked,
        onChange: onCheckedChange
      }), styledContext = React2.useContext(CheckboxStyledContext), adjustedSize = (0, import_core13.getVariableValue)(
        (0, import_get_token2.getSize)(propsActive.size ?? (styledContext == null ? void 0 : styledContext.size) ?? "$true", {
          shift: sizeAdjust
        })
      ), size2 = scaleSize ? Math.round(adjustedSize * scaleSize) : adjustedSize, labelId = (0, import_label.useLabelContext)(button), labelledBy = ariaLabelledby || labelId;
      return React2.useEffect(() => {
        if (props.id && !disabled)
          return (0, import_focusable2.registerFocusable)(props.id, {
            focusAndSelect: () => {
              setChecked((x) => !x);
            },
            focus: () => {
            }
          });
      }, [props.id, setChecked, disabled]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(CheckboxProvider, { scope: __scopeCheckbox, state: checked, disabled, children: import_core13.isWeb && native ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        BubbleInput,
        {
          control: button,
          bubbles: !hasConsumerStoppedPropagationRef.current,
          name,
          value,
          checked,
          required,
          disabled,
          id: props.id
        }
      ) : /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          CheckboxFrame,
          {
            width: size2,
            height: size2,
            tag: "button",
            role: "checkbox",
            "aria-labelledby": labelledBy,
            "aria-checked": isIndeterminate(checked) ? "mixed" : checked,
            "aria-required": required,
            "data-state": getState(checked),
            "data-disabled": disabled ? "" : void 0,
            disabled,
            ...checkboxProps,
            ref: composedRefs,
            ...import_core13.isWeb && {
              type: "button",
              value,
              onKeyDown: (0, import_core13.composeEventHandlers)(
                props.onKeyDown,
                (event) => {
                  event.key === "Enter" && event.preventDefault();
                }
              )
            },
            onPress: (0, import_core13.composeEventHandlers)(props.onPress, (event) => {
              setChecked(
                (prevChecked) => isIndeterminate(prevChecked) ? !0 : !prevChecked
              ), isFormControl && (hasConsumerStoppedPropagationRef.current = event.isPropagationStopped(), hasConsumerStoppedPropagationRef.current || event.stopPropagation());
            }),
            children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              CheckboxStyledContext.Provider,
              {
                size: propsActive.size ?? (styledContext == null ? void 0 : styledContext.size) ?? "$true",
                scaleIcon: scaleIcon ?? (styledContext == null ? void 0 : styledContext.scaleIcon) ?? 1,
                children: propsActive.children
              }
            )
          }
        ),
        import_core13.isWeb && isFormControl ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          BubbleInput,
          {
            isHidden: !0,
            control: button,
            bubbles: !hasConsumerStoppedPropagationRef.current,
            name,
            value,
            checked,
            required,
            disabled
          }
        ) : null
      ] }) });
    }), Checkbox2 = (0, import_core13.withStaticProperties)(CheckboxComponent, {
      Indicator: CheckboxIndicator,
      Props: CheckboxStyledContext.Provider
    });
  }
});

// ../checkbox/dist/cjs/index.native.js
var require_index_native47 = __commonJS({
  "../checkbox/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Checkbox_native(), module2.exports);
  }
});

// ../form/dist/cjs/Form.native.js
var require_Form_native = __commonJS({
  "../form/dist/cjs/Form.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Form_exports = {};
    __export2(Form_exports, {
      Form: () => Form2,
      FormFrame: () => FormFrame,
      FormProvider: () => FormProvider,
      FormTrigger: () => FormTrigger,
      useFormContext: () => useFormContext
    });
    module2.exports = __toCommonJS2(Form_exports);
    var import_core13 = require_index_native15(), import_create_context = require_index_native25(), import_jsx_runtime6 = require("react/jsx-runtime"), FORM_NAME = "Form", FormFrame = (0, import_core13.styled)(import_core13.Stack, {
      name: FORM_NAME,
      tag: "form"
    }), [createFormContext] = (0, import_create_context.createContextScope)(FORM_NAME), [FormProvider, useFormContext] = createFormContext(FORM_NAME), TRIGGER_NAME = "FormTrigger", FormTriggerFrame = (0, import_core13.styled)(import_core13.View, {
      name: TRIGGER_NAME
    }), FormTrigger = FormTriggerFrame.styleable(
      (props, forwardedRef) => {
        let { __scopeForm, children, onPress, ...triggerProps } = props, context = useFormContext(TRIGGER_NAME, __scopeForm);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          FormTriggerFrame,
          {
            tag: "button",
            ...triggerProps,
            ref: forwardedRef,
            onPress: (0, import_core13.composeEventHandlers)(onPress, context.onSubmit),
            children
          }
        );
      }
    ), FormComponent = FormFrame.extractable(function({
      onSubmit,
      ...props
    }) {
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(FormProvider, { scope: props.__scopeForm, onSubmit, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(FormFrame, { ...props, onSubmit: (e) => e.preventDefault() }) });
    }), Form2 = (0, import_core13.withStaticProperties)(FormComponent, {
      Trigger: FormTrigger
    });
  }
});

// ../form/dist/cjs/index.native.js
var require_index_native48 = __commonJS({
  "../form/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Form_native(), module2.exports);
  }
});

// ../../node_modules/performant-array-to-tree/build/arrayToTree.min.js
var require_arrayToTree_min = __commonJS({
  "../../node_modules/performant-array-to-tree/build/arrayToTree.min.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      return (__assign = Object.assign || function(e) {
        for (var r, t = 1, n = arguments.length; t < n; t++)
          for (var o in r = arguments[t])
            Object.prototype.hasOwnProperty.call(r, o) && (e[o] = r[o]);
        return e;
      }).apply(this, arguments);
    }, defaultConfig = (Object.defineProperty(exports, "__esModule", { value: !0 }), { id: "id", parentId: "parentId", dataField: "data", childrenField: "children", throwIfOrphans: !1, rootParentIds: { "": !(exports.countNodes = exports.arrayToTree = void 0) }, nestedIds: !0, assign: !1 });
    function arrayToTree(c, e) {
      e === void 0 && (e = {});
      for (var r, t = __assign(__assign({}, defaultConfig), e), n = [], o = {}, a = t.throwIfOrphans ? /* @__PURE__ */ new Set() : null, s = 0, h = c; s < h.length; s++) {
        var i = h[s], d = t.nestedIds ? getNestedProperty(i, t.id) : i[t.id], l = t.nestedIds ? getNestedProperty(i, t.parentId) : i[t.parentId];
        if (t.rootParentIds[d])
          throw new Error("The item array contains a node whose parentId both exists in another node and is in " + '`rootParentIds` (`itemId`: "'.concat(d, '", `rootParentIds`: ').concat(Object.keys(t.rootParentIds).map(function(e2) {
            return '"'.concat(e2, '"');
          }).join(", "), ")."));
        Object.prototype.hasOwnProperty.call(o, d) || (o[d] = ((r = {})[t.childrenField] = [], r)), a && a.delete(d), t.dataField ? o[d][t.dataField] = i : t.assign ? o[d] = Object.assign(i, ((r = {})[t.childrenField] = o[d][t.childrenField], r)) : o[d] = __assign(__assign({}, i), ((i = {})[t.childrenField] = o[d][t.childrenField], i)), i = o[d], l == null || t.rootParentIds[l] ? n.push(i) : (Object.prototype.hasOwnProperty.call(o, l) || (o[l] = ((d = {})[t.childrenField] = [], d), a && a.add(l)), o[l][t.childrenField].push(i));
      }
      if (a != null && a.size)
        throw new Error("The items array contains orphans that point to the following parentIds: " + "[".concat(Array.from(a), "]. These parentIds do not exist in the items array. Hint: prevent orphans to result ") + "in an error by passing the following option: { throwIfOrphans: false }");
      if (t.throwIfOrphans && countNodes(n, t.childrenField) < Object.keys(o).length)
        throw new Error("The items array contains nodes with a circular parent/child relationship.");
      return n;
    }
    function countNodes(e, t) {
      return e.reduce(function(e2, r) {
        return e2 + 1 + (r[t] && countNodes(r[t], t));
      }, 0);
    }
    function getNestedProperty(e, r) {
      return r.split(".").reduce(function(e2, r2) {
        return e2 && e2[r2];
      }, e);
    }
    exports.arrayToTree = arrayToTree, exports.countNodes = countNodes;
  }
});

// ../../node_modules/reforest/node_modules/zustand/esm/vanilla.mjs
var import_meta, createStoreImpl, createStore, init_vanilla = __esm({
  "../../node_modules/reforest/node_modules/zustand/esm/vanilla.mjs"() {
    import_meta = {}, createStoreImpl = (createState) => {
      let state, listeners = /* @__PURE__ */ new Set(), setState = (partial, replace) => {
        let nextState = typeof partial == "function" ? partial(state) : partial;
        if (!Object.is(nextState, state)) {
          let previousState = state;
          state = replace ?? typeof nextState != "object" ? nextState : Object.assign({}, state, nextState), listeners.forEach((listener) => listener(state, previousState));
        }
      }, getState = () => state, api = { setState, getState, subscribe: (listener) => (listeners.add(listener), () => listeners.delete(listener)), destroy: () => {
        (import_meta.env ? import_meta.env.MODE : void 0) !== "production" && console.warn(
          "[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."
        ), listeners.clear();
      } };
      return state = createState(setState, getState, api), api;
    }, createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;
  }
});

// ../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js
var require_use_sync_external_store_shim_native_production_min = __commonJS({
  "../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js"(exports) {
    "use strict";
    var e = require("react");
    function h(a, b) {
      return a === b && (a !== 0 || 1 / a === 1 / b) || a !== a && b !== b;
    }
    var k = typeof Object.is == "function" ? Object.is : h, l = e.useState, m = e.useEffect, n = e.useLayoutEffect, p = e.useDebugValue;
    function q(a, b) {
      var d = b(), f = l({ inst: { value: d, getSnapshot: b } }), c = f[0].inst, g = f[1];
      return n(function() {
        c.value = d, c.getSnapshot = b, r(c) && g({ inst: c });
      }, [a, d, b]), m(function() {
        return r(c) && g({ inst: c }), a(function() {
          r(c) && g({ inst: c });
        });
      }, [a]), p(d), d;
    }
    function r(a) {
      var b = a.getSnapshot;
      a = a.value;
      try {
        var d = b();
        return !k(a, d);
      } catch {
        return !0;
      }
    }
    exports.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : q;
  }
});

// ../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.native.development.js
var require_use_sync_external_store_shim_native_development = __commonJS({
  "../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.native.development.js"(exports) {
    "use strict";
    process.env.NODE_ENV !== "production" && function() {
      "use strict";
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var React2 = require("react"), ReactSharedInternals = React2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function error(format) {
        {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
            args[_key2 - 1] = arguments[_key2];
          printWarning("error", format, args);
        }
      }
      function printWarning(level, format, args) {
        {
          var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame, stack = ReactDebugCurrentFrame.getStackAddendum();
          stack !== "" && (format += "%s", args = args.concat([stack]));
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format), Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      function is(x, y) {
        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
      }
      var objectIs = typeof Object.is == "function" ? Object.is : is, useState = React2.useState, useEffect = React2.useEffect, useLayoutEffect = React2.useLayoutEffect, useDebugValue2 = React2.useDebugValue, didWarnOld18Alpha = !1, didWarnUncachedGetSnapshot = !1;
      function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        didWarnOld18Alpha || React2.startTransition !== void 0 && (didWarnOld18Alpha = !0, error("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."));
        var value = getSnapshot();
        if (!didWarnUncachedGetSnapshot) {
          var cachedValue = getSnapshot();
          objectIs(value, cachedValue) || (error("The result of getSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0);
        }
        var _useState = useState({
          inst: {
            value,
            getSnapshot
          }
        }), inst = _useState[0].inst, forceUpdate = _useState[1];
        return useLayoutEffect(function() {
          inst.value = value, inst.getSnapshot = getSnapshot, checkIfSnapshotChanged(inst) && forceUpdate({
            inst
          });
        }, [subscribe, value, getSnapshot]), useEffect(function() {
          checkIfSnapshotChanged(inst) && forceUpdate({
            inst
          });
          var handleStoreChange = function() {
            checkIfSnapshotChanged(inst) && forceUpdate({
              inst
            });
          };
          return subscribe(handleStoreChange);
        }, [subscribe]), useDebugValue2(value), value;
      }
      function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot, prevValue = inst.value;
        try {
          var nextValue = latestGetSnapshot();
          return !objectIs(prevValue, nextValue);
        } catch {
          return !0;
        }
      }
      var shim = useSyncExternalStore, useSyncExternalStore$1 = React2.useSyncExternalStore !== void 0 ? React2.useSyncExternalStore : shim;
      exports.useSyncExternalStore = useSyncExternalStore$1, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }
});

// ../../node_modules/use-sync-external-store/shim/index.native.js
var require_index_native49 = __commonJS({
  "../../node_modules/use-sync-external-store/shim/index.native.js"(exports, module2) {
    "use strict";
    process.env.NODE_ENV === "production" ? module2.exports = require_use_sync_external_store_shim_native_production_min() : module2.exports = require_use_sync_external_store_shim_native_development();
  }
});

// ../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js
var require_with_selector_production_min = __commonJS({
  "../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js"(exports) {
    "use strict";
    var h = require("react"), n = require_index_native49();
    function p(a, b) {
      return a === b && (a !== 0 || 1 / a === 1 / b) || a !== a && b !== b;
    }
    var q = typeof Object.is == "function" ? Object.is : p, r = n.useSyncExternalStore, t = h.useRef, u = h.useEffect, v = h.useMemo, w = h.useDebugValue;
    exports.useSyncExternalStoreWithSelector = function(a, b, e, l, g) {
      var c = t(null);
      if (c.current === null) {
        var f = { hasValue: !1, value: null };
        c.current = f;
      } else
        f = c.current;
      c = v(function() {
        function a2(a3) {
          if (!c2) {
            if (c2 = !0, d2 = a3, a3 = l(a3), g !== void 0 && f.hasValue) {
              var b2 = f.value;
              if (g(b2, a3))
                return k = b2;
            }
            return k = a3;
          }
          if (b2 = k, q(d2, a3))
            return b2;
          var e2 = l(a3);
          return g !== void 0 && g(b2, e2) ? b2 : (d2 = a3, k = e2);
        }
        var c2 = !1, d2, k, m = e === void 0 ? null : e;
        return [function() {
          return a2(b());
        }, m === null ? void 0 : function() {
          return a2(m());
        }];
      }, [b, e, l, g]);
      var d = r(a, c[0], c[1]);
      return u(function() {
        f.hasValue = !0, f.value = d;
      }, [d]), w(d), d;
    };
  }
});

// ../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js
var require_with_selector_development = __commonJS({
  "../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js"(exports) {
    "use strict";
    process.env.NODE_ENV !== "production" && function() {
      "use strict";
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var React2 = require("react"), shim = require_index_native49();
      function is(x, y) {
        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
      }
      var objectIs = typeof Object.is == "function" ? Object.is : is, useSyncExternalStore = shim.useSyncExternalStore, useRef = React2.useRef, useEffect = React2.useEffect, useMemo = React2.useMemo, useDebugValue2 = React2.useDebugValue;
      function useSyncExternalStoreWithSelector2(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {
        var instRef = useRef(null), inst;
        instRef.current === null ? (inst = {
          hasValue: !1,
          value: null
        }, instRef.current = inst) : inst = instRef.current;
        var _useMemo = useMemo(function() {
          var hasMemo = !1, memoizedSnapshot, memoizedSelection, memoizedSelector = function(nextSnapshot) {
            if (!hasMemo) {
              hasMemo = !0, memoizedSnapshot = nextSnapshot;
              var _nextSelection = selector(nextSnapshot);
              if (isEqual !== void 0 && inst.hasValue) {
                var currentSelection = inst.value;
                if (isEqual(currentSelection, _nextSelection))
                  return memoizedSelection = currentSelection, currentSelection;
              }
              return memoizedSelection = _nextSelection, _nextSelection;
            }
            var prevSnapshot = memoizedSnapshot, prevSelection = memoizedSelection;
            if (objectIs(prevSnapshot, nextSnapshot))
              return prevSelection;
            var nextSelection = selector(nextSnapshot);
            return isEqual !== void 0 && isEqual(prevSelection, nextSelection) ? prevSelection : (memoizedSnapshot = nextSnapshot, memoizedSelection = nextSelection, nextSelection);
          }, maybeGetServerSnapshot = getServerSnapshot === void 0 ? null : getServerSnapshot, getSnapshotWithSelector = function() {
            return memoizedSelector(getSnapshot());
          }, getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? void 0 : function() {
            return memoizedSelector(maybeGetServerSnapshot());
          };
          return [getSnapshotWithSelector, getServerSnapshotWithSelector];
        }, [getSnapshot, getServerSnapshot, selector, isEqual]), getSelection = _useMemo[0], getServerSelection = _useMemo[1], value = useSyncExternalStore(subscribe, getSelection, getServerSelection);
        return useEffect(function() {
          inst.hasValue = !0, inst.value = value;
        }, [value]), useDebugValue2(value), value;
      }
      exports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector2, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }
});

// ../../node_modules/use-sync-external-store/shim/with-selector.js
var require_with_selector = __commonJS({
  "../../node_modules/use-sync-external-store/shim/with-selector.js"(exports, module2) {
    "use strict";
    process.env.NODE_ENV === "production" ? module2.exports = require_with_selector_production_min() : module2.exports = require_with_selector_development();
  }
});

// ../../node_modules/reforest/node_modules/zustand/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  create: () => create,
  createStore: () => createStore,
  default: () => react,
  useStore: () => useStore
});
function useStore(api, selector = api.getState, equalityFn) {
  process.env.NODE_ENV !== "production" && equalityFn && !didWarnAboutEqualityFn && (console.warn(
    "[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"
  ), didWarnAboutEqualityFn = !0);
  let slice = useSyncExternalStoreWithSelector(
    api.subscribe,
    api.getState,
    api.getServerState || api.getState,
    selector,
    equalityFn
  );
  return (0, import_react.useDebugValue)(slice), slice;
}
var import_react, import_with_selector, useSyncExternalStoreWithSelector, didWarnAboutEqualityFn, createImpl, create, react, init_esm = __esm({
  "../../node_modules/reforest/node_modules/zustand/esm/index.js"() {
    init_vanilla();
    init_vanilla();
    import_react = require("react"), import_with_selector = __toESM(require_with_selector()), { useSyncExternalStoreWithSelector } = import_with_selector.default, didWarnAboutEqualityFn = !1;
    createImpl = (createState) => {
      process.env.NODE_ENV !== "production" && typeof createState != "function" && console.warn(
        "[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`."
      );
      let api = typeof createState == "function" ? createStore(createState) : createState, useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);
      return Object.assign(useBoundStore, api), useBoundStore;
    }, create = (createState) => createState ? createImpl(createState) : createImpl, react = (createState) => (process.env.NODE_ENV !== "production" && console.warn(
      "[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`."
    ), create(createState));
  }
});

// ../../node_modules/reforest/dist/index.js
var require_dist = __commonJS({
  "../../node_modules/reforest/dist/index.js"(exports, module2) {
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      cleanAndSortTree: () => cleanAndSortTree,
      compareIndexPaths: () => compareIndexPaths,
      flattenChildren: () => flattenChildren,
      mapToChildren: () => mapToChildren,
      parseIndexPath: () => parseIndexPath,
      sortMapByIndexPath: () => sortMapByIndexPath,
      useIndex: () => useIndex,
      useIndexedChildren: () => useIndexedChildren,
      usePrerender: () => usePrerender,
      useRovingIndex: () => useRovingIndex,
      useTree: () => useTree,
      useTreeId: () => useTreeId,
      useTreeNode: () => useTreeNode,
      useTreeState: () => useTreeState
    });
    module2.exports = __toCommonJS2(src_exports2);
    var React3 = __toESM2(require("react")), React2 = __toESM2(require("react")), PrerenderContext = React2.createContext(!1);
    PrerenderContext.displayName = "PrerenderContext";
    var MaxIndexContext = React2.createContext([]);
    MaxIndexContext.displayName = "MaxIndexContext";
    var IndexContext = React2.createContext(null);
    IndexContext.displayName = "IndexContext";
    var TreeStateContext = React2.createContext(null);
    TreeStateContext.displayName = "TreeStateContext";
    var React22 = __toESM2(require("react")), import_performant_array_to_tree = require_arrayToTree_min(), isServer2 = typeof window > "u", useIsomorphicLayoutEffect2 = isServer2 ? React22.useEffect : React22.useLayoutEffect;
    function parseIndexPath(indexPathString) {
      return indexPathString.split(".").map((index) => parseInt(index, 10));
    }
    function compareIndexPaths(a = "", b = "") {
      var _a, _b;
      let aArray = a.split(".").map(Number), bArray = b.split(".").map(Number);
      if (aArray.includes(NaN) || bArray.includes(NaN))
        throw new Error("Version contains parts that are not numbers");
      let maxLength = Math.max(a.length, b.length);
      for (let index = 0; index < maxLength; index++) {
        let difference = ((_a = aArray[index]) != null ? _a : 0) - ((_b = bArray[index]) != null ? _b : 0);
        if (difference !== 0)
          return difference > 0 ? 1 : -1;
      }
      return 0;
    }
    function cleanAndSortTree(tree) {
      var _a;
      return ((_a = tree.children) == null ? void 0 : _a.length) > 0 ? (tree.children.sort((a, b) => compareIndexPaths(a.indexPathString, b.indexPathString)), {
        ...tree.data,
        children: tree.children.map(cleanAndSortTree)
      }) : tree.data;
    }
    function mapToChildren(dataMap) {
      let parsedValues = Array.from(dataMap.entries()).map(([indexPathString, data]) => {
        let parentIndexPathString = parseIndexPath(indexPathString).slice(0, -1).join(".");
        return {
          data,
          parentId: parentIndexPathString,
          id: indexPathString
        };
      }), tree = (0, import_performant_array_to_tree.arrayToTree)(parsedValues, { dataField: null }), cleanedTree = cleanAndSortTree({ children: tree });
      return cleanedTree ? cleanedTree.children : [];
    }
    function sortMapByIndexPath(treeMap) {
      let sortedEntries = Array.from(treeMap.entries()).sort((a, b) => compareIndexPaths(a[0], b[0]));
      return new Map(sortedEntries);
    }
    function flattenChildren(children) {
      return children.flatMap(
        (child) => child.children ? flattenChildren(child.children) : [child]
      );
    }
    function useIndex() {
      let maxIndexPath = React3.useContext(MaxIndexContext), indexPathString = React3.useContext(IndexContext);
      return React3.useMemo(() => {
        if (indexPathString === null)
          return null;
        let indexPath = parseIndexPath(indexPathString), maxIndex = maxIndexPath[maxIndexPath.length - 1], index = indexPath[indexPath.length - 1];
        return {
          maxIndex,
          maxIndexPath,
          index,
          indexPath,
          indexPathString,
          isFirst: index === 0,
          isLast: index === maxIndex,
          isEven: index % 2 === 0,
          isOdd: Math.abs(index % 2) === 1
        };
      }, [maxIndexPath, indexPathString]);
    }
    function useIndexedChildren(children) {
      let parentMaxIndexPath = React3.useContext(MaxIndexContext), indexPathString = React3.useContext(IndexContext), childrenCount = React3.Children.count(children), maxIndexPath = React3.useMemo(
        () => parentMaxIndexPath.concat(childrenCount - 1),
        [childrenCount]
      );
      return /* @__PURE__ */ React3.createElement(MaxIndexContext.Provider, { value: maxIndexPath }, React3.Children.map(
        children,
        (child, index) => React3.isValidElement(child) ? /* @__PURE__ */ React3.createElement(
          IndexContext.Provider,
          {
            key: child.key,
            value: indexPathString ? `${indexPathString}.${index.toString()}` : index.toString()
          },
          child
        ) : child
      ));
    }
    var React4 = __toESM2(require("react"));
    function useRovingIndex({
      contain = !0,
      defaultIndex = 0,
      maxIndex = 1 / 0,
      wrap = !1
    }) {
      let [activeIndex, setLocalActiveIndex] = React4.useState(defaultIndex), getNextIndex = React4.useCallback(
        (nextIndex) => wrap ? (nextIndex % maxIndex + maxIndex) % maxIndex : contain ? nextIndex > maxIndex ? maxIndex : nextIndex < 0 ? 0 : nextIndex : nextIndex,
        [maxIndex, wrap]
      ), moveActiveIndex = React4.useCallback(
        (amountToMove) => {
          setLocalActiveIndex((currentIndex) => getNextIndex(currentIndex + amountToMove));
        },
        [getNextIndex]
      ), setActiveIndex = React4.useCallback(
        (nextIndex) => {
          setLocalActiveIndex(getNextIndex(nextIndex));
        },
        [getNextIndex]
      ), moveBackward = React4.useCallback(() => moveActiveIndex(-1), [moveActiveIndex]), moveForward = React4.useCallback(() => moveActiveIndex(1), [moveActiveIndex]);
      return {
        activeIndex,
        moveActiveIndex,
        setActiveIndex,
        moveBackward,
        moveForward,
        moveBackwardDisabled: activeIndex <= 0,
        moveForwardDisabled: activeIndex >= maxIndex
      };
    }
    var React5 = __toESM2(require("react")), import_zustand = (init_esm(), __toCommonJS(esm_exports));
    function useTreeState(selector) {
      let treeStateContext = React5.useContext(TreeStateContext), [treeState] = React5.useState(
        () => treeStateContext || (0, import_zustand.create)((set, get) => ({
          treeMap: /* @__PURE__ */ new Map(),
          prerenderedTreeIds: /* @__PURE__ */ new Map(),
          shouldPrerender: !0,
          setTreeData: (id, data) => {
            let { treeMap } = get();
            treeMap.set(id, data), set({ treeMap: sortMapByIndexPath(treeMap) });
          },
          deleteTreeData: (id) => {
            let { treeMap } = get();
            treeMap.delete(id), set({ treeMap: sortMapByIndexPath(treeMap) });
          }
        }))
      );
      return selector ? treeState(selector) : treeState;
    }
    function PrerenderTree({ children }) {
      let treeState = useTreeState(), shouldPrerender = treeState((state) => state.shouldPrerender);
      return useIsomorphicLayoutEffect2(() => {
        treeState.setState({
          prerenderedTreeIds: /* @__PURE__ */ new Map(),
          shouldPrerender: !1
        });
      }, []), shouldPrerender ? /* @__PURE__ */ React5.createElement(PrerenderContext.Provider, { value: !0 }, children) : null;
    }
    function usePrerender() {
      let isPrerender = React5.useContext(PrerenderContext);
      if (isPrerender === null)
        throw new Error("usePrerender must be used in a descendant component of useTree.");
      return isPrerender;
    }
    function useTree(children, treeState) {
      let treeStateContext = React5.useContext(TreeStateContext), treeStateLocal = useTreeState(), parsedTreeState = treeStateContext || treeState || treeStateLocal, isPrerender = React5.useContext(PrerenderContext), isRoot = treeStateContext === null, indexedChildren = useIndexedChildren(children);
      return {
        children: isRoot ? /* @__PURE__ */ React5.createElement(TreeStateContext.Provider, { value: parsedTreeState }, /* @__PURE__ */ React5.createElement(PrerenderTree, null, indexedChildren), indexedChildren) : indexedChildren,
        useStore: parsedTreeState,
        isPrerender,
        isRoot
      };
    }
    function useTreeId() {
      let treeStateContext = React5.useContext(TreeStateContext);
      if (treeStateContext === null)
        throw new Error("useTreeId must be used in a descendant component of useTree.");
      let { prerenderedTreeIds } = treeStateContext.getState(), { indexPathString } = useIndex(), generatedId = React5.useId().slice(1, -1);
      return prerenderedTreeIds.get(indexPathString) || generatedId;
    }
    function useTreeNode(treeId, getData, dependencies = []) {
      let isPrerender = React5.useContext(PrerenderContext), treeStateContext = React5.useContext(TreeStateContext);
      if (treeStateContext === null)
        throw new Error("useTreeNode must be used in a descendant component of useTree.");
      let { deleteTreeData, prerenderedTreeIds, setTreeData, treeMap } = treeStateContext.getState(), { indexPathString } = useIndex(), treeData = React5.useMemo(
        () => Object.assign({ treeId }, getData()),
        dependencies.concat(treeId)
      );
      return isPrerender ? (treeMap.set(indexPathString, treeData), prerenderedTreeIds.set(indexPathString, treeId)) : React5.useEffect(() => (setTreeData(indexPathString, treeData), () => {
        deleteTreeData(indexPathString);
      }), [indexPathString, treeData]), treeData;
    }
  }
});

// ../group/dist/cjs/Group.native.js
var require_Group_native = __commonJS({
  "../group/dist/cjs/Group.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Group_exports = {};
    __export2(Group_exports, {
      Group: () => Group,
      GroupFrame: () => GroupFrame,
      XGroup: () => XGroup,
      YGroup: () => YGroup,
      useGroupItem: () => useGroupItem
    });
    module2.exports = __toCommonJS2(Group_exports);
    var import_core13 = require_index_native15(), import_create_context = require_index_native25(), import_stacks3 = require_index_native19(), import_use_controllable_state = require_index_native12(), import_react2 = __toESM2(require("react")), import_react_native4 = require("react-native"), import_reforest = require_dist(), import_jsx_runtime6 = require("react/jsx-runtime"), GROUP_NAME = "Group", [createGroupContext, createGroupScope] = (0, import_create_context.createContextScope)(GROUP_NAME), [GroupProvider, useGroupContext] = createGroupContext(GROUP_NAME), GroupFrame = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: "GroupFrame",
      variants: {
        unstyled: {
          false: {
            size: "$true"
          }
        },
        size: (val, { tokens }) => ({
          borderRadius: tokens.radius[val] ?? val ?? tokens.radius.$true
        })
      },
      defaultVariants: {
        unstyled: !1
      }
    });
    function createGroup(verticalDefault) {
      return (0, import_core13.withStaticProperties)(
        (0, import_react2.forwardRef)((props, ref) => {
          let activeProps = (0, import_core13.useProps)(props), {
            __scopeGroup,
            children: childrenProp,
            space,
            size: size2 = "$true",
            spaceDirection,
            separator,
            scrollable,
            axis = verticalDefault ? "vertical" : "horizontal",
            orientation = axis,
            disabled: disabledProp,
            disablePassBorderRadius: disablePassBorderRadiusProp,
            borderRadius,
            forceUseItem,
            ...restProps
          } = (0, import_core13.getExpandedShorthands)(activeProps), vertical = orientation === "vertical", [itemChildrenCount, setItemChildrenCount] = (0, import_use_controllable_state.useControllableState)({
            defaultProp: forceUseItem ? 1 : 0
          }), isUsingItems = itemChildrenCount > 0, radius = borderRadius ?? (size2 ? (0, import_core13.getVariableValue)((0, import_core13.getTokens)().radius[size2]) - 1 : void 0), disablePassBorderRadius = disablePassBorderRadiusProp ?? radius === void 0, childrenArray = import_react2.Children.toArray(childrenProp), children = isUsingItems ? import_react2.Children.toArray(childrenProp).filter(import_react2.isValidElement) : childrenArray.map((child, i) => {
            if (!(0, import_react2.isValidElement)(child))
              return child;
            let disabled = child.props.disabled ?? disabledProp, isFirst = i === 0, isLast = i === childrenArray.length - 1, radiusStyles = disablePassBorderRadius === !0 ? null : getBorderRadius({
              isFirst,
              isLast,
              radius,
              vertical,
              disable: disablePassBorderRadius
            }), props2 = {
              disabled,
              ...(0, import_core13.isTamaguiElement)(child) ? radiusStyles : { style: radiusStyles }
            };
            return cloneElementWithPropOrder(child, props2);
          }), indexedChildren = (0, import_reforest.useIndexedChildren)(
            (0, import_core13.spacedChildren)({
              direction: spaceDirection,
              separator,
              // @ts-ignore
              space,
              children
            })
          ), onItemMount = import_react2.default.useCallback(
            () => setItemChildrenCount((prev) => prev + 1),
            []
          ), onItemUnmount = import_react2.default.useCallback(
            () => setItemChildrenCount((prev) => prev - 1),
            []
          );
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            GroupProvider,
            {
              disablePassBorderRadius,
              vertical: orientation === "vertical",
              radius,
              disabled: disabledProp,
              onItemMount,
              onItemUnmount,
              scope: __scopeGroup,
              children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                GroupFrame,
                {
                  ref,
                  size: size2,
                  flexDirection: orientation === "horizontal" ? "row" : "column",
                  borderRadius,
                  ...restProps,
                  children: wrapScroll({ ...activeProps, orientation }, indexedChildren)
                }
              )
            }
          );
        }),
        {
          Item: GroupItem
        }
      );
    }
    var GroupItem = (props) => {
      var _a;
      let { __scopeGroup, children, forcePlacement } = props, groupItemProps = useGroupItem(
        { disabled: (0, import_react2.isValidElement)(children) ? children.props.disabled : void 0 },
        forcePlacement,
        __scopeGroup
      );
      return (0, import_react2.isValidElement)(children) ? (0, import_core13.isTamaguiElement)(children) ? import_react2.default.cloneElement(children, groupItemProps) : import_react2.default.cloneElement(children, {
        style: {
          ...(_a = children.props) == null ? void 0 : _a.style,
          ...groupItemProps
        }
      }) : children;
    }, useGroupItem = (childrenProps, forcePlacement, __scopeGroup) => {
      let treeIndex = (0, import_reforest.useIndex)(), context = useGroupContext("GroupItem", __scopeGroup);
      if (import_react2.default.useEffect(() => (context.onItemMount(), () => {
        context.onItemUnmount();
      }), []), !treeIndex)
        throw Error("<Group.Item/> should only be used within a <Group/>");
      let isFirst = forcePlacement === "first" || forcePlacement !== "last" && treeIndex.index === 0, isLast = forcePlacement === "last" || forcePlacement !== "first" && treeIndex.index === treeIndex.maxIndex, propsToPass = {
        disabled: childrenProps.disabled ?? context.disabled
      };
      if (context.disablePassBorderRadius !== !0) {
        let borderRadius = getBorderRadius({
          radius: context.radius,
          isFirst,
          isLast,
          vertical: context.vertical,
          disable: context.disablePassBorderRadius
        });
        return { ...propsToPass, ...borderRadius };
      }
      return propsToPass;
    }, Group = createGroup(!0), YGroup = Group, XGroup = createGroup(!1), wrapScroll = ({ scrollable, orientation, showScrollIndicator = !1 }, children) => scrollable ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
      import_react_native4.ScrollView,
      {
        ...orientation === "vertical" && {
          showsVerticalScrollIndicator: showScrollIndicator
        },
        ...orientation === "horizontal" && {
          horizontal: !0,
          showsHorizontalScrollIndicator: showScrollIndicator
        },
        children
      }
    ) : children, getBorderRadius = ({
      isFirst,
      isLast,
      radius,
      vertical,
      disable
    }) => ({
      borderTopLeftRadius: isFirst && disable !== "top" && disable !== "start" ? radius : 0,
      borderTopRightRadius: disable !== "top" && disable !== "end" && (vertical && isFirst || !vertical && isLast) ? radius : 0,
      borderBottomLeftRadius: disable !== "bottom" && disable !== "start" && (vertical && isLast || !vertical && isFirst) ? radius : 0,
      borderBottomRightRadius: isLast && disable !== "bottom" && disable !== "end" ? radius : 0
    }), cloneElementWithPropOrder = (child, props) => {
      let next = (0, import_core13.mergeProps)(child.props, props, (0, import_core13.getConfig)().shorthands);
      return import_react2.default.cloneElement({ ...child, props: null }, next);
    };
  }
});

// ../group/dist/cjs/index.native.js
var require_index_native50 = __commonJS({
  "../group/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Group_native(), module2.exports);
  }
});

// ../list-item/dist/cjs/ListItem.native.js
var require_ListItem_native = __commonJS({
  "../list-item/dist/cjs/ListItem.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), ListItem_exports = {};
    __export2(ListItem_exports, {
      ListItem: () => ListItem2,
      ListItemFrame: () => ListItemFrame,
      ListItemSubtitle: () => ListItemSubtitle,
      ListItemText: () => ListItemText,
      ListItemTitle: () => ListItemTitle,
      useListItem: () => useListItem
    });
    module2.exports = __toCommonJS2(ListItem_exports);
    var import_font_size = require_index_native40(), import_get_font_sized2 = require_index_native20(), import_get_token2 = require_index_native17(), import_helpers_tamagui = require_index_native41(), import_stacks3 = require_index_native19(), import_text2 = require_index_native21(), import_web = require_index_native9(), import_jsx_runtime6 = require("react/jsx-runtime"), NAME = "ListItem", ListItemFrame = (0, import_web.styled)(import_stacks3.ThemeableStack, {
      name: NAME,
      tag: "li",
      variants: {
        unstyled: {
          false: {
            size: "$true",
            alignItems: "center",
            justifyContent: "space-between",
            flexWrap: "nowrap",
            width: "100%",
            borderColor: "$borderColor",
            maxWidth: "100%",
            overflow: "hidden",
            flexDirection: "row",
            backgroundColor: "$background"
          }
        },
        size: {
          "...size": (val, { tokens }) => ({
            minHeight: tokens.size[val],
            paddingHorizontal: tokens.space[val],
            paddingVertical: (0, import_get_token2.getSpace)(tokens.space[val], {
              shift: -4
            })
          })
        },
        active: {
          true: {
            hoverStyle: {
              backgroundColor: "$background"
            }
          }
        },
        disabled: {
          true: {
            opacity: 0.5,
            // TODO breaking types
            pointerEvents: "none"
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), ListItemText = (0, import_web.styled)(import_text2.SizableText, {
      name: "ListItemText",
      variants: {
        unstyled: {
          false: {
            color: "$color",
            size: "$true",
            flexGrow: 1,
            flexShrink: 1,
            ellipse: !0,
            cursor: "default"
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), ListItemSubtitle = (0, import_web.styled)(ListItemText, {
      name: "ListItemSubtitle",
      variants: {
        unstyled: {
          false: {
            opacity: 0.6,
            maxWidth: "100%",
            color: "$color"
          }
        },
        size: {
          "...size": (val, extras) => {
            let oneSmaller = (0, import_get_token2.getSize)(val, {
              shift: -1,
              excludeHalfSteps: !0
            });
            return (0, import_get_font_sized2.getFontSized)(oneSmaller.key, extras);
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), ListItemTitle = (0, import_web.styled)(ListItemText, {
      name: "ListItemTitle"
    }), useListItem = (propsIn, {
      Text: Text3 = ListItemText,
      Subtitle = ListItemSubtitle,
      Title = ListItemTitle
    } = { Text: ListItemText, Subtitle: ListItemSubtitle, Title: ListItemTitle }) => {
      let props = (0, import_web.useProps)(propsIn), {
        children,
        icon,
        iconAfter,
        noTextWrap,
        theme: themeName,
        space,
        spaceFlex,
        scaleIcon = 1,
        scaleSpace = 1,
        unstyled = !1,
        subTitle,
        title,
        // text props
        color,
        fontWeight,
        fontSize,
        fontFamily,
        letterSpacing,
        textAlign,
        ellipse,
        ...rest
      } = props, textProps = {
        color,
        fontWeight,
        fontSize,
        fontFamily,
        letterSpacing,
        textAlign,
        ellipse,
        children
      }, size2 = props.size || "$true", iconSize = (0, import_font_size.getFontSize)(size2) * scaleIcon, getThemedIcon = (0, import_helpers_tamagui.useGetThemedIcon)({ size: iconSize, color }), [themedIcon, themedIconAfter] = [icon, iconAfter].map(getThemedIcon), spaceSize = (0, import_web.getVariableValue)((0, import_web.getTokens)().space[props.space] ?? iconSize) * scaleSpace, contents = (0, import_text2.wrapChildrenInText)(Text3, textProps);
      return {
        props: {
          ...rest,
          children: /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, { children: [
            themedIcon ? /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, { children: [
              themedIcon,
              /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_web.Spacer, { size: spaceSize })
            ] }) : null,
            title || subTitle ? /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_stacks3.YStack, { flex: 1, children: [
              noTextWrap === "all" ? title : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Title, { size: size2, children: title }),
              subTitle ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, { children: typeof subTitle == "string" && noTextWrap !== "all" ? (
                // TODO can use theme but we need to standardize to alt themes
                // or standardize on subtle colors in themes
                /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(Subtitle, { unstyled, size: size2, children: subTitle })
              ) : subTitle }) : null,
              contents
            ] }) : contents,
            themedIconAfter ? /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_web.Spacer, { size: spaceSize }),
              themedIconAfter
            ] }) : null
          ] })
        }
      };
    }, ListItemComponent = ListItemFrame.styleable(function(props, ref) {
      let { props: listItemProps } = useListItem(props);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(ListItemFrame, { ref, ...listItemProps });
    }), ListItem2 = (0, import_web.withStaticProperties)(ListItemComponent, {
      Text: ListItemText,
      Subtitle: ListItemSubtitle
    });
  }
});

// ../list-item/dist/cjs/index.native.js
var require_index_native51 = __commonJS({
  "../list-item/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_ListItem_native(), module2.exports);
  }
});

// ../animate/dist/cjs/Animate.native.js
var require_Animate_native = __commonJS({
  "../animate/dist/cjs/Animate.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Animate_exports = {};
    __export2(Animate_exports, {
      Animate: () => Animate
    });
    module2.exports = __toCommonJS2(Animate_exports);
    var import_animate_presence = require_index_native11(), import_jsx_runtime6 = require("react/jsx-runtime");
    function Animate({ children, type, ...props }) {
      return type === "presence" ? props.keepChildrenMounted ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_animate_presence.PresenceChild,
        {
          initial: props.initial ? void 0 : !1,
          onExitComplete: props.onExitComplete,
          enterVariant: props.enterVariant,
          exitVariant: props.exitVariant,
          enterExitVariant: props.enterExitVariant,
          presenceAffectsLayout: props.presenceAffectsLayout || !0,
          isPresent: props.present,
          children
        }
      ) : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_animate_presence.AnimatePresence, { ...props, children: props.present ? children : null }) : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, { children });
    }
  }
});

// ../animate/dist/cjs/index.native.js
var require_index_native52 = __commonJS({
  "../animate/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Animate_native(), module2.exports);
  }
});

// ../../node_modules/@floating-ui/core/dist/floating-ui.core.esm.js
var floating_ui_core_esm_exports = {};
__export(floating_ui_core_esm_exports, {
  arrow: () => arrow,
  autoPlacement: () => autoPlacement,
  computePosition: () => computePosition,
  detectOverflow: () => detectOverflow,
  flip: () => flip,
  hide: () => hide,
  inline: () => inline,
  limitShift: () => limitShift,
  offset: () => offset,
  rectToClientRect: () => rectToClientRect,
  shift: () => shift,
  size: () => size
});
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getLengthFromAxis(axis) {
  return axis === "y" ? "height" : "width";
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "x" : "y";
}
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref, commonX = reference.x + reference.width / 2 - floating.width / 2, commonY = reference.y + reference.height / 2 - floating.height / 2, mainAxis = getMainAxisFromPlacement(placement), length = getLengthFromAxis(mainAxis), commonAlign = reference[length] / 2 - floating[length] / 2, side = getSide(placement), isVertical = mainAxis === "x", coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
function evaluate(value, param) {
  return typeof value == "function" ? value(param) : value;
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getSideObjectFromPadding(padding) {
  return typeof padding != "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  return {
    ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  options === void 0 && (options = {});
  let {
    x,
    y,
    platform,
    rects,
    elements,
    strategy
  } = state, {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = !1,
    padding = 0
  } = evaluate(options, state), paddingObject = getSideObjectFromPadding(padding), element = elements[altBoundary ? elementContext === "floating" ? "reference" : "floating" : elementContext], clippingClientRect = rectToClientRect(await platform.getClippingRect({
    element: (_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) == null || _await$platform$isEle ? element : element.contextElement || await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  })), rect = elementContext === "floating" ? {
    ...rects.floating,
    x,
    y
  } : rects.reference, offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)), offsetScale = await (platform.isElement == null ? void 0 : platform.isElement(offsetParent)) ? await (platform.getScale == null ? void 0 : platform.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
function within(min$1, value, max$1) {
  return max(min$1, min(value, max$1));
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function getAlignmentSides(placement, rects, rtl) {
  rtl === void 0 && (rtl = !1);
  let alignment = getAlignment(placement), mainAxis = getMainAxisFromPlacement(placement), length = getLengthFromAxis(mainAxis), mainAlignmentSide = mainAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  return rects.reference[length] > rects.floating[length] && (mainAlignmentSide = getOppositePlacement(mainAlignmentSide)), {
    main: mainAlignmentSide,
    cross: getOppositePlacement(mainAlignmentSide)
  };
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getPlacementList(alignment, autoAlignment, allowedPlacements) {
  return (alignment ? [...allowedPlacements.filter((placement) => getAlignment(placement) === alignment), ...allowedPlacements.filter((placement) => getAlignment(placement) !== alignment)] : allowedPlacements.filter((placement) => getSide(placement) === placement)).filter((placement) => alignment ? getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : !1) : !0);
}
function getExpandedPlacements(placement) {
  let oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getSideList(side, isStart, rtl) {
  let lr = ["left", "right"], rl = ["right", "left"], tb = ["top", "bottom"], bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      return rtl ? isStart ? rl : lr : isStart ? lr : rl;
    case "left":
    case "right":
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  let alignment = getAlignment(placement), list = getSideList(getSide(placement), direction === "start", rtl);
  return alignment && (list = list.map((side) => side + "-" + alignment), flipAlignment && (list = list.concat(list.map(getOppositeAlignmentPlacement)))), list;
}
function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}
function isAnySideFullyClipped(overflow) {
  return sides.some((side) => overflow[side] >= 0);
}
function getBoundingRect(rects) {
  let minX = min(...rects.map((rect) => rect.left)), minY = min(...rects.map((rect) => rect.top)), maxX = max(...rects.map((rect) => rect.right)), maxY = max(...rects.map((rect) => rect.bottom));
  return {
    x: minX,
    y: minY,
    width: maxX - minX,
    height: maxY - minY
  };
}
function getRectsByLine(rects) {
  let sortedRects = rects.slice().sort((a, b) => a.y - b.y), groups = [], prevRect = null;
  for (let i = 0; i < sortedRects.length; i++) {
    let rect = sortedRects[i];
    !prevRect || rect.y - prevRect.y > prevRect.height / 2 ? groups.push([rect]) : groups[groups.length - 1].push(rect), prevRect = rect;
  }
  return groups.map((rect) => rectToClientRect(getBoundingRect(rect)));
}
async function convertValueToCoords(state, options) {
  let {
    placement,
    platform,
    elements
  } = state, rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)), side = getSide(placement), alignment = getAlignment(placement), isVertical = getMainAxisFromPlacement(placement) === "x", mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1, crossAxisMulti = rtl && isVertical ? -1 : 1, rawValue = evaluate(options, state), {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue == "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  return alignment && typeof alignmentAxis == "number" && (crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis), isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
function getCrossAxis(axis) {
  return axis === "x" ? "y" : "x";
}
var computePosition, min, max, arrow, sides, allPlacements, oppositeSideMap, oppositeAlignmentMap, autoPlacement, flip, hide, inline, offset, shift, limitShift, size, init_floating_ui_core_esm = __esm({
  "../../node_modules/@floating-ui/core/dist/floating-ui.core.esm.js"() {
    computePosition = async (reference, floating, config) => {
      let {
        placement = "bottom",
        strategy = "absolute",
        middleware = [],
        platform
      } = config, validMiddleware = middleware.filter(Boolean), rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating)), rects = await platform.getElementRects({
        reference,
        floating,
        strategy
      }), {
        x,
        y
      } = computeCoordsFromPlacement(rects, placement, rtl), statefulPlacement = placement, middlewareData = {}, resetCount = 0;
      for (let i = 0; i < validMiddleware.length; i++) {
        let {
          name,
          fn
        } = validMiddleware[i], {
          x: nextX,
          y: nextY,
          data,
          reset
        } = await fn({
          x,
          y,
          initialPlacement: placement,
          placement: statefulPlacement,
          strategy,
          middlewareData,
          rects,
          platform,
          elements: {
            reference,
            floating
          }
        });
        if (x = nextX ?? x, y = nextY ?? y, middlewareData = {
          ...middlewareData,
          [name]: {
            ...middlewareData[name],
            ...data
          }
        }, reset && resetCount <= 50) {
          resetCount++, typeof reset == "object" && (reset.placement && (statefulPlacement = reset.placement), reset.rects && (rects = reset.rects === !0 ? await platform.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects), {
            x,
            y
          } = computeCoordsFromPlacement(rects, statefulPlacement, rtl)), i = -1;
          continue;
        }
      }
      return {
        x,
        y,
        placement: statefulPlacement,
        strategy,
        middlewareData
      };
    };
    min = Math.min, max = Math.max;
    arrow = (options) => ({
      name: "arrow",
      options,
      async fn(state) {
        let {
          x,
          y,
          placement,
          rects,
          platform,
          elements
        } = state, {
          element,
          padding = 0
        } = evaluate(options, state) || {};
        if (element == null)
          return {};
        let paddingObject = getSideObjectFromPadding(padding), coords = {
          x,
          y
        }, axis = getMainAxisFromPlacement(placement), length = getLengthFromAxis(axis), arrowDimensions = await platform.getDimensions(element), isYAxis = axis === "y", minProp = isYAxis ? "top" : "left", maxProp = isYAxis ? "bottom" : "right", clientProp = isYAxis ? "clientHeight" : "clientWidth", endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length], startDiff = coords[axis] - rects.reference[axis], arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element)), clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
        (!clientSize || !await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent))) && (clientSize = elements.floating[clientProp] || rects.floating[length]);
        let centerToReference = endDiff / 2 - startDiff / 2, largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1, minPadding = min(paddingObject[minProp], largestPossiblePadding), maxPadding = min(paddingObject[maxProp], largestPossiblePadding), min$1 = minPadding, max2 = clientSize - arrowDimensions[length] - maxPadding, center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference, offset2 = within(min$1, center, max2), alignmentOffset = getAlignment(placement) != null && center != offset2 && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0 ? center < min$1 ? min$1 - center : max2 - center : 0;
        return {
          [axis]: coords[axis] - alignmentOffset,
          data: {
            [axis]: offset2,
            centerOffset: center - offset2 + alignmentOffset
          }
        };
      }
    }), sides = ["top", "right", "bottom", "left"], allPlacements = /* @__PURE__ */ sides.reduce((acc, side) => acc.concat(side, side + "-start", side + "-end"), []), oppositeSideMap = {
      left: "right",
      right: "left",
      bottom: "top",
      top: "bottom"
    };
    oppositeAlignmentMap = {
      start: "end",
      end: "start"
    };
    autoPlacement = function(options) {
      return options === void 0 && (options = {}), {
        name: "autoPlacement",
        options,
        async fn(state) {
          var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;
          let {
            rects,
            middlewareData,
            placement,
            platform,
            elements
          } = state, {
            crossAxis = !1,
            alignment,
            allowedPlacements = allPlacements,
            autoAlignment = !0,
            ...detectOverflowOptions
          } = evaluate(options, state), placements = alignment !== void 0 || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements, overflow = await detectOverflow(state, detectOverflowOptions), currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0, currentPlacement = placements[currentIndex];
          if (currentPlacement == null)
            return {};
          let {
            main,
            cross
          } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));
          if (placement !== currentPlacement)
            return {
              reset: {
                placement: placements[0]
              }
            };
          let currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]], allOverflows = [...((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || [], {
            placement: currentPlacement,
            overflows: currentOverflows
          }], nextPlacement = placements[currentIndex + 1];
          if (nextPlacement)
            return {
              data: {
                index: currentIndex + 1,
                overflows: allOverflows
              },
              reset: {
                placement: nextPlacement
              }
            };
          let placementsSortedByMostSpace = allOverflows.map((d) => {
            let alignment2 = getAlignment(d.placement);
            return [d.placement, alignment2 && crossAxis ? (
              // Check along the mainAxis and main crossAxis side.
              d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0)
            ) : (
              // Check only the mainAxis.
              d.overflows[0]
            ), d.overflows];
          }).sort((a, b) => a[1] - b[1]), resetPlacement = ((_placementsThatFitOnE = placementsSortedByMostSpace.filter((d) => d[2].slice(
            0,
            // Aligned placements should not check their opposite crossAxis
            // side.
            getAlignment(d[0]) ? 2 : 3
          ).every((v) => v <= 0))[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];
          return resetPlacement !== placement ? {
            data: {
              index: currentIndex + 1,
              overflows: allOverflows
            },
            reset: {
              placement: resetPlacement
            }
          } : {};
        }
      };
    };
    flip = function(options) {
      return options === void 0 && (options = {}), {
        name: "flip",
        options,
        async fn(state) {
          var _middlewareData$flip;
          let {
            placement,
            middlewareData,
            rects,
            initialPlacement,
            platform,
            elements
          } = state, {
            mainAxis: checkMainAxis = !0,
            crossAxis: checkCrossAxis = !0,
            fallbackPlacements: specifiedFallbackPlacements,
            fallbackStrategy = "bestFit",
            fallbackAxisSideDirection = "none",
            flipAlignment = !0,
            ...detectOverflowOptions
          } = evaluate(options, state), side = getSide(placement), isBasePlacement = getSide(initialPlacement) === initialPlacement, rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)), fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
          !specifiedFallbackPlacements && fallbackAxisSideDirection !== "none" && fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
          let placements = [initialPlacement, ...fallbackPlacements], overflow = await detectOverflow(state, detectOverflowOptions), overflows = [], overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
          if (checkMainAxis && overflows.push(overflow[side]), checkCrossAxis) {
            let {
              main,
              cross
            } = getAlignmentSides(placement, rects, rtl);
            overflows.push(overflow[main], overflow[cross]);
          }
          if (overflowsData = [...overflowsData, {
            placement,
            overflows
          }], !overflows.every((side2) => side2 <= 0)) {
            var _middlewareData$flip2, _overflowsData$filter;
            let nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1, nextPlacement = placements[nextIndex];
            if (nextPlacement)
              return {
                data: {
                  index: nextIndex,
                  overflows: overflowsData
                },
                reset: {
                  placement: nextPlacement
                }
              };
            let resetPlacement = (_overflowsData$filter = overflowsData.filter((d) => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
            if (!resetPlacement)
              switch (fallbackStrategy) {
                case "bestFit": {
                  var _overflowsData$map$so;
                  let placement2 = (_overflowsData$map$so = overflowsData.map((d) => [d.placement, d.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];
                  placement2 && (resetPlacement = placement2);
                  break;
                }
                case "initialPlacement":
                  resetPlacement = initialPlacement;
                  break;
              }
            if (placement !== resetPlacement)
              return {
                reset: {
                  placement: resetPlacement
                }
              };
          }
          return {};
        }
      };
    };
    hide = function(options) {
      return options === void 0 && (options = {}), {
        name: "hide",
        options,
        async fn(state) {
          let {
            rects
          } = state, {
            strategy = "referenceHidden",
            ...detectOverflowOptions
          } = evaluate(options, state);
          switch (strategy) {
            case "referenceHidden": {
              let overflow = await detectOverflow(state, {
                ...detectOverflowOptions,
                elementContext: "reference"
              }), offsets = getSideOffsets(overflow, rects.reference);
              return {
                data: {
                  referenceHiddenOffsets: offsets,
                  referenceHidden: isAnySideFullyClipped(offsets)
                }
              };
            }
            case "escaped": {
              let overflow = await detectOverflow(state, {
                ...detectOverflowOptions,
                altBoundary: !0
              }), offsets = getSideOffsets(overflow, rects.floating);
              return {
                data: {
                  escapedOffsets: offsets,
                  escaped: isAnySideFullyClipped(offsets)
                }
              };
            }
            default:
              return {};
          }
        }
      };
    };
    inline = function(options) {
      return options === void 0 && (options = {}), {
        name: "inline",
        options,
        async fn(state) {
          let {
            placement,
            elements,
            rects,
            platform,
            strategy
          } = state, {
            padding = 2,
            x,
            y
          } = evaluate(options, state), nativeClientRects = Array.from(await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference)) || []), clientRects = getRectsByLine(nativeClientRects), fallback = rectToClientRect(getBoundingRect(nativeClientRects)), paddingObject = getSideObjectFromPadding(padding);
          function getBoundingClientRect() {
            if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null)
              return clientRects.find((rect) => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;
            if (clientRects.length >= 2) {
              if (getMainAxisFromPlacement(placement) === "x") {
                let firstRect = clientRects[0], lastRect = clientRects[clientRects.length - 1], isTop = getSide(placement) === "top", top2 = firstRect.top, bottom2 = lastRect.bottom, left2 = isTop ? firstRect.left : lastRect.left, right2 = isTop ? firstRect.right : lastRect.right, width2 = right2 - left2, height2 = bottom2 - top2;
                return {
                  top: top2,
                  bottom: bottom2,
                  left: left2,
                  right: right2,
                  width: width2,
                  height: height2,
                  x: left2,
                  y: top2
                };
              }
              let isLeftSide = getSide(placement) === "left", maxRight = max(...clientRects.map((rect) => rect.right)), minLeft = min(...clientRects.map((rect) => rect.left)), measureRects = clientRects.filter((rect) => isLeftSide ? rect.left === minLeft : rect.right === maxRight), top = measureRects[0].top, bottom = measureRects[measureRects.length - 1].bottom, left = minLeft, right = maxRight, width = right - left, height = bottom - top;
              return {
                top,
                bottom,
                left,
                right,
                width,
                height,
                x: left,
                y: top
              };
            }
            return fallback;
          }
          let resetRects = await platform.getElementRects({
            reference: {
              getBoundingClientRect
            },
            floating: elements.floating,
            strategy
          });
          return rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height ? {
            reset: {
              rects: resetRects
            }
          } : {};
        }
      };
    };
    offset = function(options) {
      return options === void 0 && (options = 0), {
        name: "offset",
        options,
        async fn(state) {
          let {
            x,
            y
          } = state, diffCoords = await convertValueToCoords(state, options);
          return {
            x: x + diffCoords.x,
            y: y + diffCoords.y,
            data: diffCoords
          };
        }
      };
    };
    shift = function(options) {
      return options === void 0 && (options = {}), {
        name: "shift",
        options,
        async fn(state) {
          let {
            x,
            y,
            placement
          } = state, {
            mainAxis: checkMainAxis = !0,
            crossAxis: checkCrossAxis = !1,
            limiter = {
              fn: (_ref) => {
                let {
                  x: x2,
                  y: y2
                } = _ref;
                return {
                  x: x2,
                  y: y2
                };
              }
            },
            ...detectOverflowOptions
          } = evaluate(options, state), coords = {
            x,
            y
          }, overflow = await detectOverflow(state, detectOverflowOptions), mainAxis = getMainAxisFromPlacement(getSide(placement)), crossAxis = getCrossAxis(mainAxis), mainAxisCoord = coords[mainAxis], crossAxisCoord = coords[crossAxis];
          if (checkMainAxis) {
            let minSide = mainAxis === "y" ? "top" : "left", maxSide = mainAxis === "y" ? "bottom" : "right", min2 = mainAxisCoord + overflow[minSide], max2 = mainAxisCoord - overflow[maxSide];
            mainAxisCoord = within(min2, mainAxisCoord, max2);
          }
          if (checkCrossAxis) {
            let minSide = crossAxis === "y" ? "top" : "left", maxSide = crossAxis === "y" ? "bottom" : "right", min2 = crossAxisCoord + overflow[minSide], max2 = crossAxisCoord - overflow[maxSide];
            crossAxisCoord = within(min2, crossAxisCoord, max2);
          }
          let limitedCoords = limiter.fn({
            ...state,
            [mainAxis]: mainAxisCoord,
            [crossAxis]: crossAxisCoord
          });
          return {
            ...limitedCoords,
            data: {
              x: limitedCoords.x - x,
              y: limitedCoords.y - y
            }
          };
        }
      };
    }, limitShift = function(options) {
      return options === void 0 && (options = {}), {
        options,
        fn(state) {
          let {
            x,
            y,
            placement,
            rects,
            middlewareData
          } = state, {
            offset: offset2 = 0,
            mainAxis: checkMainAxis = !0,
            crossAxis: checkCrossAxis = !0
          } = evaluate(options, state), coords = {
            x,
            y
          }, mainAxis = getMainAxisFromPlacement(placement), crossAxis = getCrossAxis(mainAxis), mainAxisCoord = coords[mainAxis], crossAxisCoord = coords[crossAxis], rawOffset = evaluate(offset2, state), computedOffset = typeof rawOffset == "number" ? {
            mainAxis: rawOffset,
            crossAxis: 0
          } : {
            mainAxis: 0,
            crossAxis: 0,
            ...rawOffset
          };
          if (checkMainAxis) {
            let len = mainAxis === "y" ? "height" : "width", limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis, limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
            mainAxisCoord < limitMin ? mainAxisCoord = limitMin : mainAxisCoord > limitMax && (mainAxisCoord = limitMax);
          }
          if (checkCrossAxis) {
            var _middlewareData$offse, _middlewareData$offse2;
            let len = mainAxis === "y" ? "width" : "height", isOriginSide = ["top", "left"].includes(getSide(placement)), limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide && ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0) + (isOriginSide ? 0 : computedOffset.crossAxis), limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
            crossAxisCoord < limitMin ? crossAxisCoord = limitMin : crossAxisCoord > limitMax && (crossAxisCoord = limitMax);
          }
          return {
            [mainAxis]: mainAxisCoord,
            [crossAxis]: crossAxisCoord
          };
        }
      };
    }, size = function(options) {
      return options === void 0 && (options = {}), {
        name: "size",
        options,
        async fn(state) {
          let {
            placement,
            rects,
            platform,
            elements
          } = state, {
            apply = () => {
            },
            ...detectOverflowOptions
          } = evaluate(options, state), overflow = await detectOverflow(state, detectOverflowOptions), side = getSide(placement), alignment = getAlignment(placement), isXAxis = getMainAxisFromPlacement(placement) === "x", {
            width,
            height
          } = rects.floating, heightSide, widthSide;
          side === "top" || side === "bottom" ? (heightSide = side, widthSide = alignment === (await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)) ? "start" : "end") ? "left" : "right") : (widthSide = side, heightSide = alignment === "end" ? "top" : "bottom");
          let overflowAvailableHeight = height - overflow[heightSide], overflowAvailableWidth = width - overflow[widthSide], noShift = !state.middlewareData.shift, availableHeight = overflowAvailableHeight, availableWidth = overflowAvailableWidth;
          if (isXAxis) {
            let maximumClippingWidth = width - overflow.left - overflow.right;
            availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;
          } else {
            let maximumClippingHeight = height - overflow.top - overflow.bottom;
            availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;
          }
          if (noShift && !alignment) {
            let xMin = max(overflow.left, 0), xMax = max(overflow.right, 0), yMin = max(overflow.top, 0), yMax = max(overflow.bottom, 0);
            isXAxis ? availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));
          }
          await apply({
            ...state,
            availableWidth,
            availableHeight
          });
          let nextDimensions = await platform.getDimensions(elements.floating);
          return width !== nextDimensions.width || height !== nextDimensions.height ? {
            reset: {
              rects: !0
            }
          } : {};
        }
      };
    };
  }
});

// ../../node_modules/@floating-ui/react-native/dist/floating-ui.react-native.js
var require_floating_ui_react_native = __commonJS({
  "../../node_modules/@floating-ui/react-native/dist/floating-ui.react-native.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var core = (init_floating_ui_core_esm(), __toCommonJS(floating_ui_core_esm_exports)), React2 = require("react"), reactNative = require("react-native");
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      return e && Object.keys(e).forEach(function(k) {
        if (k !== "default") {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: !0,
            get: function() {
              return e[k];
            }
          });
        }
      }), n.default = e, Object.freeze(n);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React2), arrow2 = (options) => {
      let {
        element,
        padding
      } = options;
      function isRef(value) {
        return {}.hasOwnProperty.call(value, "current");
      }
      return {
        name: "arrow",
        options,
        fn(args) {
          return element && isRef(element) ? element.current != null ? core.arrow({
            element: element.current,
            padding
          }).fn(args) : {} : element ? core.arrow({
            element,
            padding
          }).fn(args) : {};
        }
      };
    }, ORIGIN$1 = {
      x: 0,
      y: 0
    }, createPlatform = (_ref) => {
      let {
        offsetParent,
        sameScrollView = !0,
        scrollOffsets = ORIGIN$1
      } = _ref;
      return {
        getElementRects(_ref2) {
          let {
            reference,
            floating
          } = _ref2;
          return new Promise((resolve) => {
            let onMeasure = function(offsetX, offsetY) {
              offsetX === void 0 && (offsetX = 0), offsetY === void 0 && (offsetY = 0), floating.measure((x, y, width, height) => {
                let floatingRect = {
                  width,
                  height,
                  ...ORIGIN$1
                };
                reference[sameScrollView ? "measure" : "measureInWindow"]((x2, y2, width2, height2) => {
                  let referenceRect = {
                    width: width2,
                    height: height2,
                    x: x2 - offsetX,
                    y: y2 - offsetY
                  };
                  resolve({
                    reference: referenceRect,
                    floating: floatingRect
                  });
                });
              });
            };
            offsetParent ? offsetParent.measure(onMeasure) : onMeasure();
          });
        },
        getClippingRect() {
          let {
            width,
            height
          } = reactNative.Dimensions.get("window");
          return Promise.resolve({
            width,
            height,
            ...sameScrollView ? scrollOffsets : ORIGIN$1
          });
        },
        convertOffsetParentRelativeRectToViewportRelativeRect(_ref3) {
          let {
            rect
          } = _ref3;
          return new Promise((resolve) => {
            let onMeasure = function(offsetX, offsetY) {
              offsetX === void 0 && (offsetX = 0), offsetY === void 0 && (offsetY = 0), resolve({
                ...rect,
                x: rect.x + offsetX,
                y: rect.y + offsetY
              });
            };
            offsetParent ? offsetParent.measure(onMeasure) : onMeasure();
          });
        },
        getDimensions: (element) => new Promise((resolve) => element.measure((x, y, width, height) => resolve({
          width,
          height
        })))
      };
    };
    function deepEqual(a, b) {
      if (a === b)
        return !0;
      if (typeof a != typeof b)
        return !1;
      if (typeof a == "function" && a.toString() === b.toString())
        return !0;
      let length, i, keys;
      if (a && b && typeof a == "object") {
        if (Array.isArray(a)) {
          if (length = a.length, length != b.length)
            return !1;
          for (i = length; i-- !== 0; )
            if (!deepEqual(a[i], b[i]))
              return !1;
          return !0;
        }
        if (keys = Object.keys(a), length = keys.length, length !== Object.keys(b).length)
          return !1;
        for (i = length; i-- !== 0; )
          if (!{}.hasOwnProperty.call(b, keys[i]))
            return !1;
        for (i = length; i-- !== 0; ) {
          let key = keys[i];
          if (!(key === "_owner" && a.$$typeof) && !deepEqual(a[key], b[key]))
            return !1;
        }
        return !0;
      }
      return a !== a && b !== b;
    }
    var ORIGIN = {
      x: 0,
      y: 0
    };
    function useFloating2(options) {
      options === void 0 && (options = {});
      let {
        placement = "bottom",
        middleware = [],
        sameScrollView = !0,
        elements: {
          reference: externalReference,
          floating: externalFloating,
          offsetParent: externalOffsetParent
        } = {}
      } = options, [_reference, _setReference] = React__namespace.useState(null), [_floating, _setFloating] = React__namespace.useState(null), [_offsetParent, _setOffsetParent] = React__namespace.useState(null), referenceEl = externalReference || _reference, floatingEl = externalFloating || _floating, offsetParentEl = externalOffsetParent || _offsetParent, setReference = React__namespace.useCallback((node) => {
        node !== referenceRef.current && (referenceRef.current = node, _setReference(node));
      }, [_setReference]), setFloating = React__namespace.useCallback((node) => {
        node !== floatingRef.current && (floatingRef.current = node, _setFloating(node));
      }, [_setFloating]), setOffsetParent = React__namespace.useCallback((node) => {
        node !== offsetParentRef.current && (offsetParentRef.current = node, _setOffsetParent(node));
      }, [_setOffsetParent]), referenceRef = React__namespace.useRef(null), floatingRef = React__namespace.useRef(null), offsetParentRef = React__namespace.useRef(null), [data, setData] = React__namespace.useState({
        x: 0,
        y: 0,
        placement,
        strategy: "absolute",
        middlewareData: {}
      }), [scrollOffsets, setScrollOffsets] = React__namespace.useState(ORIGIN), [latestMiddleware, setLatestMiddleware] = React__namespace.useState(middleware);
      deepEqual(latestMiddleware, middleware) || setLatestMiddleware(middleware);
      let platform = React__namespace.useMemo(() => createPlatform({
        offsetParent: offsetParentEl,
        scrollOffsets,
        sameScrollView
      }), [offsetParentEl, scrollOffsets, sameScrollView]), update = React__namespace.useCallback(() => {
        !referenceRef.current || !floatingRef.current || core.computePosition(referenceRef.current, floatingRef.current, {
          middleware: latestMiddleware,
          platform,
          placement
        }).then((data2) => {
          isMountedRef.current && setData(data2);
        });
      }, [latestMiddleware, platform, placement]);
      React__namespace.useLayoutEffect(() => {
        referenceEl && (referenceRef.current = referenceEl), floatingEl && (floatingRef.current = floatingEl), offsetParentEl && (offsetParentRef.current = offsetParentEl);
        let frame = requestAnimationFrame(update);
        return () => {
          cancelAnimationFrame(frame);
        };
      }, [referenceEl, floatingEl, offsetParentEl, update]);
      let isMountedRef = React__namespace.useRef(!0);
      React__namespace.useLayoutEffect(() => (isMountedRef.current = !0, () => {
        isMountedRef.current = !1;
      }), []);
      let refs = React__namespace.useMemo(() => ({
        reference: referenceRef,
        floating: floatingRef,
        offsetParent: offsetParentRef,
        setReference,
        setFloating,
        setOffsetParent
      }), [setReference, setFloating, setOffsetParent]), elements = React__namespace.useMemo(() => ({
        reference: referenceEl,
        floating: floatingEl,
        offsetParent: offsetParentEl
      }), [referenceEl, floatingEl, offsetParentEl]), floatingStyles = React__namespace.useMemo(() => elements.floating ? {
        position: "absolute",
        left: data.x,
        top: data.y
      } : {
        position: "absolute",
        left: 0,
        top: 0
      }, [elements.floating, data.x, data.y]);
      return React__namespace.useMemo(() => ({
        ...data,
        update,
        refs,
        elements,
        floatingStyles,
        offsetParent: setOffsetParent,
        reference: setReference,
        floating: setFloating,
        scrollProps: {
          onScroll: (event) => setScrollOffsets(event.nativeEvent.contentOffset),
          scrollEventThrottle: 16
        }
      }), [data, refs, elements, floatingStyles, setReference, setFloating, setOffsetParent, update]);
    }
    Object.defineProperty(exports, "autoPlacement", {
      enumerable: !0,
      get: function() {
        return core.autoPlacement;
      }
    });
    Object.defineProperty(exports, "detectOverflow", {
      enumerable: !0,
      get: function() {
        return core.detectOverflow;
      }
    });
    Object.defineProperty(exports, "flip", {
      enumerable: !0,
      get: function() {
        return core.flip;
      }
    });
    Object.defineProperty(exports, "hide", {
      enumerable: !0,
      get: function() {
        return core.hide;
      }
    });
    Object.defineProperty(exports, "inline", {
      enumerable: !0,
      get: function() {
        return core.inline;
      }
    });
    Object.defineProperty(exports, "limitShift", {
      enumerable: !0,
      get: function() {
        return core.limitShift;
      }
    });
    Object.defineProperty(exports, "offset", {
      enumerable: !0,
      get: function() {
        return core.offset;
      }
    });
    Object.defineProperty(exports, "shift", {
      enumerable: !0,
      get: function() {
        return core.shift;
      }
    });
    Object.defineProperty(exports, "size", {
      enumerable: !0,
      get: function() {
        return core.size;
      }
    });
    exports.arrow = arrow2;
    exports.useFloating = useFloating2;
  }
});

// ../floating/dist/cjs/Floating.native.js
var require_Floating_native = __commonJS({
  "../floating/dist/cjs/Floating.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Floating_native_exports = {};
    __export2(Floating_native_exports, {
      autoUpdate: () => autoUpdate
    });
    module2.exports = __toCommonJS2(Floating_native_exports);
    __reExport2(Floating_native_exports, require_floating_ui_react_native(), module2.exports);
    var autoUpdate = () => {
    };
  }
});

// ../floating/dist/cjs/useFloating.native.js
var require_useFloating_native = __commonJS({
  "../floating/dist/cjs/useFloating.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useFloating_exports = {};
    __export2(useFloating_exports, {
      FloatingOverrideContext: () => FloatingOverrideContext2,
      useFloating: () => useFloating2
    });
    module2.exports = __toCommonJS2(useFloating_exports);
    var import_react2 = require("react"), Floating = __toESM2(require_Floating_native()), FloatingOverrideContext2 = (0, import_react2.createContext)(null), useFloating2 = (props) => {
      var _a;
      return (_a = (0, import_react2.useContext)(FloatingOverrideContext2) || Floating.useFloating) == null ? void 0 : _a(props);
    };
  }
});

// ../floating/dist/cjs/index.native.js
var require_index_native53 = __commonJS({
  "../floating/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      FloatingOverrideContext: () => import_useFloating.FloatingOverrideContext,
      useFloating: () => import_useFloating.useFloating
    });
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Floating_native(), module2.exports);
    var import_useFloating = require_useFloating_native();
  }
});

// ../popper/dist/cjs/Popper.native.js
var require_Popper_native = __commonJS({
  "../popper/dist/cjs/Popper.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Popper_exports = {};
    __export2(Popper_exports, {
      Popper: () => Popper,
      PopperAnchor: () => PopperAnchor,
      PopperArrow: () => PopperArrow,
      PopperContent: () => PopperContent,
      PopperContentFrame: () => PopperContentFrame,
      PopperContext: () => PopperContext,
      PopperProvider: () => PopperProvider,
      usePopperContext: () => usePopperContext
    });
    module2.exports = __toCommonJS2(Popper_exports);
    var import_compose_refs = require_index_native5(), import_core13 = require_index_native15(), import_floating = require_index_native53(), import_get_token2 = require_index_native17(), import_stacks3 = require_index_native19(), React2 = __toESM2(require("react")), import_react_native4 = require("react-native"), import_jsx_runtime6 = require("react/jsx-runtime"), PopperContext = (0, import_core13.createStyledContext)({}), { useStyledContext: usePopperContext, Provider: PopperProvider } = PopperContext;
    function Popper(props) {
      let {
        children,
        size: size2,
        strategy = "absolute",
        placement = "bottom",
        stayInFrame,
        allowFlip,
        offset: offset2,
        __scopePopper
      } = props, [isMounted, setIsMounted] = React2.useState(!1);
      (0, import_core13.useIsomorphicLayoutEffect)(() => {
        setIsMounted(!0);
      }, []);
      let [anchorRef, setAnchorRef] = React2.useState(), [arrowEl, setArrow] = React2.useState(null), [arrowSize, setArrowSize] = React2.useState(0), offsetOptions = offset2 ?? arrowSize, floating = (0, import_floating.useFloating)({
        strategy,
        placement,
        sameScrollView: !1,
        // this only takes effect on native
        middleware: [
          stayInFrame ? (0, import_floating.shift)(typeof stayInFrame == "boolean" ? {} : stayInFrame) : null,
          allowFlip ? (0, import_floating.flip)(typeof allowFlip == "boolean" ? {} : allowFlip) : null,
          arrowEl ? (0, import_floating.arrow)({ element: arrowEl }) : null,
          typeof offsetOptions < "u" ? (0, import_floating.offset)(offsetOptions) : null
        ].filter(Boolean)
      }), {
        refs,
        middlewareData,
        // @ts-expect-error this comes from Tooltip for example
        open
      } = floating;
      if ((0, import_core13.useIsomorphicLayoutEffect)(() => {
        floating.refs.setReference(anchorRef);
      }, [anchorRef]), import_core13.isWeb)
        (0, import_core13.useIsomorphicLayoutEffect)(() => {
          if (open && refs.reference.current && refs.floating.current)
            return (0, import_floating.autoUpdate)(refs.reference.current, refs.floating.current, floating.update);
        }, [open, floating.update, refs.floating, refs.reference]);
      else {
        let dimensions = (0, import_react_native4.useWindowDimensions)(), [keyboardOpen, setKeyboardOpen] = React2.useState(!1);
        React2.useEffect(() => {
          let showSubscription = import_react_native4.Keyboard.addListener("keyboardDidShow", () => {
            setKeyboardOpen(!0);
          }), hideSubscription = import_react_native4.Keyboard.addListener("keyboardDidHide", () => {
            setKeyboardOpen(!1);
          });
          return () => {
            showSubscription.remove(), hideSubscription.remove();
          };
        }, []), (0, import_core13.useIsomorphicLayoutEffect)(() => {
          floating.update();
        }, [dimensions, keyboardOpen]);
      }
      let popperContext = {
        anchorRef: setAnchorRef,
        size: size2,
        arrowRef: setArrow,
        arrowStyle: middlewareData.arrow,
        onArrowSize: setArrowSize,
        isMounted,
        scope: __scopePopper,
        ...floating
      };
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(PopperProvider, { ...popperContext, children });
    }
    var PopperAnchor = import_stacks3.YStack.extractable(
      React2.forwardRef(
        function(props, forwardedRef) {
          let { virtualRef, __scopePopper, ...anchorProps } = props, { anchorRef, getReferenceProps } = usePopperContext(__scopePopper), ref = React2.useRef(null), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, ref, anchorRef);
          if (virtualRef)
            return null;
          let stackProps = {
            ref: composedRefs,
            ...anchorProps
          };
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            import_core13.View,
            {
              ...getReferenceProps ? getReferenceProps(stackProps) : stackProps
            }
          );
        }
      )
    ), PopperContentFrame = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: "PopperContent",
      variants: {
        unstyled: {
          false: {
            size: "$true",
            backgroundColor: "$background",
            alignItems: "center",
            radiused: !0
          }
        },
        size: {
          "...size": (val, { tokens }) => ({
            padding: tokens.space[val],
            borderRadius: tokens.radius[val]
          })
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), PopperContent = React2.forwardRef(function(props, forwardedRef) {
      let { __scopePopper, ...rest } = props, { strategy, placement, refs, x, y, getFloatingProps, size: size2, isMounted, update } = usePopperContext(__scopePopper), contentRefs = (0, import_compose_refs.useComposedRefs)(refs.setFloating, forwardedRef), contents = React2.useMemo(() => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        PopperContentFrame,
        {
          "data-placement": placement,
          "data-strategy": strategy,
          contain: "layout",
          size: size2,
          ...rest
        },
        "popper-content-frame"
      ), [placement, strategy, props]);
      if ((0, import_core13.useIsomorphicLayoutEffect)(() => {
        isMounted && update();
      }, [isMounted]), !isMounted)
        return null;
      let frameProps = {
        ref: contentRefs,
        x: x || 0,
        y: y || 0,
        position: strategy
      };
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_stacks3.YStack, { ...getFloatingProps ? getFloatingProps(frameProps) : frameProps, children: contents });
    }), PopperArrowFrame = (0, import_core13.styled)(import_stacks3.YStack, {
      name: "PopperArrow",
      variants: {
        unstyled: {
          false: {
            borderColor: "$borderColor",
            backgroundColor: "$background",
            position: "relative"
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), PopperArrowOuterFrame = (0, import_core13.styled)(import_stacks3.YStack, {
      name: "PopperArrowOuter",
      variants: {
        unstyled: {
          false: {
            position: "absolute",
            zIndex: 1e6,
            pointerEvents: "none",
            overflow: "hidden",
            alignItems: "center",
            justifyContent: "center"
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), opposites = {
      top: "bottom",
      right: "left",
      bottom: "top",
      left: "right"
    }, PopperArrow = PopperArrowFrame.styleable(function(propsIn, forwardedRef) {
      var _a, _b;
      let { __scopePopper, ...rest } = propsIn, props = (0, import_core13.useProps)(rest), { offset: offset2, size: sizeProp, borderWidth = 0, ...arrowProps } = props, context = usePopperContext(__scopePopper), sizeVal = sizeProp ?? context.size, sizeValResolved = (0, import_core13.getVariableValue)(
        (0, import_get_token2.getSpace)(sizeVal, {
          shift: -2,
          bounds: [2]
        })
      ), size2 = Math.max(0, +sizeValResolved), { placement } = context, refs = (0, import_compose_refs.useComposedRefs)(context.arrowRef, forwardedRef), x = ((_a = context.arrowStyle) == null ? void 0 : _a.x) || 0, y = ((_b = context.arrowStyle) == null ? void 0 : _b.y) || 0, primaryPlacement = placement ? placement.split("-")[0] : "top", arrowStyle = { x, y, width: size2, height: size2 }, innerArrowStyle = {}, isVertical = primaryPlacement === "bottom" || primaryPlacement === "top";
      if (primaryPlacement) {
        arrowStyle[isVertical ? "width" : "height"] = size2 * 2;
        let oppSide = opposites[primaryPlacement];
        oppSide && (arrowStyle[oppSide] = -size2, innerArrowStyle[oppSide] = size2 / 2), oppSide === "bottom" && (arrowStyle[oppSide] += 1), (oppSide === "top" || oppSide === "bottom") && (arrowStyle.left = 0), (oppSide === "left" || oppSide === "right") && (arrowStyle.top = 0), (0, import_core13.useIsomorphicLayoutEffect)(() => {
          var _a2;
          (_a2 = context.onArrowSize) == null || _a2.call(context, size2);
        }, [size2, context.onArrowSize]);
      }
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(PopperArrowOuterFrame, { ref: refs, ...arrowStyle, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        PopperArrowFrame,
        {
          width: size2,
          height: size2,
          ...arrowProps,
          ...innerArrowStyle,
          rotate: "45deg",
          ...primaryPlacement === "bottom" && {
            borderLeftWidth: borderWidth,
            borderTopWidth: borderWidth
          },
          ...primaryPlacement === "top" && {
            borderBottomWidth: borderWidth,
            borderRightWidth: borderWidth
          },
          ...primaryPlacement === "right" && {
            borderLeftWidth: borderWidth,
            borderBottomWidth: borderWidth
          },
          ...primaryPlacement === "left" && {
            borderTopWidth: borderWidth,
            borderRightWidth: borderWidth
          }
        }
      ) });
    });
  }
});

// ../popper/dist/cjs/index.native.js
var require_index_native54 = __commonJS({
  "../popper/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Popper_native(), module2.exports);
  }
});

// ../../node_modules/react-freeze/dist/index.js
var require_dist2 = __commonJS({
  "../../node_modules/react-freeze/dist/index.js"(exports) {
    function _interopDefault(ex) {
      return ex && typeof ex == "object" && "default" in ex ? ex.default : ex;
    }
    var React2 = require("react"), React__default = _interopDefault(React2);
    function Suspender(_ref) {
      var freeze = _ref.freeze, children = _ref.children, promiseCache = React2.useRef({}).current;
      if (freeze && !promiseCache.promise)
        throw promiseCache.promise = new Promise(function(resolve) {
          promiseCache.resolve = resolve;
        }), promiseCache.promise;
      if (freeze)
        throw promiseCache.promise;
      return promiseCache.promise && (promiseCache.resolve(), promiseCache.promise = void 0), React__default.createElement(React2.Fragment, null, children);
    }
    function Freeze(_ref2) {
      var freeze = _ref2.freeze, children = _ref2.children, _ref2$placeholder = _ref2.placeholder, placeholder = _ref2$placeholder === void 0 ? null : _ref2$placeholder;
      return React__default.createElement(React2.Suspense, {
        fallback: placeholder
      }, React__default.createElement(Suspender, {
        freeze
      }, children));
    }
    exports.Freeze = Freeze;
  }
});

// ../popover/dist/cjs/useFloatingContext.native.js
var require_useFloatingContext_native = __commonJS({
  "../popover/dist/cjs/useFloatingContext.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useFloatingContext_native_exports = {};
    __export2(useFloatingContext_native_exports, {
      useFloatingContext: () => useFloatingContext
    });
    module2.exports = __toCommonJS2(useFloatingContext_native_exports);
    var import_react2 = require("react"), useFloatingContext = () => (0, import_react2.useCallback)(() => {
    }, []);
  }
});

// ../popover/dist/cjs/Popover.native.js
var require_Popover_native = __commonJS({
  "../popover/dist/cjs/Popover.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Popover_exports = {};
    __export2(Popover_exports, {
      Popover: () => Popover,
      PopoverAnchor: () => PopoverAnchor,
      PopoverArrow: () => PopoverArrow,
      PopoverClose: () => PopoverClose,
      PopoverContent: () => PopoverContent,
      PopoverContext: () => PopoverContext,
      PopoverTrigger: () => PopoverTrigger,
      usePopoverContext: () => usePopoverContext
    });
    module2.exports = __toCommonJS2(Popover_exports);
    var import_polyfill_dev = require_polyfill_dev(), import_adapt = require_index_native24(), import_animate = require_index_native52(), import_aria_hidden = require_index_native26(), import_compose_refs = require_index_native5(), import_core13 = require_index_native15(), import_floating = require_index_native53(), import_focus_scope = require_index_native28(), import_popper = require_index_native54(), import_portal2 = require_index_native29(), import_remove_scroll = require_index_native30(), import_sheet = require_index_native34(), import_stacks3 = require_index_native19(), import_use_controllable_state = require_index_native12(), React2 = __toESM2(require("react")), import_react_freeze = require_dist2(), import_react_native4 = require("react-native"), import_useFloatingContext = require_useFloatingContext_native(), import_jsx_runtime6 = require("react/jsx-runtime"), POPOVER_SCOPE = "PopoverScope", PopoverContext = (0, import_core13.createStyledContext)({}), usePopoverContext = PopoverContext.useStyledContext, PopoverAnchor = React2.forwardRef(function(props, forwardedRef) {
      let { __scopePopover, ...rest } = props, context = usePopoverContext(__scopePopover), { onCustomAnchorAdd, onCustomAnchorRemove } = context || {};
      return React2.useEffect(() => (onCustomAnchorAdd(), () => onCustomAnchorRemove()), [onCustomAnchorAdd, onCustomAnchorRemove]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_popper.PopperAnchor,
        {
          __scopePopper: __scopePopover || POPOVER_SCOPE,
          ...rest,
          ref: forwardedRef
        }
      );
    }), PopoverTrigger = React2.forwardRef(function(props, forwardedRef) {
      let { __scopePopover, ...rest } = props, context = usePopoverContext(__scopePopover), composedTriggerRef = (0, import_compose_refs.useComposedRefs)(forwardedRef, context.triggerRef), trigger = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_core13.View,
        {
          "aria-haspopup": "dialog",
          "aria-expanded": context.open,
          "data-state": getState(context.open),
          ...rest,
          ref: composedTriggerRef,
          onPress: (0, import_core13.composeEventHandlers)(props.onPress, context.onOpenToggle)
        }
      );
      return context.hasCustomAnchor ? trigger : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_popper.PopperAnchor, { __scopePopper: __scopePopover || POPOVER_SCOPE, asChild: !0, children: trigger });
    }), PopoverContent = import_popper.PopperContentFrame.extractable(
      React2.forwardRef(function(props, forwardedRef) {
        let {
          allowPinchZoom,
          trapFocus,
          disableRemoveScroll = !0,
          zIndex,
          __scopePopover,
          ...contentImplProps
        } = props, context = usePopoverContext(__scopePopover), contentRef = React2.useRef(null), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, contentRef), isRightClickOutsideRef = React2.useRef(!1);
        return React2.useEffect(() => {
          if (!context.open)
            return;
          let content = contentRef.current;
          if (content)
            return (0, import_aria_hidden.hideOthers)(content);
        }, [context.open]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(PopoverContentPortal, { __scopePopover, zIndex: props.zIndex, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_core13.Stack, { pointerEvents: context.open ? "auto" : "none", children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          PopoverContentImpl,
          {
            ...contentImplProps,
            disableRemoveScroll,
            ref: composedRefs,
            __scopePopover,
            trapFocus: trapFocus ?? context.open,
            disableOutsidePointerEvents: !0,
            onCloseAutoFocus: (0, import_core13.composeEventHandlers)(props.onCloseAutoFocus, (event) => {
              var _a;
              event.preventDefault(), isRightClickOutsideRef.current || (_a = context.triggerRef.current) == null || _a.focus();
            }),
            onPointerDownOutside: (0, import_core13.composeEventHandlers)(
              props.onPointerDownOutside,
              (event) => {
                let originalEvent = event.detail.originalEvent, ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === !0, isRightClick = originalEvent.button === 2 || ctrlLeftClick;
                isRightClickOutsideRef.current = isRightClick;
              },
              { checkDefaultPrevented: !1 }
            ),
            onFocusOutside: (0, import_core13.composeEventHandlers)(
              props.onFocusOutside,
              (event) => event.preventDefault(),
              { checkDefaultPrevented: !1 }
            )
          }
        ) }) });
      })
    );
    function PopoverRepropagateContext(props) {
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_popper.PopperContext.Provider, { ...props.popperContext, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(PopoverContext.Provider, { ...props.context, children: props.children }) });
    }
    function PopoverContentPortal(props) {
      let { __scopePopover } = props, zIndex = props.zIndex ?? 15e4, context = usePopoverContext(__scopePopover), popperContext = (0, import_popper.usePopperContext)(__scopePopover || POPOVER_SCOPE), themeName = (0, import_core13.useThemeName)(), contents = props.children;
      return (import_react_native4.Platform.OS === "android" || import_react_native4.Platform.OS === "ios") && (contents = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(PopoverRepropagateContext, { popperContext, context, children: props.children })), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_portal2.Portal, { zIndex, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_core13.Theme, { name: themeName, children: [
        !!context.open && !context.breakpointActive && /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_stacks3.YStack,
          {
            fullscreen: !0,
            onPress: (0, import_core13.composeEventHandlers)(props.onPress, context.onOpenToggle)
          }
        ),
        contents
      ] }) });
    }
    var PopoverContentImpl = React2.forwardRef(function(props, forwardedRef) {
      let {
        trapFocus,
        __scopePopover,
        onOpenAutoFocus,
        onCloseAutoFocus,
        disableOutsidePointerEvents,
        disableFocusScope,
        onEscapeKeyDown,
        onPointerDownOutside,
        onFocusOutside,
        onInteractOutside,
        children,
        disableRemoveScroll,
        freezeContentsWhenHidden,
        ...contentProps
      } = props, context = usePopoverContext(__scopePopover), { open, keepChildrenMounted } = context, popperContext = (0, import_popper.usePopperContext)(__scopePopover || POPOVER_SCOPE), [isFullyHidden, setIsFullyHidden] = React2.useState(!context.open), contents = React2.useMemo(() => import_core13.isWeb ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("div", { style: { display: "contents" }, children }) : children, [children]);
      if (open && isFullyHidden && setIsFullyHidden(!1), !keepChildrenMounted && isFullyHidden)
        return null;
      if (context.breakpointActive) {
        let childrenWithoutScrollView = React2.Children.toArray(children).map((child) => React2.isValidElement(child) && child.type === import_react_native4.ScrollView ? child.props.children : child), content = childrenWithoutScrollView;
        return (import_react_native4.Platform.OS === "android" || import_react_native4.Platform.OS === "ios") && (content = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_popper.PopperContext.Provider,
          {
            scope: __scopePopover || POPOVER_SCOPE,
            ...popperContext,
            children: childrenWithoutScrollView
          }
        )), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_portal2.PortalItem, { hostName: `${context.id}PopoverContents`, children: content });
      }
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_animate.Animate,
        {
          type: "presence",
          present: !!open,
          keepChildrenMounted,
          onExitComplete: () => {
            setIsFullyHidden(!0);
          },
          children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            FreezeToLastContents,
            {
              freeze: !!(isFullyHidden && freezeContentsWhenHidden),
              children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                import_popper.PopperContent,
                {
                  __scopePopper: __scopePopover || POPOVER_SCOPE,
                  "data-state": getState(open),
                  id: context.contentId,
                  ref: forwardedRef,
                  ...contentProps,
                  children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                    import_remove_scroll.RemoveScroll,
                    {
                      enabled: disableRemoveScroll ? !1 : open,
                      allowPinchZoom: !0,
                      removeScrollBar: !1,
                      style: {
                        display: "contents"
                      },
                      children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                        import_focus_scope.FocusScope,
                        {
                          loop: !0,
                          enabled: disableFocusScope ? !1 : open,
                          trapped: trapFocus,
                          onMountAutoFocus: onOpenAutoFocus,
                          onUnmountAutoFocus: onCloseAutoFocus,
                          children: contents
                        }
                      )
                    }
                  )
                },
                context.contentId
              )
            }
          )
        }
      );
    }), FreezeToLastContents = (props) => {
      let last = React2.useRef();
      return props.freeze || (last.current = props.children), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_react_freeze.Freeze, { placeholder: last.current, ...props });
    }, PopoverClose = React2.forwardRef(function(props, forwardedRef) {
      let { __scopePopover, ...rest } = props, context = usePopoverContext(__scopePopover);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_stacks3.YStack,
        {
          ...rest,
          ref: forwardedRef,
          componentName: "PopoverClose",
          onPress: (0, import_core13.composeEventHandlers)(
            props.onPress,
            () => context.onOpenChange(!1)
          )
        }
      );
    }), PopoverArrow = React2.forwardRef(function(props, forwardedRef) {
      let { __scopePopover, ...rest } = props;
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_popper.PopperArrow,
        {
          __scopePopper: __scopePopover || POPOVER_SCOPE,
          componentName: "PopoverArrow",
          ...rest,
          ref: forwardedRef
        }
      );
    }), Popover = (0, import_core13.withStaticProperties)(
      function(props) {
        let {
          children,
          open: openProp,
          defaultOpen,
          onOpenChange,
          __scopePopover,
          keepChildrenMounted,
          ...restProps
        } = props, id = React2.useId(), { when, AdaptProvider } = (0, import_adapt.useAdaptParent)({
          Contents: React2.useCallback(() => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_portal2.PortalHost, { name: `${id}PopoverContents` }), [])
        }), sheetBreakpoint = when, triggerRef = React2.useRef(null), [hasCustomAnchor, setHasCustomAnchor] = React2.useState(!1), [open, setOpen] = (0, import_use_controllable_state.useControllableState)({
          prop: openProp,
          defaultProp: defaultOpen || !1,
          onChange: onOpenChange
        }), breakpointActive = useSheetBreakpointActive(sheetBreakpoint), floatingContext = (0, import_useFloatingContext.useFloatingContext)({ open, setOpen, breakpointActive }), popoverContext = {
          id,
          sheetBreakpoint,
          contentId: React2.useId(),
          triggerRef,
          open,
          breakpointActive,
          onOpenChange: setOpen,
          onOpenToggle: (0, import_core13.useEvent)(() => {
            open && breakpointActive || setOpen(!open);
          }),
          hasCustomAnchor,
          onCustomAnchorAdd: React2.useCallback(() => setHasCustomAnchor(!0), []),
          onCustomAnchorRemove: React2.useCallback(() => setHasCustomAnchor(!1), []),
          keepChildrenMounted
        }, contents = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_popper.Popper, { __scopePopper: __scopePopover || POPOVER_SCOPE, stayInFrame: !0, ...restProps, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(PopoverContext.Provider, { scope: __scopePopover, ...popoverContext, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(PopoverSheetController, { onOpenChange: setOpen, children }) }) });
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AdaptProvider, { children: import_core13.isWeb ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_floating.FloatingOverrideContext.Provider, { value: floatingContext, children: contents }) : contents });
      },
      {
        Anchor: PopoverAnchor,
        Arrow: PopoverArrow,
        Trigger: PopoverTrigger,
        Content: PopoverContent,
        Close: PopoverClose,
        Adapt: import_adapt.Adapt,
        ScrollView: import_react_native4.ScrollView,
        Sheet: import_sheet.Sheet.Controlled
      }
    );
    function getState(open) {
      return open ? "open" : "closed";
    }
    var PopoverSheetController = ({
      __scopePopover,
      ...props
    }) => {
      let context = usePopoverContext(__scopePopover), showSheet = useShowPopoverSheet(context), breakpointActive = context.breakpointActive, getShowSheet = (0, import_core13.useGet)(showSheet);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_sheet.SheetController,
        {
          onOpenChange: (val) => {
            getShowSheet() && props.onOpenChange(val);
          },
          open: context.open,
          hidden: breakpointActive === !1,
          children: props.children
        }
      );
    }, useSheetBreakpointActive = (breakpoint) => {
      let media = (0, import_core13.useMedia)();
      return typeof breakpoint == "boolean" || !breakpoint ? !!breakpoint : media[breakpoint];
    }, useShowPopoverSheet = (context) => {
      let breakpointActive = useSheetBreakpointActive(context.sheetBreakpoint);
      return context.open === !1 ? !1 : breakpointActive;
    };
  }
});

// ../popover/dist/cjs/index.native.js
var require_index_native55 = __commonJS({
  "../popover/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Popover_native(), module2.exports);
    __reExport2(src_exports2, require_useFloatingContext_native(), module2.exports);
  }
});

// ../progress/dist/cjs/Progress.native.js
var require_Progress_native = __commonJS({
  "../progress/dist/cjs/Progress.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Progress_exports = {};
    __export2(Progress_exports, {
      Progress: () => Progress,
      ProgressFrame: () => ProgressFrame,
      ProgressIndicator: () => ProgressIndicator,
      ProgressIndicatorFrame: () => ProgressIndicatorFrame,
      createProgressScope: () => createProgressScope
    });
    module2.exports = __toCommonJS2(Progress_exports);
    var import_core13 = require_index_native15(), import_create_context = require_index_native25(), import_get_token2 = require_index_native17(), import_stacks3 = require_index_native19(), React2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), PROGRESS_NAME = "Progress", [createProgressContext, createProgressScope] = (0, import_create_context.createContextScope)(PROGRESS_NAME), [ProgressProvider, useProgressContext] = createProgressContext(PROGRESS_NAME), INDICATOR_NAME = "ProgressIndicator", ProgressIndicatorFrame = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: INDICATOR_NAME,
      variants: {
        unstyled: {
          false: {
            height: "100%",
            width: "100%",
            backgrounded: !0
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), ProgressIndicator = ProgressIndicatorFrame.styleable(function(props, forwardedRef) {
      let { __scopeProgress, ...indicatorProps } = props, context = useProgressContext(INDICATOR_NAME, __scopeProgress), pct = context.max - (context.value ?? 0), x = -(context.width === 0 ? 300 : context.width) * (pct / 100);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        ProgressIndicatorFrame,
        {
          "data-state": getProgressState(context.value, context.max),
          "data-value": context.value ?? void 0,
          "data-max": context.max,
          x,
          width: context.width,
          ...!props.unstyled && {
            animateOnly: ["transform"],
            opacity: context.width === 0 ? 0 : 1
          },
          ...indicatorProps,
          ref: forwardedRef
        }
      );
    });
    function defaultGetValueLabel(value, max2) {
      return `${Math.round(value / max2 * 100)}%`;
    }
    function getProgressState(value, maxValue) {
      return value == null ? "indeterminate" : value === maxValue ? "complete" : "loading";
    }
    function isNumber(value) {
      return typeof value == "number";
    }
    function isValidMaxNumber(max2) {
      return isNumber(max2) && !isNaN(max2) && max2 > 0;
    }
    function isValidValueNumber(value, max2) {
      return isNumber(value) && !isNaN(value) && value <= max2 && value >= 0;
    }
    var DEFAULT_MAX = 100, ProgressFrame = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: "Progress",
      variants: {
        unstyled: {
          false: {
            borderRadius: 1e5,
            overflow: "hidden",
            backgrounded: !0
          }
        },
        size: {
          "...size": (val) => {
            let size2 = Math.round((0, import_core13.getVariableValue)((0, import_get_token2.getSize)(val)) * 0.25);
            return {
              height: size2,
              minWidth: (0, import_core13.getVariableValue)(size2) * 20,
              width: "100%"
            };
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), Progress = (0, import_core13.withStaticProperties)(
      ProgressFrame.styleable(function(props, forwardedRef) {
        let {
          __scopeProgress,
          value: valueProp,
          max: maxProp,
          getValueLabel = defaultGetValueLabel,
          size: size2 = "$true",
          ...progressProps
        } = props, max2 = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX, value = isValidValueNumber(valueProp, max2) ? valueProp : null, valueLabel = isNumber(value) ? getValueLabel(value, max2) : void 0, [width, setWidth] = React2.useState(0);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(ProgressProvider, { scope: __scopeProgress, value, max: max2, width, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          ProgressFrame,
          {
            "aria-valuemax": max2,
            "aria-valuemin": 0,
            "aria-valuenow": isNumber(value) ? value : void 0,
            "aria-valuetext": valueLabel,
            role: "progressbar",
            "data-state": getProgressState(value, max2),
            "data-value": value ?? void 0,
            "data-max": max2,
            ...progressProps.unstyled !== !0 && {
              size: size2
            },
            ...progressProps,
            onLayout: (e) => {
              var _a;
              setWidth(e.nativeEvent.layout.width), (_a = progressProps.onLayout) == null || _a.call(progressProps, e);
            },
            ref: forwardedRef
          }
        ) });
      }),
      {
        Indicator: ProgressIndicator
      }
    );
  }
});

// ../progress/dist/cjs/index.native.js
var require_index_native56 = __commonJS({
  "../progress/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Progress_native(), module2.exports);
  }
});

// ../radio-group/dist/cjs/RadioGroup.native.js
var require_RadioGroup_native = __commonJS({
  "../radio-group/dist/cjs/RadioGroup.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), RadioGroup_exports = {};
    __export2(RadioGroup_exports, {
      RadioGroup: () => RadioGroup,
      createRadioGroupScope: () => createRadioGroupScope
    });
    module2.exports = __toCommonJS2(RadioGroup_exports);
    var import_core13 = require_index_native15(), import_create_context = require_index_native25(), import_focusable2 = require_index_native44(), import_get_token2 = require_index_native17(), import_label = require_index_native45(), import_stacks3 = require_index_native19(), import_use_controllable_state = require_index_native12(), import_use_previous = require_index_native46(), React2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), RADIO_GROUP_NAME = "RadioGroup", ARROW_KEYS = ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"], [createRadioGroupContext, createRadioGroupScope] = (0, import_create_context.createContextScope)(RADIO_GROUP_NAME), [RadioGroupProvider, useRadioGroupContext] = createRadioGroupContext(RADIO_GROUP_NAME), getState = (checked) => checked ? "checked" : "unchecked", RADIO_GROUP_INDICATOR_NAME = "RadioGroupIndicator", RadioIndicatorFrame = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: RADIO_GROUP_INDICATOR_NAME,
      variants: {
        unstyled: {
          false: {
            width: "33%",
            height: "33%",
            borderRadius: 1e3,
            backgroundColor: "$color",
            pressTheme: !0
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), RadioIndicator = RadioIndicatorFrame.extractable(
      React2.forwardRef(
        (props, forwardedRef) => {
          let { __scopeRadioGroupItem, forceMount, disabled, ...indicatorProps } = props, { checked } = useRadioGroupItemContext(
            RADIO_GROUP_INDICATOR_NAME,
            __scopeRadioGroupItem
          );
          return forceMount || checked ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            RadioIndicatorFrame,
            {
              "data-state": getState(checked),
              "data-disabled": disabled ? "" : void 0,
              ...indicatorProps,
              ref: forwardedRef
            }
          ) : null;
        }
      )
    );
    RadioIndicator.displayName = RADIO_GROUP_INDICATOR_NAME;
    var RADIO_GROUP_ITEM_NAME = "RadioGroupItem", [RadioGroupItemProvider, useRadioGroupItemContext] = createRadioGroupContext(RADIO_GROUP_NAME), RadioGroupItemFrame = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: RADIO_GROUP_ITEM_NAME,
      tag: "button",
      variants: {
        unstyled: {
          false: {
            size: "$true",
            borderRadius: 1e3,
            backgroundColor: "$background",
            alignItems: "center",
            justifyContent: "center",
            borderWidth: 1,
            borderColor: "$borderColor",
            padding: 0,
            hoverStyle: {
              borderColor: "$borderColorHover",
              backgroundColor: "$backgroundHover"
            },
            focusStyle: {
              borderColor: "$borderColorHover",
              backgroundColor: "$backgroundHover",
              outlineStyle: "solid",
              outlineWidth: 2,
              outlineColor: "$borderColorFocus"
            },
            pressStyle: {
              borderColor: "$borderColorFocus",
              backgroundColor: "$backgroundFocus"
            }
          }
        },
        disabled: {
          true: {
            pointerEvents: "none",
            userSelect: "none",
            cursor: "not-allowed",
            hoverStyle: {
              borderColor: "$borderColor",
              backgroundColor: "$background"
            },
            pressStyle: {
              borderColor: "$borderColor",
              backgroundColor: "$backgroundColor"
            },
            focusStyle: {
              outlineWidth: 0
            }
          }
        },
        size: {
          "...size": (value, { props }) => {
            let size2 = Math.floor(
              (0, import_core13.getVariableValue)((0, import_get_token2.getSize)(value)) * (props.scaleSize ?? 0.5)
            );
            return {
              width: size2,
              height: size2
            };
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), RadioGroupItem = RadioGroupItemFrame.extractable(
      React2.forwardRef(
        (props, forwardedRef) => {
          let {
            __scopeRadioGroup,
            value,
            labelledBy: ariaLabelledby,
            disabled: itemDisabled,
            ...itemProps
          } = props, {
            value: groupValue,
            disabled,
            required,
            onChange,
            name,
            native,
            accentColor
          } = useRadioGroupContext(RADIO_GROUP_ITEM_NAME, __scopeRadioGroup), [button, setButton] = React2.useState(null), hasConsumerStoppedPropagationRef = React2.useRef(!1), ref = React2.useRef(null), composedRefs = (0, import_core13.useComposedRefs)(forwardedRef, (node) => setButton(node), ref), isArrowKeyPressedRef = React2.useRef(!1), isFormControl = import_core13.isWeb ? button ? !!button.closest("form") : !0 : !1, checked = groupValue === value, labelId = (0, import_label.useLabelContext)(button), labelledBy = ariaLabelledby || labelId;
          React2.useEffect(() => {
            if (import_core13.isWeb) {
              let handleKeyDown = (event) => {
                ARROW_KEYS.includes(event.key) && (isArrowKeyPressedRef.current = !0);
              }, handleKeyUp = () => {
                isArrowKeyPressedRef.current = !1;
              };
              return document.addEventListener("keydown", handleKeyDown), document.addEventListener("keyup", handleKeyUp), () => {
                document.removeEventListener("keydown", handleKeyDown), document.removeEventListener("keyup", handleKeyUp);
              };
            }
          }, []), React2.useEffect(() => {
            if (props.id && !disabled)
              return (0, import_focusable2.registerFocusable)(props.id, {
                focusAndSelect: () => {
                  onChange == null || onChange(value);
                },
                focus: () => {
                }
              });
          }, [props.id, value, disabled]);
          let isDisabled = disabled || itemDisabled;
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(RadioGroupItemProvider, { checked, scope: __scopeRadioGroup, children: import_core13.isWeb && native ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            BubbleInput,
            {
              control: button,
              bubbles: !hasConsumerStoppedPropagationRef.current,
              name,
              value,
              checked,
              required,
              disabled: isDisabled,
              id: props.id,
              accentColor
            }
          ) : /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              RadioGroupItemFrame,
              {
                "data-state": getState(checked),
                "data-disabled": isDisabled ? "" : void 0,
                role: "radio",
                "aria-labelledby": labelledBy,
                "aria-checked": checked,
                "aria-required": required,
                disabled: isDisabled,
                ref: composedRefs,
                ...import_core13.isWeb && {
                  type: "button",
                  value
                },
                ...itemProps,
                onPress: (0, import_core13.composeEventHandlers)(props.onPress, (event) => {
                  checked || onChange == null || onChange(value), isFormControl && (hasConsumerStoppedPropagationRef.current = event.isPropagationStopped(), hasConsumerStoppedPropagationRef.current || event.stopPropagation());
                }),
                ...import_core13.isWeb && {
                  onKeyDown: (0, import_core13.composeEventHandlers)(
                    props.onKeyDown,
                    (event) => {
                      event.key === "Enter" && event.preventDefault();
                    }
                  ),
                  onFocus: (0, import_core13.composeEventHandlers)(itemProps.onFocus, () => {
                    var _a;
                    isArrowKeyPressedRef.current && ((_a = ref.current) == null || _a.click());
                  })
                }
              }
            ),
            isFormControl && /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              BubbleInput,
              {
                isHidden: !0,
                control: button,
                bubbles: !hasConsumerStoppedPropagationRef.current,
                name,
                value,
                checked,
                required,
                disabled: isDisabled
              }
            )
          ] }) });
        }
      )
    ), BubbleInput = (props) => {
      let { checked, bubbles = !0, control, isHidden, accentColor, ...inputProps } = props, ref = React2.useRef(null), prevChecked = (0, import_use_previous.usePrevious)(checked);
      return React2.useEffect(() => {
        let input = ref.current, inputProto = window.HTMLInputElement.prototype, setChecked = Object.getOwnPropertyDescriptor(
          inputProto,
          "checked"
        ).set;
        if (prevChecked !== checked && setChecked) {
          let event = new Event("click", { bubbles });
          setChecked.call(input, checked), input.dispatchEvent(event);
        }
      }, [prevChecked, checked, bubbles]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        "input",
        {
          type: "radio",
          defaultChecked: checked,
          ...inputProps,
          tabIndex: -1,
          ref,
          "aria-hidden": isHidden,
          style: {
            ...isHidden ? {
              // ...controlSize,
              position: "absolute",
              pointerEvents: "none",
              opacity: 0,
              margin: 0
            } : {
              appearance: "auto",
              accentColor
            },
            ...props.style
          }
        }
      );
    }, RadioGroupFrame = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: RADIO_GROUP_NAME,
      variants: {
        orientation: {
          horizontal: {
            flexDirection: "row",
            spaceDirection: "horizontal"
          },
          vertical: {
            flexDirection: "column",
            spaceDirection: "vertical"
          }
        }
      }
    }), RadioGroup = (0, import_core13.withStaticProperties)(
      RadioGroupFrame.extractable(
        React2.forwardRef(
          (props, forwardedRef) => {
            let {
              __scopeRadioGroup,
              value: valueProp,
              defaultValue,
              onValueChange,
              disabled = !1,
              required = !1,
              name,
              orientation,
              native,
              accentColor,
              ...radioGroupProps
            } = props, [value, setValue] = (0, import_use_controllable_state.useControllableState)({
              prop: valueProp,
              defaultProp: defaultValue,
              onChange: onValueChange
            });
            return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              RadioGroupProvider,
              {
                scope: __scopeRadioGroup,
                value,
                required,
                onChange: setValue,
                disabled,
                name,
                native,
                accentColor,
                children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                  RadioGroupFrame,
                  {
                    "aria-valuetext": value,
                    role: "radiogroup",
                    "aria-orientation": orientation,
                    ref: forwardedRef,
                    orientation,
                    "data-disabled": disabled ? "" : void 0,
                    ...radioGroupProps
                  }
                )
              }
            );
          }
        )
      ),
      {
        Indicator: RadioIndicator,
        Item: RadioGroupItem
      }
    );
    RadioGroup.displayName = RADIO_GROUP_NAME;
  }
});

// ../radio-group/dist/cjs/index.native.js
var require_index_native57 = __commonJS({
  "../radio-group/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_RadioGroup_native(), module2.exports);
  }
});

// ../separator/dist/cjs/Separator.native.js
var require_Separator_native = __commonJS({
  "../separator/dist/cjs/Separator.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Separator_exports = {};
    __export2(Separator_exports, {
      Separator: () => Separator
    });
    module2.exports = __toCommonJS2(Separator_exports);
    var import_core13 = require_index_native15(), Separator = (0, import_core13.styled)(import_core13.Stack, {
      name: "Separator",
      borderColor: "$borderColor",
      flexShrink: 0,
      borderWidth: 0,
      flex: 1,
      height: 0,
      maxHeight: 0,
      borderBottomWidth: 1,
      y: -0.5,
      variants: {
        vertical: {
          true: {
            y: 0,
            x: -0.5,
            height: import_core13.isWeb ? "initial" : "auto",
            // maxHeight auto WILL BE passed to style attribute, but for some reason not used?
            // almost seems like a react or browser bug, but for now `initial` works
            // also, it doesn't happen for `height`, but for consistency using the same values
            maxHeight: import_core13.isWeb ? "initial" : "auto",
            width: 0,
            maxWidth: 0,
            borderBottomWidth: 0,
            borderRightWidth: 1
          }
        }
      }
    });
  }
});

// ../separator/dist/cjs/index.native.js
var require_index_native58 = __commonJS({
  "../separator/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Separator_native(), module2.exports);
  }
});

// ../select/dist/cjs/constants.native.js
var require_constants_native4 = __commonJS({
  "../select/dist/cjs/constants.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), constants_exports = {};
    __export2(constants_exports, {
      FALLBACK_THRESHOLD: () => FALLBACK_THRESHOLD,
      MIN_HEIGHT: () => MIN_HEIGHT,
      SCROLL_ARROW_THRESHOLD: () => SCROLL_ARROW_THRESHOLD,
      SCROLL_ARROW_VELOCITY: () => SCROLL_ARROW_VELOCITY,
      SELECT_NAME: () => SELECT_NAME,
      VIEWPORT_NAME: () => VIEWPORT_NAME,
      WINDOW_PADDING: () => WINDOW_PADDING
    });
    module2.exports = __toCommonJS2(constants_exports);
    var SELECT_NAME = "Select", WINDOW_PADDING = 8, SCROLL_ARROW_VELOCITY = 8, SCROLL_ARROW_THRESHOLD = 8, MIN_HEIGHT = 80, FALLBACK_THRESHOLD = 16, VIEWPORT_NAME = "SelectViewport";
  }
});

// ../select/dist/cjs/context.native.js
var require_context_native = __commonJS({
  "../select/dist/cjs/context.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), context_exports = {};
    __export2(context_exports, {
      ForwardSelectContext: () => ForwardSelectContext,
      SelectItemParentProvider: () => SelectItemParentProvider,
      SelectProvider: () => SelectProvider,
      createSelectContext: () => createSelectContext,
      createSelectItemParentContext: () => createSelectItemParentContext,
      createSelectItemParentScope: () => createSelectItemParentScope,
      createSelectScope: () => createSelectScope,
      useSelectContext: () => useSelectContext,
      useSelectItemParentContext: () => useSelectItemParentContext
    });
    module2.exports = __toCommonJS2(context_exports);
    var import_create_context = require_index_native25(), import_constants = require_constants_native4(), import_jsx_runtime6 = require("react/jsx-runtime"), [createSelectContext, createSelectScope] = (0, import_create_context.createContextScope)(import_constants.SELECT_NAME), [SelectProvider, useSelectContext] = createSelectContext(import_constants.SELECT_NAME), [createSelectItemParentContext, createSelectItemParentScope] = (0, import_create_context.createContextScope)(import_constants.SELECT_NAME), [SelectItemParentProvider, useSelectItemParentContext] = createSelectContext(import_constants.SELECT_NAME), ForwardSelectContext = ({
      __scopeSelect,
      context,
      itemContext,
      children
    }) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(SelectProvider, { isInSheet: !0, scope: __scopeSelect, ...context, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(SelectItemParentProvider, { scope: __scopeSelect, ...itemContext, children }) });
  }
});

// ../select/dist/cjs/SelectContent.native.js
var require_SelectContent_native = __commonJS({
  "../select/dist/cjs/SelectContent.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SelectContent_native_exports = {};
    __export2(SelectContent_native_exports, {
      SelectContent: () => SelectContent
    });
    module2.exports = __toCommonJS2(SelectContent_native_exports);
    var SelectContent = ({ children }) => children;
  }
});

// ../select/dist/cjs/SelectImpl.native.js
var require_SelectImpl_native = __commonJS({
  "../select/dist/cjs/SelectImpl.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SelectImpl_native_exports = {};
    __export2(SelectImpl_native_exports, {
      SelectInlineImpl: () => SelectInlineImpl
    });
    module2.exports = __toCommonJS2(SelectImpl_native_exports);
    var import_jsx_runtime6 = require("react/jsx-runtime"), SelectInlineImpl = (props) => (process.env.NODE_ENV === "development" && console.warn("Sheet not implemented inline on native"), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, { children: props.children }));
  }
});

// ../select/dist/cjs/SelectItem.native.js
var require_SelectItem_native = __commonJS({
  "../select/dist/cjs/SelectItem.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SelectItem_exports = {};
    __export2(SelectItem_exports, {
      SelectItem: () => SelectItem,
      SelectItemContextProvider: () => SelectItemContextProvider,
      useSelectItemContext: () => useSelectItemContext
    });
    module2.exports = __toCommonJS2(SelectItem_exports);
    var import_compose_refs = require_index_native5(), import_core13 = require_index_native15(), import_list_item = require_index_native51(), React2 = __toESM2(require("react")), import_context = require_context_native(), import_jsx_runtime6 = require("react/jsx-runtime"), ITEM_NAME = "SelectItem", [SelectItemContextProvider, useSelectItemContext] = (0, import_context.createSelectContext)(ITEM_NAME), SelectItem = import_list_item.ListItemFrame.styleable(
      function(props, forwardedRef) {
        let {
          __scopeSelect,
          value,
          disabled = !1,
          textValue: textValueProp,
          index,
          ...restProps
        } = props, { props: listItemProps } = (0, import_list_item.useListItem)({
          ...!props.unstyled && {
            ellipse: !0
          },
          ...restProps
        }), context = (0, import_context.useSelectItemParentContext)(ITEM_NAME, __scopeSelect), {
          setSelectedIndex,
          listRef,
          setOpen,
          onChange,
          activeIndexSubscribe,
          valueSubscribe,
          allowMouseUpRef,
          allowSelectRef,
          setValueAtIndex,
          selectTimeoutRef,
          dataRef,
          interactions,
          shouldRenderWebNative,
          size: size2,
          onActiveChange,
          initialValue
        } = context, [isSelected, setSelected] = React2.useState(initialValue === value), [isActive, setActive] = React2.useState(!1);
        React2.useEffect(() => activeIndexSubscribe((i) => {
          let isActive2 = index === i;
          setActive(isActive2), isActive2 && onActiveChange(value, index);
        }), [index]), React2.useEffect(() => valueSubscribe((val) => {
          setSelected(val === value);
        }), [value]);
        let textId = React2.useId(), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, (node) => {
          import_core13.isWeb && node instanceof HTMLElement && listRef && (listRef.current[index] = node);
        });
        (0, import_core13.useIsomorphicLayoutEffect)(() => {
          setValueAtIndex(index, value);
        }, [index, setValueAtIndex, value]);
        function handleSelect() {
          setSelectedIndex(index), onChange(value), setOpen(!1);
        }
        let selectItemProps = React2.useMemo(() => interactions ? interactions.getItemProps({
          onTouchMove() {
            allowSelectRef.current = !0, allowMouseUpRef.current = !1;
          },
          onTouchEnd() {
            allowSelectRef.current = !1, allowMouseUpRef.current = !0;
          },
          onKeyDown(event) {
            event.key === "Enter" || event.key === " " && !(dataRef != null && dataRef.current.typing) ? (event.preventDefault(), handleSelect()) : allowSelectRef.current = !0;
          },
          onClick() {
            allowSelectRef.current && handleSelect();
          },
          onMouseUp() {
            allowMouseUpRef.current && (allowSelectRef.current && handleSelect(), clearTimeout(selectTimeoutRef.current), selectTimeoutRef.current = setTimeout(() => {
              allowSelectRef.current = !0;
            }));
          }
        }) : {
          onPress: handleSelect
        }, [handleSelect]);
        return (0, import_core13.useIsomorphicLayoutEffect)(() => {
          var _a;
          isActive && ((_a = listRef == null ? void 0 : listRef.current[index]) == null || _a.focus());
        }, [isActive]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          SelectItemContextProvider,
          {
            scope: __scopeSelect,
            value,
            textId: textId || "",
            isSelected,
            children: shouldRenderWebNative ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("option", { value, children: props.children }) : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              import_list_item.ListItemFrame,
              {
                tag: "div",
                componentName: ITEM_NAME,
                ref: composedRefs,
                "aria-labelledby": textId,
                "aria-selected": isSelected,
                "data-state": isSelected ? "active" : "inactive",
                "aria-disabled": disabled || void 0,
                "data-disabled": disabled ? "" : void 0,
                tabIndex: disabled ? void 0 : -1,
                ...!props.unstyled && {
                  backgrounded: !0,
                  pressTheme: !0,
                  hoverTheme: !0,
                  focusTheme: !0,
                  cursor: "default",
                  outlineWidth: 0,
                  size: size2
                },
                ...listItemProps,
                ...selectItemProps
              }
            )
          }
        );
      },
      {
        disableTheme: !0
      }
    );
  }
});

// ../select/dist/cjs/SelectItemText.native.js
var require_SelectItemText_native = __commonJS({
  "../select/dist/cjs/SelectItemText.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SelectItemText_exports = {};
    __export2(SelectItemText_exports, {
      ITEM_TEXT_NAME: () => ITEM_TEXT_NAME,
      SelectItemText: () => SelectItemText,
      SelectItemTextFrame: () => SelectItemTextFrame
    });
    module2.exports = __toCommonJS2(SelectItemText_exports);
    var import_compose_refs = require_index_native5(), import_core13 = require_index_native15(), import_text2 = require_index_native21(), React2 = __toESM2(require("react")), import_context = require_context_native(), import_SelectItem = require_SelectItem_native(), import_jsx_runtime6 = require("react/jsx-runtime"), ITEM_TEXT_NAME = "SelectItemText", SelectItemTextFrame = (0, import_core13.styled)(import_text2.SizableText, {
      name: ITEM_TEXT_NAME,
      variants: {
        unstyled: {
          false: {
            userSelect: "none",
            color: "$color",
            ellipse: !0
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), SelectItemText = SelectItemTextFrame.styleable(function(props, forwardedRef) {
      let { __scopeSelect, className, ...itemTextProps } = props, context = (0, import_context.useSelectContext)(ITEM_TEXT_NAME, __scopeSelect), itemParentContext = (0, import_context.useSelectItemParentContext)(ITEM_TEXT_NAME, __scopeSelect), ref = React2.useRef(null), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, ref), itemContext = (0, import_SelectItem.useSelectItemContext)(ITEM_TEXT_NAME, __scopeSelect), contents = React2.useRef();
      return contents.current = /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        SelectItemTextFrame,
        {
          className,
          size: itemParentContext.size,
          id: itemContext.textId,
          ...itemTextProps,
          ref: composedRefs
        }
      ), React2.useEffect(() => {
        itemParentContext.initialValue === itemContext.value && !context.selectedIndex && context.setSelectedItem(contents.current);
      }, []), React2.useEffect(() => itemParentContext.valueSubscribe((val) => {
        val === itemContext.value && context.setSelectedItem(contents.current);
      }), [itemContext.value]), itemParentContext.shouldRenderWebNative ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, { children: props.children }) : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, { children: contents.current });
    });
  }
});

// ../select/dist/cjs/SelectScrollButton.native.js
var require_SelectScrollButton_native = __commonJS({
  "../select/dist/cjs/SelectScrollButton.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SelectScrollButton_native_exports = {};
    __export2(SelectScrollButton_native_exports, {
      SelectScrollDownButton: () => SelectScrollDownButton,
      SelectScrollUpButton: () => SelectScrollUpButton
    });
    module2.exports = __toCommonJS2(SelectScrollButton_native_exports);
    var SelectScrollUpButton = (_) => null, SelectScrollDownButton = (_) => null;
  }
});

// ../select/dist/cjs/SelectTrigger.native.js
var require_SelectTrigger_native = __commonJS({
  "../select/dist/cjs/SelectTrigger.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SelectTrigger_exports = {};
    __export2(SelectTrigger_exports, {
      SelectTrigger: () => SelectTrigger
    });
    module2.exports = __toCommonJS2(SelectTrigger_exports);
    var import_compose_refs = require_index_native5(), import_list_item = require_index_native51(), React2 = __toESM2(require("react")), import_context = require_context_native(), import_jsx_runtime6 = require("react/jsx-runtime"), TRIGGER_NAME = "SelectTrigger", SelectTrigger = React2.forwardRef(
      function(props, forwardedRef) {
        var _a;
        let { __scopeSelect, disabled = !1, unstyled = !1, ...triggerProps } = props, context = (0, import_context.useSelectContext)(TRIGGER_NAME, __scopeSelect), itemParentContext = (0, import_context.useSelectItemParentContext)(TRIGGER_NAME, __scopeSelect), composedRefs = (0, import_compose_refs.useComposedRefs)(
          forwardedRef,
          (_a = context.floatingContext) == null ? void 0 : _a.refs.setReference
        );
        return itemParentContext.shouldRenderWebNative ? null : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_list_item.ListItem,
          {
            componentName: TRIGGER_NAME,
            unstyled,
            ...!unstyled && {
              backgrounded: !0,
              radiused: !0,
              hoverTheme: !0,
              pressTheme: !0,
              focusable: !0,
              focusStyle: {
                outlineStyle: "solid",
                outlineWidth: 2,
                outlineColor: "$borderColorFocus"
              },
              borderWidth: 1
            },
            size: itemParentContext.size,
            "aria-expanded": context.open,
            "aria-autocomplete": "none",
            dir: context.dir,
            disabled,
            "data-disabled": disabled ? "" : void 0,
            ...triggerProps,
            ref: composedRefs,
            onPress() {
              itemParentContext.setOpen(!context.open);
            }
          }
        );
      }
    );
  }
});

// ../select/dist/cjs/SelectViewport.native.js
var require_SelectViewport_native = __commonJS({
  "../select/dist/cjs/SelectViewport.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SelectViewport_native_exports = {};
    __export2(SelectViewport_native_exports, {
      SelectViewport: () => SelectViewport
    });
    module2.exports = __toCommonJS2(SelectViewport_native_exports);
    var import_adapt = require_index_native24(), import_core13 = require_index_native15(), import_portal2 = require_index_native29(), React2 = __toESM2(require("react")), import_constants = require_constants_native4(), import_context = require_context_native(), import_jsx_runtime6 = require("react/jsx-runtime"), SelectViewport = (props) => {
      let { __scopeSelect, children } = props, context = (0, import_context.useSelectContext)(import_constants.VIEWPORT_NAME, __scopeSelect), itemParentContext = (0, import_context.useSelectItemParentContext)(import_constants.VIEWPORT_NAME, __scopeSelect), themeName = (0, import_core13.useThemeName)(), adaptContext = React2.useContext(import_adapt.AdaptParentContext);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_portal2.PortalItem, { hostName: `${context.scopeKey}SheetContents`, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_core13.Theme, { name: themeName, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_context.ForwardSelectContext,
        {
          __scopeSelect,
          itemContext: itemParentContext,
          context,
          children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_adapt.AdaptParentContext.Provider, { value: adaptContext, children })
        }
      ) }) });
    };
    SelectViewport.displayName = import_constants.VIEWPORT_NAME;
  }
});

// ../select/dist/cjs/useSelectBreakpointActive.native.js
var require_useSelectBreakpointActive_native = __commonJS({
  "../select/dist/cjs/useSelectBreakpointActive.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), useSelectBreakpointActive_exports = {};
    __export2(useSelectBreakpointActive_exports, {
      useSelectBreakpointActive: () => useSelectBreakpointActive,
      useShowSelectSheet: () => useShowSelectSheet
    });
    module2.exports = __toCommonJS2(useSelectBreakpointActive_exports);
    var import_core13 = require_index_native15(), useSelectBreakpointActive = (sheetBreakpoint) => {
      let media = (0, import_core13.useMedia)();
      return sheetBreakpoint ? sheetBreakpoint === !0 ? !0 : sheetBreakpoint ? media[sheetBreakpoint] : !1 : !1;
    }, useShowSelectSheet = (context) => {
      let breakpointActive = useSelectBreakpointActive(context.sheetBreakpoint);
      return context.open === !1 ? !1 : breakpointActive;
    };
  }
});

// ../select/dist/cjs/Select.native.js
var require_Select_native = __commonJS({
  "../select/dist/cjs/Select.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Select_exports = {};
    __export2(Select_exports, {
      Select: () => Select,
      SelectGroupFrame: () => SelectGroupFrame,
      SelectIcon: () => SelectIcon,
      SelectSeparator: () => SelectSeparator
    });
    module2.exports = __toCommonJS2(Select_exports);
    var import_adapt = require_index_native24(), import_compose_refs = require_index_native5(), import_core13 = require_index_native15(), import_get_token2 = require_index_native17(), import_list_item = require_index_native51(), import_portal2 = require_index_native29(), import_separator = require_index_native58(), import_sheet = require_index_native34(), import_stacks3 = require_index_native19(), import_text2 = require_index_native21(), import_use_controllable_state = require_index_native12(), React2 = __toESM2(require("react")), import_constants = require_constants_native4(), import_context = require_context_native(), import_SelectContent = require_SelectContent_native(), import_SelectImpl = require_SelectImpl_native(), import_SelectItem = require_SelectItem_native(), import_SelectItemText = require_SelectItemText_native(), import_SelectScrollButton = require_SelectScrollButton_native(), import_SelectTrigger = require_SelectTrigger_native(), import_SelectViewport = require_SelectViewport_native(), import_useSelectBreakpointActive = require_useSelectBreakpointActive_native(), import_jsx_runtime6 = require("react/jsx-runtime"), VALUE_NAME = "SelectValue", SelectValueFrame = (0, import_core13.styled)(import_text2.SizableText, {
      name: VALUE_NAME,
      userSelect: "none"
    }), SelectValue = SelectValueFrame.styleable(function({
      __scopeSelect,
      children: childrenProp,
      placeholder,
      ...props
    }, forwardedRef) {
      let context = (0, import_context.useSelectContext)(VALUE_NAME, __scopeSelect), itemParentContext = (0, import_context.useSelectItemParentContext)(VALUE_NAME, __scopeSelect), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, context.onValueNodeChange), children = childrenProp ?? context.selectedItem, selectValueChildren = context.value == null || context.value === "" ? placeholder ?? children : children;
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        SelectValueFrame,
        {
          ...!props.unstyled && {
            size: itemParentContext.size,
            ellipse: !0
          },
          ref: composedRefs,
          pointerEvents: "none",
          ...props,
          children: unwrapSelectItem(selectValueChildren)
        }
      );
    });
    function unwrapSelectItem(selectValueChildren) {
      return React2.Children.map(selectValueChildren, (child) => {
        var _a, _b, _c;
        if (child) {
          if (((_b = (_a = child.type) == null ? void 0 : _a.staticConfig) == null ? void 0 : _b.componentName) === import_SelectItemText.ITEM_TEXT_NAME)
            return child.props.children;
          if ((_c = child.props) != null && _c.children)
            return unwrapSelectItem(child.props.children);
        }
        return child;
      });
    }
    var SelectIcon = (0, import_core13.styled)(import_stacks3.XStack, {
      name: "SelectIcon",
      // @ts-ignore
      "aria-hidden": !0,
      children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_text2.Paragraph, { children: "\u25BC" })
    }), ITEM_INDICATOR_NAME = "SelectItemIndicator", SelectItemIndicatorFrame = (0, import_core13.styled)(import_stacks3.XStack, {
      name: import_SelectItemText.ITEM_TEXT_NAME
    }), SelectItemIndicator = React2.forwardRef(
      (props, forwardedRef) => {
        let { __scopeSelect, ...itemIndicatorProps } = props, context = (0, import_context.useSelectItemParentContext)(ITEM_INDICATOR_NAME, __scopeSelect), itemContext = (0, import_SelectItem.useSelectItemContext)(ITEM_INDICATOR_NAME, __scopeSelect);
        return context.shouldRenderWebNative ? null : itemContext.isSelected ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(SelectItemIndicatorFrame, { "aria-hidden": !0, ...itemIndicatorProps, ref: forwardedRef }) : null;
      }
    );
    SelectItemIndicator.displayName = ITEM_INDICATOR_NAME;
    var GROUP_NAME = "SelectGroup", [SelectGroupContextProvider, useSelectGroupContext] = (0, import_context.createSelectContext)(GROUP_NAME), SelectGroupFrame = (0, import_core13.styled)(import_stacks3.YStack, {
      name: GROUP_NAME,
      width: "100%"
    }), NativeSelectTextFrame = (0, import_core13.styled)(import_text2.SizableText, {
      tag: "select",
      backgroundColor: "$background",
      borderColor: "$borderColor",
      hoverStyle: {
        backgroundColor: "$backgroundHover"
      }
    }), NativeSelectFrame = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: "NativeSelect",
      bordered: !0,
      userSelect: "none",
      outlineWidth: 0,
      paddingRight: 10,
      variants: {
        size: {
          "...size": (val, extras) => {
            let { tokens } = extras, paddingHorizontal = (0, import_core13.getVariableValue)(tokens.space[val]);
            return {
              borderRadius: tokens.radius[val] ?? val,
              minHeight: tokens.size[val],
              paddingRight: paddingHorizontal + 20,
              paddingLeft: paddingHorizontal,
              paddingVertical: (0, import_get_token2.getSpace)(val, {
                shift: -3
              })
            };
          }
        }
      },
      defaultVariants: {
        size: "$2"
      }
    }), SelectGroup = React2.forwardRef(
      (props, forwardedRef) => {
        let { __scopeSelect, ...groupProps } = props, groupId = React2.useId(), context = (0, import_context.useSelectContext)(GROUP_NAME, __scopeSelect), itemParentContext = (0, import_context.useSelectItemParentContext)(GROUP_NAME, __scopeSelect), size2 = itemParentContext.size ?? "$true", nativeSelectRef = React2.useRef(null), content = function() {
          return itemParentContext.shouldRenderWebNative ? (
            // @ts-expect-error until we support typing based on tag
            /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(NativeSelectFrame, { asChild: !0, size: size2, value: context.value, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              NativeSelectTextFrame,
              {
                onChange: (event) => {
                  itemParentContext.onChange(event.currentTarget.value);
                },
                size: size2,
                ref: nativeSelectRef,
                style: {
                  color: "var(--color)",
                  // @ts-ignore
                  appearance: "none"
                },
                children: props.children
              }
            ) })
          ) : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            SelectGroupFrame,
            {
              role: "group",
              "aria-labelledby": groupId,
              ...groupProps,
              ref: forwardedRef
            }
          );
        }();
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(SelectGroupContextProvider, { scope: __scopeSelect, id: groupId || "", children: content });
      }
    );
    SelectGroup.displayName = GROUP_NAME;
    var LABEL_NAME = "SelectLabel", SelectLabel = React2.forwardRef(
      (props, forwardedRef) => {
        let { __scopeSelect, ...labelProps } = props, context = (0, import_context.useSelectItemParentContext)(LABEL_NAME, __scopeSelect), groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);
        return context.shouldRenderWebNative ? null : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_list_item.ListItem,
          {
            tag: "div",
            componentName: LABEL_NAME,
            fontWeight: "800",
            id: groupContext.id,
            size: context.size,
            ...labelProps,
            ref: forwardedRef
          }
        );
      }
    );
    SelectLabel.displayName = LABEL_NAME;
    var SelectSeparator = (0, import_core13.styled)(import_separator.Separator, {
      name: "SelectSeparator"
    }), SelectSheetController = (props) => {
      let context = (0, import_context.useSelectContext)("SelectSheetController", props.__scopeSelect), showSheet = (0, import_useSelectBreakpointActive.useShowSelectSheet)(context), breakpointActive = (0, import_useSelectBreakpointActive.useSelectBreakpointActive)(context.sheetBreakpoint), getShowSheet = (0, import_core13.useGet)(showSheet);
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        import_sheet.SheetController,
        {
          onOpenChange: (val) => {
            getShowSheet() && props.onOpenChange(val);
          },
          open: context.open,
          hidden: breakpointActive === !1,
          children: props.children
        }
      );
    }, SelectSheetImpl = (props) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, { children: props.children }), Select = (0, import_core13.withStaticProperties)(
      (props) => {
        let {
          __scopeSelect,
          native,
          children,
          open: openProp,
          defaultOpen,
          onOpenChange,
          value: valueProp,
          defaultValue,
          onValueChange,
          disablePreventBodyScroll,
          size: sizeProp = "$true",
          onActiveChange,
          dir
        } = props, id = React2.useId(), scopeKey = __scopeSelect ? Object.keys(__scopeSelect)[0] ?? id : id, { when, AdaptProvider } = (0, import_adapt.useAdaptParent)({
          Contents: React2.useCallback(
            () => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_portal2.PortalHost, { name: `${scopeKey}SheetContents` }),
            [scopeKey]
          )
        }), sheetBreakpoint = when, SelectImpl = (0, import_useSelectBreakpointActive.useSelectBreakpointActive)(sheetBreakpoint) || !import_core13.isWeb ? SelectSheetImpl : import_SelectImpl.SelectInlineImpl, forceUpdate = React2.useReducer(() => ({}), {})[1], [selectedItem, setSelectedItem] = React2.useState(null), [open, setOpen] = (0, import_use_controllable_state.useControllableState)({
          prop: openProp,
          defaultProp: defaultOpen || !1,
          onChange: onOpenChange
        }), [value, setValue] = (0, import_use_controllable_state.useControllableState)({
          prop: valueProp,
          defaultProp: defaultValue || "",
          onChange: onValueChange,
          transition: !0
        });
        React2.useEffect(() => {
          open && emitValue(value);
        }, [open]);
        let [activeIndex, setActiveIndex] = React2.useState(0), [emitValue, valueSubscribe] = useEmitter(), [emitActiveIndex, activeIndexSubscribe] = useEmitter(), selectedIndexRef = React2.useRef(null), activeIndexRef = React2.useRef(null), listContentRef = React2.useRef([]), [selectedIndex, setSelectedIndex] = React2.useState(0), [valueNode, setValueNode] = React2.useState(null);
        (0, import_core13.useIsomorphicLayoutEffect)(() => {
          selectedIndexRef.current = selectedIndex, activeIndexRef.current = activeIndex;
        });
        let shouldRenderWebNative = import_core13.isWeb && (native === !0 || native === "web" || Array.isArray(native) && native.includes("web"));
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(AdaptProvider, { children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_context.SelectItemParentProvider,
          {
            scope: __scopeSelect,
            initialValue: React2.useMemo(() => value, []),
            size: sizeProp,
            activeIndexSubscribe,
            valueSubscribe,
            setOpen,
            onChange: React2.useCallback((val) => {
              setValue(val), emitValue(val);
            }, []),
            onActiveChange: (0, import_core13.useEvent)((...args) => {
              onActiveChange == null || onActiveChange(...args);
            }),
            setSelectedIndex,
            setValueAtIndex: React2.useCallback((index, value2) => {
              listContentRef.current[index] = value2;
            }, []),
            shouldRenderWebNative,
            children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              import_context.SelectProvider,
              {
                scope: __scopeSelect,
                disablePreventBodyScroll,
                dir,
                blockSelection: !1,
                fallback: !1,
                selectedItem,
                setSelectedItem,
                forceUpdate,
                valueNode,
                onValueNodeChange: setValueNode,
                scopeKey,
                sheetBreakpoint,
                activeIndex,
                selectedIndex,
                setActiveIndex: React2.useCallback((index) => {
                  setActiveIndex((prev) => prev !== index ? (typeof index == "number" && emitActiveIndex(index), index) : prev);
                }, []),
                value,
                open,
                native,
                children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(SelectSheetController, { onOpenChange: setOpen, __scopeSelect, children: shouldRenderWebNative ? children : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                  SelectImpl,
                  {
                    activeIndexRef,
                    listContentRef,
                    selectedIndexRef,
                    ...props,
                    open,
                    value,
                    children
                  }
                ) })
              }
            )
          }
        ) });
      },
      {
        Adapt: import_adapt.Adapt,
        Content: import_SelectContent.SelectContent,
        Group: SelectGroup,
        Icon: SelectIcon,
        Item: import_SelectItem.SelectItem,
        ItemIndicator: SelectItemIndicator,
        ItemText: import_SelectItemText.SelectItemText,
        Label: SelectLabel,
        ScrollDownButton: import_SelectScrollButton.SelectScrollDownButton,
        ScrollUpButton: import_SelectScrollButton.SelectScrollUpButton,
        Trigger: import_SelectTrigger.SelectTrigger,
        Value: SelectValue,
        Viewport: import_SelectViewport.SelectViewport,
        Sheet: import_sheet.Sheet.Controlled
      }
    );
    function useEmitter() {
      let listeners = React2.useRef();
      listeners.current || (listeners.current = /* @__PURE__ */ new Set());
      let emit = (value) => {
        listeners.current.forEach((l) => l(value));
      }, subscribe = React2.useCallback((listener) => (listeners.current.add(listener), () => {
        listeners.current.delete(listener);
      }), []);
      return [emit, subscribe];
    }
    Select.displayName = import_constants.SELECT_NAME;
  }
});

// ../select/dist/cjs/index.native.js
var require_index_native59 = __commonJS({
  "../select/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Select_native(), module2.exports);
    __reExport2(src_exports2, require_context_native(), module2.exports);
  }
});

// ../slider/dist/cjs/constants.native.js
var require_constants_native5 = __commonJS({
  "../slider/dist/cjs/constants.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), constants_exports = {};
    __export2(constants_exports, {
      ARROW_KEYS: () => ARROW_KEYS,
      BACK_KEYS: () => BACK_KEYS,
      PAGE_KEYS: () => PAGE_KEYS,
      SLIDER_NAME: () => SLIDER_NAME,
      SliderOrientationProvider: () => SliderOrientationProvider,
      SliderProvider: () => SliderProvider,
      createSliderContext: () => createSliderContext,
      createSliderScope: () => createSliderScope,
      useSliderContext: () => useSliderContext,
      useSliderOrientationContext: () => useSliderOrientationContext
    });
    module2.exports = __toCommonJS2(constants_exports);
    var import_create_context = require_index_native25(), SLIDER_NAME = "Slider", [createSliderContext, createSliderScope] = (0, import_create_context.createContextScope)(SLIDER_NAME), [SliderProvider, useSliderContext] = createSliderContext(SLIDER_NAME), [SliderOrientationProvider, useSliderOrientationContext] = createSliderContext(SLIDER_NAME, {
      startEdge: "left",
      endEdge: "right",
      sizeProp: "width",
      size: 0,
      direction: 1
    }), PAGE_KEYS = ["PageUp", "PageDown"], ARROW_KEYS = ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"], BACK_KEYS = {
      ltr: ["ArrowDown", "Home", "ArrowLeft", "PageDown"],
      rtl: ["ArrowDown", "Home", "ArrowRight", "PageDown"]
    };
  }
});

// ../slider/dist/cjs/helpers.native.js
var require_helpers_native2 = __commonJS({
  "../slider/dist/cjs/helpers.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), helpers_exports = {};
    __export2(helpers_exports, {
      convertValueToPercentage: () => convertValueToPercentage,
      getClosestValueIndex: () => getClosestValueIndex,
      getDecimalCount: () => getDecimalCount,
      getLabel: () => getLabel,
      getNextSortedValues: () => getNextSortedValues,
      getThumbInBoundsOffset: () => getThumbInBoundsOffset,
      hasMinStepsBetweenValues: () => hasMinStepsBetweenValues,
      linearScale: () => linearScale,
      roundValue: () => roundValue
    });
    module2.exports = __toCommonJS2(helpers_exports);
    function getNextSortedValues(prevValues = [], nextValue, atIndex) {
      let nextValues = [...prevValues];
      return nextValues[atIndex] = nextValue, nextValues.sort((a, b) => a - b);
    }
    function convertValueToPercentage(value, min2, max2) {
      return 100 / (max2 - min2) * (value - min2);
    }
    function getLabel(index, totalValues) {
      return totalValues > 2 ? `Value ${index + 1} of ${totalValues}` : totalValues === 2 ? ["Minimum", "Maximum"][index] : void 0;
    }
    function getClosestValueIndex(values, nextValue) {
      if (values.length === 1)
        return 0;
      let distances = values.map((value) => Math.abs(value - nextValue)), closestDistance = Math.min(...distances);
      return distances.indexOf(closestDistance);
    }
    function getThumbInBoundsOffset(width, left, direction) {
      let halfWidth = width / 2, offset2 = linearScale([0, 50], [0, halfWidth]);
      return (halfWidth - offset2(left) * direction) * direction;
    }
    function getStepsBetweenValues(values) {
      return values.slice(0, -1).map((value, index) => values[index + 1] - value);
    }
    function hasMinStepsBetweenValues(values, minStepsBetweenValues) {
      if (minStepsBetweenValues > 0) {
        let stepsBetweenValues = getStepsBetweenValues(values);
        return Math.min(...stepsBetweenValues) >= minStepsBetweenValues;
      }
      return !0;
    }
    function linearScale(input, output) {
      return (value) => {
        if (input[0] === input[1] || output[0] === output[1])
          return output[0];
        let ratio = (output[1] - output[0]) / (input[1] - input[0]);
        return output[0] + ratio * (value - input[0]);
      };
    }
    function getDecimalCount(value) {
      return (String(value).split(".")[1] || "").length;
    }
    function roundValue(value, decimalCount) {
      let rounder = 10 ** decimalCount;
      return Math.round(value * rounder) / rounder;
    }
  }
});

// ../slider/dist/cjs/SliderImpl.native.js
var require_SliderImpl_native = __commonJS({
  "../slider/dist/cjs/SliderImpl.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SliderImpl_exports = {};
    __export2(SliderImpl_exports, {
      SliderFrame: () => SliderFrame2,
      SliderImpl: () => SliderImpl
    });
    module2.exports = __toCommonJS2(SliderImpl_exports);
    var import_core13 = require_index_native15(), import_get_token2 = require_index_native17(), import_stacks3 = require_index_native19(), React2 = __toESM2(require("react")), import_constants = require_constants_native5(), import_jsx_runtime6 = require("react/jsx-runtime"), SliderFrame2 = (0, import_core13.styled)(import_stacks3.YStack, {
      position: "relative",
      variants: {
        orientation: {
          horizontal: {},
          vertical: {}
        },
        size: (val, extras) => {
          if (!val)
            return;
          let orientation = extras.props.orientation, size2 = Math.round((0, import_core13.getVariableValue)((0, import_get_token2.getSize)(val)) / 6);
          return orientation === "horizontal" ? {
            height: size2,
            borderRadius: size2,
            justifyContent: "center"
          } : {
            width: size2,
            borderRadius: size2,
            alignItems: "center"
          };
        }
      }
    }), SliderImpl = React2.forwardRef(
      (props, forwardedRef) => {
        let {
          __scopeSlider,
          onSlideStart,
          onSlideMove,
          onSlideEnd,
          onHomeKeyDown,
          onEndKeyDown,
          onStepKeyDown,
          ...sliderProps
        } = props, context = (0, import_constants.useSliderContext)(import_constants.SLIDER_NAME, __scopeSlider);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          SliderFrame2,
          {
            size: "$4",
            ...sliderProps,
            "data-orientation": sliderProps.orientation,
            ref: forwardedRef,
            ...import_core13.isWeb && {
              onKeyDown: (event) => {
                event.key === "Home" ? (onHomeKeyDown(event), event.preventDefault()) : event.key === "End" ? (onEndKeyDown(event), event.preventDefault()) : import_constants.PAGE_KEYS.concat(import_constants.ARROW_KEYS).includes(event.key) && (onStepKeyDown(event), event.preventDefault());
              }
            },
            onMoveShouldSetResponderCapture: () => !0,
            onScrollShouldSetResponder: () => !0,
            onScrollShouldSetResponderCapture: () => !0,
            onMoveShouldSetResponder: () => !0,
            onStartShouldSetResponder: () => !0,
            onResponderTerminationRequest: () => !1,
            onResponderGrant: (0, import_core13.composeEventHandlers)(props.onResponderGrant, (event) => {
              let target = event.target, isStartingOnThumb = context.thumbs.has(target);
              import_core13.isWeb && target instanceof HTMLElement && context.thumbs.has(target) && target.focus(), onSlideStart(event, isStartingOnThumb ? "thumb" : "track");
            }),
            onResponderMove: (0, import_core13.composeEventHandlers)(props.onResponderMove, (event) => {
              event.stopPropagation(), onSlideMove(event);
            }),
            onResponderRelease: (0, import_core13.composeEventHandlers)(props.onResponderRelease, (event) => {
              onSlideEnd(event);
            })
          }
        );
      }
    );
  }
});

// ../slider/dist/cjs/Slider.native.js
var require_Slider_native = __commonJS({
  "../slider/dist/cjs/Slider.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Slider_exports = {};
    __export2(Slider_exports, {
      Range: () => Range,
      Slider: () => Slider,
      SliderThumb: () => SliderThumb,
      SliderThumbFrame: () => SliderThumbFrame,
      SliderTrack: () => SliderTrack,
      SliderTrackActive: () => SliderTrackActive,
      SliderTrackActiveFrame: () => SliderTrackActiveFrame,
      SliderTrackFrame: () => SliderTrackFrame,
      Thumb: () => Thumb,
      Track: () => Track
    });
    module2.exports = __toCommonJS2(Slider_exports);
    var import_compose_refs = require_index_native5(), import_core13 = require_index_native15(), import_get_token2 = require_index_native17(), import_helpers = require_index_native4(), import_stacks3 = require_index_native19(), import_use_controllable_state = require_index_native12(), import_use_direction = require_index_native22(), React2 = __toESM2(require("react")), import_constants = require_constants_native5(), import_helpers2 = require_helpers_native2(), import_SliderImpl = require_SliderImpl_native(), import_jsx_runtime6 = require("react/jsx-runtime"), SliderHorizontal = React2.forwardRef(
      (props, forwardedRef) => {
        let {
          min: min2,
          max: max2,
          dir,
          onSlideStart,
          onSlideMove,
          onStepKeyDown,
          onSlideEnd,
          ...sliderProps
        } = props, direction = (0, import_use_direction.useDirection)(dir), isDirectionLTR = direction === "ltr", sliderRef = React2.useRef(null), [state, setState_] = React2.useState(() => ({ size: 0, offset: 0 })), setState = (0, import_core13.createShallowSetState)(setState_);
        function getValueFromPointer(pointerPosition) {
          let input = [0, state.size];
          return (0, import_helpers2.linearScale)(input, isDirectionLTR ? [min2, max2] : [max2, min2])(pointerPosition);
        }
        let measure = () => {
          var _a;
          (_a = sliderRef.current) == null || _a.measure((_x, _y, width, _height, pageX, _pageY) => {
            setState({
              size: width,
              offset: pageX
            });
          });
        };
        return import_core13.isClient && useOnDebouncedWindowResize(measure), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_constants.SliderOrientationProvider,
          {
            scope: props.__scopeSlider,
            startEdge: isDirectionLTR ? "left" : "right",
            endEdge: isDirectionLTR ? "right" : "left",
            direction: isDirectionLTR ? 1 : -1,
            sizeProp: "width",
            size: state.size,
            children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              import_SliderImpl.SliderImpl,
              {
                ref: (0, import_compose_refs.composeRefs)(forwardedRef, sliderRef),
                dir: direction,
                ...sliderProps,
                orientation: "horizontal",
                onLayout: measure,
                onSlideStart: (event, target) => {
                  let value = getValueFromPointer(event.nativeEvent.locationX);
                  value && (onSlideStart == null || onSlideStart(value, target, event));
                },
                onSlideMove: (event) => {
                  let value = getValueFromPointer(event.nativeEvent.pageX - state.offset);
                  value && (onSlideMove == null || onSlideMove(value, event));
                },
                onSlideEnd: (event) => {
                  let value = getValueFromPointer(event.nativeEvent.pageX - state.offset);
                  value && (onSlideEnd == null || onSlideEnd(event, value));
                },
                onStepKeyDown: (event) => {
                  let isBackKey = import_constants.BACK_KEYS[direction].includes(event.key);
                  onStepKeyDown == null || onStepKeyDown({ event, direction: isBackKey ? -1 : 1 });
                }
              }
            )
          }
        );
      }
    );
    function useOnDebouncedWindowResize(callback, amt = 200) {
      React2.useEffect(() => {
        let last, onResize = () => {
          clearTimeout(last), last = setTimeout(callback, amt);
        };
        return window.addEventListener("resize", onResize), () => {
          clearTimeout(last), window.removeEventListener("resize", onResize);
        };
      }, []);
    }
    var SliderVertical = React2.forwardRef(
      (props, forwardedRef) => {
        let {
          min: min2,
          max: max2,
          onSlideStart,
          onSlideMove,
          onStepKeyDown,
          onSlideEnd,
          ...sliderProps
        } = props, [state, setState_] = React2.useState(() => ({ size: 0, offset: 0 })), setState = (0, import_core13.createShallowSetState)(setState_), sliderRef = React2.useRef(null);
        function getValueFromPointer(pointerPosition) {
          let input = [0, state.size];
          return (0, import_helpers2.linearScale)(input, [max2, min2])(pointerPosition);
        }
        let measure = () => {
          var _a;
          (_a = sliderRef.current) == null || _a.measure((_x, _y, _width, height, _pageX, pageY) => {
            setState({
              size: height,
              offset: pageY
            });
          });
        };
        return import_core13.isClient && useOnDebouncedWindowResize(measure), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_constants.SliderOrientationProvider,
          {
            scope: props.__scopeSlider,
            startEdge: "bottom",
            endEdge: "top",
            sizeProp: "height",
            size: state.size,
            direction: 1,
            children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              import_SliderImpl.SliderImpl,
              {
                ref: (0, import_compose_refs.composeRefs)(forwardedRef, sliderRef),
                ...sliderProps,
                orientation: "vertical",
                onLayout: measure,
                onSlideStart: (event, target) => {
                  let value = getValueFromPointer(event.nativeEvent.locationY);
                  value && (onSlideStart == null || onSlideStart(value, target, event));
                },
                onSlideMove: (event) => {
                  let value = getValueFromPointer(event.nativeEvent.pageY - state.offset);
                  value && (onSlideMove == null || onSlideMove(value, event));
                },
                onSlideEnd: (event) => {
                  let value = getValueFromPointer(event.nativeEvent.pageY - state.offset);
                  onSlideEnd == null || onSlideEnd(event, value);
                },
                onStepKeyDown: (event) => {
                  let isBackKey = import_constants.BACK_KEYS.ltr.includes(event.key);
                  onStepKeyDown == null || onStepKeyDown({ event, direction: isBackKey ? -1 : 1 });
                }
              }
            )
          }
        );
      }
    ), TRACK_NAME = "SliderTrack", SliderTrackFrame = (0, import_core13.styled)(import_SliderImpl.SliderFrame, {
      name: "SliderTrack",
      variants: {
        unstyled: {
          false: {
            height: "100%",
            width: "100%",
            backgroundColor: "$background",
            position: "relative",
            borderRadius: 1e5,
            overflow: "hidden"
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), SliderTrack = React2.forwardRef(
      (props, forwardedRef) => {
        let { __scopeSlider, ...trackProps } = props, context = (0, import_constants.useSliderContext)(TRACK_NAME, __scopeSlider);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          SliderTrackFrame,
          {
            "data-disabled": context.disabled ? "" : void 0,
            "data-orientation": context.orientation,
            orientation: context.orientation,
            size: context.size,
            ...trackProps,
            ref: forwardedRef
          }
        );
      }
    );
    SliderTrack.displayName = TRACK_NAME;
    var RANGE_NAME = "SliderTrackActive", SliderTrackActiveFrame = (0, import_core13.styled)(import_SliderImpl.SliderFrame, {
      name: "SliderTrackActive",
      backgroundColor: "$background",
      position: "absolute"
    }), SliderTrackActive = React2.forwardRef(
      (props, forwardedRef) => {
        let { __scopeSlider, ...rangeProps } = props, context = (0, import_constants.useSliderContext)(RANGE_NAME, __scopeSlider), orientation = (0, import_constants.useSliderOrientationContext)(RANGE_NAME, __scopeSlider), ref = React2.useRef(null), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, ref), valuesCount = context.values.length, percentages = context.values.map(
          (value) => (0, import_helpers2.convertValueToPercentage)(value, context.min, context.max)
        ), offsetStart = valuesCount > 1 ? Math.min(...percentages) : 0, offsetEnd = 100 - Math.max(...percentages);
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          SliderTrackActiveFrame,
          {
            orientation: context.orientation,
            "data-orientation": context.orientation,
            "data-disabled": context.disabled ? "" : void 0,
            size: context.size,
            animateOnly: ["left", "top", "right", "bottom"],
            ...rangeProps,
            ref: composedRefs,
            [orientation.startEdge]: `${offsetStart}%`,
            [orientation.endEdge]: `${offsetEnd}%`,
            ...orientation.sizeProp === "width" ? {
              height: "100%"
            } : {
              left: 0,
              right: 0
            }
          }
        );
      }
    );
    SliderTrackActive.displayName = RANGE_NAME;
    var THUMB_NAME = "SliderThumb", getThumbSize = (val) => {
      let tokens = (0, import_core13.getTokens)(), size2 = typeof val == "number" ? val : (0, import_get_token2.getSize)(tokens.size[val], {
        shift: -1
      });
      return {
        width: size2,
        height: size2,
        minWidth: size2,
        minHeight: size2
      };
    }, SliderThumbFrame = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: "SliderThumb",
      variants: {
        size: {
          "...size": getThumbSize
        },
        unstyled: {
          false: {
            position: "absolute",
            bordered: 2,
            borderWidth: 2,
            backgrounded: !0,
            pressTheme: import_core13.isWeb,
            focusTheme: import_core13.isWeb,
            hoverTheme: import_core13.isWeb
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), SliderThumb = SliderThumbFrame.styleable(function(props, forwardedRef) {
      let { __scopeSlider, index, size: sizeProp, ...thumbProps } = props, context = (0, import_constants.useSliderContext)(THUMB_NAME, __scopeSlider), orientation = (0, import_constants.useSliderOrientationContext)(THUMB_NAME, __scopeSlider), [thumb, setThumb] = React2.useState(null), composedRefs = (0, import_compose_refs.useComposedRefs)(
        forwardedRef,
        (node) => setThumb(node)
      ), value = context.values[index], percent = value === void 0 ? 0 : (0, import_helpers2.convertValueToPercentage)(value, context.min, context.max), label = (0, import_helpers2.getLabel)(index, context.values.length), sizeIn = sizeProp ?? context.size ?? "$true", [size2, setSize] = React2.useState(() => (0, import_core13.getVariableValue)(getThumbSize(sizeIn).width)), thumbInBoundsOffset = size2 ? (0, import_helpers2.getThumbInBoundsOffset)(size2, percent, orientation.direction) : 0;
      React2.useEffect(() => {
        if (thumb)
          return context.thumbs.add(thumb), () => {
            context.thumbs.delete(thumb);
          };
      }, [thumb, context.thumbs]);
      let positionalStyles = context.orientation === "horizontal" ? {
        x: thumbInBoundsOffset - size2 / 2,
        y: -size2 / 2,
        top: "50%",
        ...size2 === 0 && {
          top: "auto",
          bottom: "auto"
        }
      } : {
        x: -size2 / 2,
        y: size2 / 2,
        left: "50%",
        ...size2 === 0 && {
          left: "auto",
          right: "auto"
        }
      };
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        SliderThumbFrame,
        {
          ref: composedRefs,
          role: "slider",
          "aria-label": props["aria-label"] || label,
          "aria-valuemin": context.min,
          "aria-valuenow": value,
          "aria-valuemax": context.max,
          "aria-orientation": context.orientation,
          "data-orientation": context.orientation,
          "data-disabled": context.disabled ? "" : void 0,
          tabIndex: context.disabled ? void 0 : 0,
          animateOnly: ["transform", "left", "top", "right", "bottom"],
          ...positionalStyles,
          [orientation.startEdge]: `${percent}%`,
          size: sizeIn,
          ...thumbProps,
          onLayout: (e) => {
            setSize(e.nativeEvent.layout[orientation.sizeProp]);
          },
          onFocus: (0, import_helpers.composeEventHandlers)(props.onFocus, () => {
            context.valueIndexToChangeRef.current = index;
          })
        }
      );
    }), SliderComponent = React2.forwardRef(
      (props, forwardedRef) => {
        let {
          name,
          min: min2 = 0,
          max: max2 = 100,
          step = 1,
          orientation = "horizontal",
          disabled = !1,
          minStepsBetweenThumbs = 0,
          defaultValue = [min2],
          value,
          onValueChange = () => {
          },
          size: sizeProp,
          onSlideEnd,
          onSlideMove,
          onSlideStart,
          ...sliderProps
        } = props, sliderRef = React2.useRef(null), composedRefs = (0, import_compose_refs.useComposedRefs)(sliderRef, forwardedRef), thumbRefs = React2.useRef(/* @__PURE__ */ new Set()), valueIndexToChangeRef = React2.useRef(0), isHorizontal = orientation === "horizontal", [values = [], setValues] = (0, import_use_controllable_state.useControllableState)({
          prop: value,
          defaultProp: defaultValue,
          transition: !0,
          onChange: (value2) => {
            var _a;
            import_core13.isWeb && ((_a = [...thumbRefs.current][valueIndexToChangeRef.current]) == null || _a.focus()), onValueChange(value2);
          }
        });
        import_core13.isWeb && React2.useEffect(() => {
          let node = sliderRef.current;
          if (!node)
            return;
          let preventDefault = (e) => {
            e.preventDefault();
          };
          return node.addEventListener("touchstart", preventDefault), () => {
            node.removeEventListener("touchstart", preventDefault);
          };
        }, []);
        function handleSlideMove(value2, event) {
          updateValues(value2, valueIndexToChangeRef.current), onSlideMove == null || onSlideMove(event, value2);
        }
        function updateValues(value2, atIndex) {
          let decimalCount = (0, import_helpers2.getDecimalCount)(step), snapToStep = (0, import_helpers2.roundValue)(
            Math.round((value2 - min2) / step) * step + min2,
            decimalCount
          ), nextValue = (0, import_helpers.clamp)(snapToStep, [min2, max2]);
          setValues((prevValues = []) => {
            let nextValues = (0, import_helpers2.getNextSortedValues)(prevValues, nextValue, atIndex);
            return (0, import_helpers2.hasMinStepsBetweenValues)(nextValues, minStepsBetweenThumbs * step) ? (valueIndexToChangeRef.current = nextValues.indexOf(nextValue), String(nextValues) === String(prevValues) ? prevValues : nextValues) : prevValues;
          });
        }
        let SliderOriented = isHorizontal ? SliderHorizontal : SliderVertical;
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          import_constants.SliderProvider,
          {
            scope: props.__scopeSlider,
            disabled,
            min: min2,
            max: max2,
            valueIndexToChangeRef,
            thumbs: thumbRefs.current,
            values,
            orientation,
            size: sizeProp,
            children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              SliderOriented,
              {
                "aria-disabled": disabled,
                "data-disabled": disabled ? "" : void 0,
                ...sliderProps,
                ref: composedRefs,
                min: min2,
                max: max2,
                onSlideEnd,
                onSlideStart: disabled ? void 0 : (value2, target, event) => {
                  if (target !== "thumb") {
                    let closestIndex = (0, import_helpers2.getClosestValueIndex)(values, value2);
                    updateValues(value2, closestIndex), onSlideStart == null || onSlideStart(event, value2, target);
                  }
                },
                onSlideMove: disabled ? void 0 : handleSlideMove,
                onHomeKeyDown: () => !disabled && updateValues(min2, 0),
                onEndKeyDown: () => !disabled && updateValues(max2, values.length - 1),
                onStepKeyDown: ({ event, direction: stepDirection }) => {
                  if (!disabled) {
                    let multiplier = import_constants.PAGE_KEYS.includes(event.key) || event.shiftKey && import_constants.ARROW_KEYS.includes(event.key) ? 10 : 1, atIndex = valueIndexToChangeRef.current, value2 = values[atIndex], stepInDirection = step * multiplier * stepDirection;
                    updateValues(value2 + stepInDirection, atIndex);
                  }
                }
              }
            )
          }
        );
      }
    ), Slider = (0, import_core13.withStaticProperties)(SliderComponent, {
      Track: SliderTrack,
      TrackActive: SliderTrackActive,
      Thumb: SliderThumb
    });
    Slider.displayName = import_constants.SLIDER_NAME;
    var Track = SliderTrack, Range = SliderTrackActive, Thumb = SliderThumb;
  }
});

// ../slider/dist/cjs/index.native.js
var require_index_native60 = __commonJS({
  "../slider/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      SliderFrame: () => import_SliderImpl.SliderFrame
    });
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Slider_native(), module2.exports);
    var import_SliderImpl = require_SliderImpl_native();
  }
});

// ../switch/dist/cjs/SwitchContext.native.js
var require_SwitchContext_native = __commonJS({
  "../switch/dist/cjs/SwitchContext.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), SwitchContext_exports = {};
    __export2(SwitchContext_exports, {
      SwitchContext: () => SwitchContext
    });
    module2.exports = __toCommonJS2(SwitchContext_exports);
    var import_core13 = require_index_native15(), SwitchContext = (0, import_core13.createStyledContext)({
      checked: !1,
      disabled: !1,
      size: void 0,
      frameWidth: 0,
      unstyled: !1
    });
  }
});

// ../switch/dist/cjs/Switch.native.js
var require_Switch_native = __commonJS({
  "../switch/dist/cjs/Switch.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Switch_exports = {};
    __export2(Switch_exports, {
      SwitchFrame: () => SwitchFrame,
      SwitchThumb: () => SwitchThumb
    });
    module2.exports = __toCommonJS2(Switch_exports);
    var import_core13 = require_index_native15(), import_get_token2 = require_index_native17(), import_stacks3 = require_index_native19(), import_SwitchContext = require_SwitchContext_native(), SwitchThumb = (0, import_core13.styled)(import_stacks3.ThemeableStack, {
      name: "SwitchThumb",
      context: import_SwitchContext.SwitchContext,
      variants: {
        unstyled: {
          false: {
            size: "$true",
            backgroundColor: "$background",
            borderRadius: 1e3
          }
        },
        checked: {
          true: {}
        },
        size: {
          "...size": (val) => {
            let size2 = getSwitchHeight(val);
            return {
              height: size2,
              width: size2
            };
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), getSwitchHeight = (val) => Math.round((0, import_core13.getVariableValue)((0, import_get_token2.getSize)(val)) * 0.65), getSwitchWidth = (val) => getSwitchHeight(val) * 2, SwitchFrame = (0, import_core13.styled)(import_stacks3.YStack, {
      name: "Switch",
      context: import_SwitchContext.SwitchContext,
      variants: {
        unstyled: {
          false: {
            size: "$true",
            borderRadius: 1e3,
            backgroundColor: "$background",
            borderWidth: 2,
            borderColor: "$background",
            focusStyle: {
              outlineColor: "$borderColorFocus",
              outlineStyle: "solid",
              outlineWidth: 2
            }
          }
        },
        checked: {
          true: {}
        },
        frameWidth: {
          ":number": () => null
        },
        size: {
          "...size": (val) => {
            let height = getSwitchHeight(val) + 4, width = getSwitchWidth(val) + 4;
            return {
              height,
              minHeight: height,
              width
            };
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    });
  }
});

// ../switch/dist/cjs/createSwitch.native.js
var require_createSwitch_native = __commonJS({
  "../switch/dist/cjs/createSwitch.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), createSwitch_exports = {};
    __export2(createSwitch_exports, {
      createSwitch: () => createSwitch
    });
    module2.exports = __toCommonJS2(createSwitch_exports);
    var import_compose_refs = require_index_native5(), import_core13 = require_index_native15(), import_focusable2 = require_index_native44(), import_label = require_index_native45(), import_stacks3 = require_index_native19(), import_use_controllable_state = require_index_native12(), import_use_previous = require_index_native46(), React2 = __toESM2(require("react")), import_react_native4 = require("react-native"), import_Switch = require_Switch_native(), import_SwitchContext = require_SwitchContext_native(), import_jsx_runtime6 = (
      // @ts-ignore
      require("react/jsx-runtime")
    );
    function createSwitch({
      disableActiveTheme,
      Frame = import_Switch.SwitchFrame,
      Thumb = import_Switch.SwitchThumb
    }) {
      process.env.NODE_ENV === "development" && (Frame !== import_Switch.SwitchFrame && Frame.staticConfig.context && console.warn(
        "Warning: createSwitch() needs to control context to pass checked state from Frame to Thumb, any custom context passed will be overridden."
      ), Thumb !== import_Switch.SwitchThumb && Thumb.staticConfig.context && console.warn(
        "Warning: createSwitch() needs to control context to pass checked state from Frame to Thumb, any custom context passed will be overridden."
      )), Frame.staticConfig.context = import_SwitchContext.SwitchContext, Thumb.staticConfig.context = import_SwitchContext.SwitchContext;
      let SwitchThumbComponent = Thumb.styleable(function(props, forwardedRef) {
        let { size: sizeProp, unstyled: unstyledProp, ...thumbProps } = props, context = React2.useContext(import_SwitchContext.SwitchContext), {
          disabled,
          checked,
          unstyled: unstyledContext,
          frameWidth,
          size: sizeContext
        } = context, [thumbWidth, setThumbWidth] = React2.useState(0), initialChecked = React2.useRef(checked).current, distance = frameWidth - thumbWidth, x = initialChecked ? checked ? 0 : -distance : checked ? distance : 0;
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          Thumb,
          {
            ...(unstyledProp ?? unstyledContext ?? !1) === !1 && {
              unstyled: !1,
              size: sizeProp ?? sizeContext ?? "$true",
              ...!disableActiveTheme && {
                theme: checked ? "active" : null
              }
            },
            "data-state": getState(checked),
            "data-disabled": disabled ? "" : void 0,
            alignSelf: initialChecked ? "flex-end" : "flex-start",
            checked,
            x,
            ...thumbProps,
            onLayout: (0, import_core13.composeEventHandlers)(
              props.onLayout,
              (e) => (
                // @ts-ignore
                setThumbWidth(e.nativeEvent.layout.width)
              )
            ),
            ref: forwardedRef
          }
        );
      }), SwitchComponent = Frame.extractable(
        React2.forwardRef(function(propsIn, forwardedRef) {
          let styledContext = React2.useContext(import_SwitchContext.SwitchContext), props = (0, import_core13.useProps)(propsIn, {
            noNormalize: !0,
            noExpand: !0,
            resolveValues: "none",
            forComponent: Frame
          }), {
            labeledBy: ariaLabelledby,
            name,
            checked: checkedProp,
            defaultChecked,
            required,
            disabled,
            value = "on",
            onCheckedChange,
            size: size2 = styledContext.size ?? "$true",
            unstyled = styledContext.unstyled ?? !1,
            native: nativeProp,
            nativeProps,
            children,
            ...switchProps
          } = props, native = Array.isArray(nativeProp) ? nativeProp : [nativeProp], shouldRenderMobileNative = !import_core13.isWeb && nativeProp === !0 || !import_core13.isWeb && native.includes("mobile") || native.includes("android") && import_react_native4.Platform.OS === "android" || native.includes("ios") && import_react_native4.Platform.OS === "ios", [button, setButton] = React2.useState(null), composedRefs = (0, import_compose_refs.useComposedRefs)(forwardedRef, (node) => setButton(node)), labelId = (0, import_label.useLabelContext)(button), labelledBy = ariaLabelledby || labelId, hasConsumerStoppedPropagationRef = React2.useRef(!1), isFormControl = import_core13.isWeb ? button ? !!button.closest("form") : !0 : !1, [frameWidth, setFrameWidth] = React2.useState(0), [checked = !1, setChecked] = (0, import_use_controllable_state.useControllableState)({
            prop: checkedProp,
            defaultProp: defaultChecked || !1,
            onChange: onCheckedChange,
            transition: !0
          });
          return shouldRenderMobileNative ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            import_react_native4.Switch,
            {
              value: checkedProp,
              onValueChange: onCheckedChange,
              ...nativeProps
            }
          ) : (import_core13.isWeb || React2.useEffect(() => {
            if (props.id)
              return (0, import_focusable2.registerFocusable)(props.id, {
                focus: () => {
                  setChecked((x) => !x);
                }
              });
          }, [props.id, setChecked]), /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              Frame,
              {
                unstyled,
                size: size2,
                checked,
                disabled,
                frameWidth,
                themeShallow: !0,
                ...!disableActiveTheme && {
                  theme: checked ? "active" : null,
                  themeShallow: !0
                },
                role: "switch",
                "aria-checked": checked,
                "aria-labelledby": labelledBy,
                "aria-required": required,
                "data-state": getState(checked),
                "data-disabled": disabled ? "" : void 0,
                tabIndex: disabled ? void 0 : 0,
                value,
                ...switchProps,
                ref: composedRefs,
                onPress: (0, import_core13.composeEventHandlers)(props.onPress, (event) => {
                  setChecked((prevChecked) => !prevChecked), import_core13.isWeb && isFormControl && (hasConsumerStoppedPropagationRef.current = event.isPropagationStopped(), hasConsumerStoppedPropagationRef.current || event.stopPropagation());
                }),
                children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                  import_stacks3.YStack,
                  {
                    alignSelf: "stretch",
                    flex: 1,
                    onLayout: (e) => {
                      setFrameWidth(e.nativeEvent.layout.width);
                    },
                    children: typeof children == "function" ? children(checked) : children
                  }
                )
              }
            ),
            import_core13.isWeb && isFormControl && /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              BubbleInput,
              {
                control: button,
                bubbles: !hasConsumerStoppedPropagationRef.current,
                name,
                value,
                checked,
                required,
                disabled,
                style: { transform: "translateX(-100%)" }
              }
            )
          ] }));
        })
      ), BubbleInput = (props) => {
        let { control, checked, bubbles = !0, ...inputProps } = props, ref = React2.useRef(null), prevChecked = (0, import_use_previous.usePrevious)(checked);
        return React2.useEffect(() => {
          let input = ref.current, inputProto = window.HTMLInputElement.prototype, setChecked = Object.getOwnPropertyDescriptor(
            inputProto,
            "checked"
          ).set;
          if (prevChecked !== checked && setChecked) {
            let event = new Event("click", { bubbles });
            setChecked.call(input, checked), input.dispatchEvent(event);
          }
        }, [prevChecked, checked, bubbles]), // @ts-ignore
        /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          "input",
          {
            type: "checkbox",
            "aria-hidden": !0,
            defaultChecked: checked,
            ...inputProps,
            tabIndex: -1,
            ref,
            style: {
              ...props.style,
              // ...controlSize,
              position: "absolute",
              pointerEvents: "none",
              opacity: 0,
              margin: 0
            }
          }
        );
      };
      function getState(checked) {
        return checked ? "checked" : "unchecked";
      }
      return (0, import_core13.withStaticProperties)(SwitchComponent, {
        Thumb: SwitchThumbComponent
      });
    }
  }
});

// ../switch/dist/cjs/index.native.js
var require_index_native61 = __commonJS({
  "../switch/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      Switch: () => Switch
    });
    module2.exports = __toCommonJS2(src_exports2);
    var import_createSwitch = require_createSwitch_native(), import_Switch = require_Switch_native();
    __reExport2(src_exports2, require_Switch_native(), module2.exports);
    __reExport2(src_exports2, require_SwitchContext_native(), module2.exports);
    __reExport2(src_exports2, require_createSwitch_native(), module2.exports);
    var Switch = (0, import_createSwitch.createSwitch)({
      Frame: import_Switch.SwitchFrame,
      Thumb: import_Switch.SwitchThumb
    });
  }
});

// ../roving-focus/dist/cjs/RovingFocusGroup.native.js
var require_RovingFocusGroup_native = __commonJS({
  "../roving-focus/dist/cjs/RovingFocusGroup.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), RovingFocusGroup_native_exports = {};
    __export2(RovingFocusGroup_native_exports, {
      RovingFocusGroup: () => RovingFocusGroup,
      createRovingFocusGroupScope: () => createRovingFocusGroupScope
    });
    module2.exports = __toCommonJS2(RovingFocusGroup_native_exports);
    var import_core13 = require_index_native15(), import_react2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), ITEM_NAME = "RovingFocusGroupItem", RovingFocusGroupItem = import_react2.default.forwardRef(
      ({ children, ...props }, _ref) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_core13.Stack, { ...props, children })
    );
    RovingFocusGroupItem.displayName = ITEM_NAME;
    var GROUP_NAME = "RovingFocusGroup", RovingFocusGroup = (0, import_core13.withStaticProperties)(
      import_react2.default.forwardRef(({ children, ...props }, _ref) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_core13.Stack, { ...props, children })),
      {
        Item: RovingFocusGroupItem
      }
    );
    RovingFocusGroup.displayName = GROUP_NAME;
    var createRovingFocusGroupScope = () => () => ({});
  }
});

// ../roving-focus/dist/cjs/index.native.js
var require_index_native62 = __commonJS({
  "../roving-focus/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_RovingFocusGroup_native(), module2.exports);
  }
});

// ../tabs/dist/cjs/Tabs.native.js
var require_Tabs_native = __commonJS({
  "../tabs/dist/cjs/Tabs.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Tabs_exports = {};
    __export2(Tabs_exports, {
      Tabs: () => Tabs
    });
    module2.exports = __toCommonJS2(Tabs_exports);
    var import_get_button_sized2 = require_index_native18(), import_group = require_index_native50(), import_roving_focus = require_index_native62(), import_stacks3 = require_index_native19(), import_use_controllable_state = require_index_native12(), import_use_direction = require_index_native22(), import_web = require_index_native9(), React2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), TABS_CONTEXT = "TabsContext", TAB_LIST_NAME = "TabsList", TabsListFrame = (0, import_web.styled)(import_group.Group, {
      name: TAB_LIST_NAME,
      focusable: !0
    }), TabsList = TabsListFrame.extractable(
      React2.forwardRef(
        (props, forwardedRef) => {
          let { __scopeTabs, loop = !0, children, ...listProps } = props, context = useTabsContext(__scopeTabs);
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            import_roving_focus.RovingFocusGroup,
            {
              __scopeRovingFocusGroup: __scopeTabs || TABS_CONTEXT,
              asChild: "except-style",
              orientation: context.orientation,
              dir: context.dir,
              loop,
              children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                TabsListFrame,
                {
                  role: "tablist",
                  "aria-orientation": context.orientation,
                  ref: forwardedRef,
                  orientation: context.orientation,
                  ...listProps,
                  children
                }
              )
            }
          );
        }
      )
    );
    TabsList.displayName = TAB_LIST_NAME;
    var TRIGGER_NAME = "TabsTrigger", TabsTriggerFrame = (0, import_web.styled)(import_stacks3.ThemeableStack, {
      name: TRIGGER_NAME,
      justifyContent: "center",
      alignItems: "center",
      flexWrap: "nowrap",
      flexDirection: "row",
      cursor: "pointer",
      focusable: !0,
      userSelect: "none",
      variants: {
        size: {
          "...size": import_get_button_sized2.getButtonSized
        },
        disabled: {
          true: {
            pointerEvents: "none"
          }
        },
        unstyled: {
          false: {
            backgroundColor: "$background",
            pressStyle: {
              backgroundColor: "$backgroundPress"
            },
            hoverStyle: {
              backgroundColor: "$backgroundHover"
            },
            focusStyle: {
              backgroundColor: "$backgroundFocus"
            }
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), TabsTrigger = TabsTriggerFrame.extractable(
      React2.forwardRef(
        (props, forwardedRef) => {
          let {
            __scopeTabs,
            value,
            disabled = !1,
            onInteraction,
            ...triggerProps
          } = props, context = useTabsContext(__scopeTabs), triggerId = makeTriggerId(context.baseId, value), contentId = makeContentId(context.baseId, value), isSelected = value === context.value, [layout, setLayout] = React2.useState(null), triggerRef = React2.useRef(null), groupItemProps = (0, import_group.useGroupItem)({ disabled });
          return React2.useEffect(() => (context.registerTrigger(), () => context.unregisterTrigger()), []), React2.useEffect(() => {
            if (!triggerRef.current || !import_web.isWeb)
              return;
            function getTriggerSize() {
              triggerRef.current && setLayout({
                width: triggerRef.current.offsetWidth,
                height: triggerRef.current.offsetHeight,
                x: triggerRef.current.offsetLeft,
                y: triggerRef.current.offsetTop
              });
            }
            getTriggerSize();
            let observer = new ResizeObserver(getTriggerSize);
            return observer.observe(triggerRef.current), () => {
              triggerRef.current && observer.unobserve(triggerRef.current);
            };
          }, [context.triggersCount]), React2.useEffect(() => {
            isSelected && layout && (onInteraction == null || onInteraction("select", layout));
          }, [isSelected, value, layout]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_web.Theme, { name: isSelected ? "active" : null, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            import_roving_focus.RovingFocusGroup.Item,
            {
              __scopeRovingFocusGroup: __scopeTabs || TABS_CONTEXT,
              asChild: "except-style",
              focusable: !disabled,
              active: isSelected,
              children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                TabsTriggerFrame,
                {
                  onLayout: (event) => {
                    import_web.isWeb || setLayout(event.nativeEvent.layout);
                  },
                  onHoverIn: (0, import_web.composeEventHandlers)(props.onHoverIn, () => {
                    layout && (onInteraction == null || onInteraction("hover", layout));
                  }),
                  onHoverOut: (0, import_web.composeEventHandlers)(props.onHoverOut, () => {
                    onInteraction == null || onInteraction("hover", null);
                  }),
                  role: "tab",
                  "aria-selected": isSelected,
                  "aria-controls": contentId,
                  "data-state": isSelected ? "active" : "inactive",
                  "data-disabled": disabled ? "" : void 0,
                  disabled,
                  id: triggerId,
                  size: context.size,
                  ...groupItemProps,
                  ...triggerProps,
                  ref: (0, import_web.composeRefs)(forwardedRef, triggerRef),
                  onPress: (0, import_web.composeEventHandlers)(props.onPress ?? void 0, (event) => {
                    let webChecks = !import_web.isWeb || event.button === 0 && event.ctrlKey === !1;
                    !disabled && !isSelected && webChecks ? context.onChange(value) : event.preventDefault();
                  }),
                  ...import_web.isWeb && {
                    type: "button",
                    onKeyDown: (0, import_web.composeEventHandlers)(
                      props.onKeyDown,
                      (event) => {
                        [" ", "Enter"].includes(event.key) && (context.onChange(value), event.preventDefault());
                      }
                    ),
                    onFocus: (0, import_web.composeEventHandlers)(props.onFocus, (event) => {
                      layout && (onInteraction == null || onInteraction("focus", layout));
                      let isAutomaticActivation = context.activationMode !== "manual";
                      !isSelected && !disabled && isAutomaticActivation && context.onChange(value);
                    }),
                    onBlur: (0, import_web.composeEventHandlers)(props.onFocus, () => {
                      onInteraction == null || onInteraction("focus", null);
                    })
                  }
                }
              )
            }
          ) });
        }
      )
    );
    TabsTrigger.displayName = TRIGGER_NAME;
    var CONTENT_NAME = "TabsContent", TabsContentFrame = (0, import_web.styled)(import_stacks3.ThemeableStack, {
      name: CONTENT_NAME
    }), TabsContent = TabsContentFrame.styleable(
      function(props, forwardedRef) {
        let { __scopeTabs, value, forceMount, children, ...contentProps } = props, context = useTabsContext(__scopeTabs), isSelected = value === context.value, show = forceMount || isSelected, triggerId = makeTriggerId(context.baseId, value), contentId = makeContentId(context.baseId, value);
        return show ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          TabsContentFrame,
          {
            "data-state": isSelected ? "active" : "inactive",
            "data-orientation": context.orientation,
            role: "tabpanel",
            "aria-labelledby": triggerId,
            hidden: !show,
            id: contentId,
            tabIndex: 0,
            ...contentProps,
            ref: forwardedRef,
            children
          },
          value
        ) : null;
      }
    ), TABS_NAME = "Tabs", { Provider: TabsProvider, useStyledContext: useTabsContext } = (0, import_web.createStyledContext)(), TabsFrame = (0, import_web.styled)(import_stacks3.SizableStack, {
      name: TABS_NAME
    }), Tabs = (0, import_web.withStaticProperties)(
      TabsFrame.extractable(
        React2.forwardRef(
          (props, forwardedRef) => {
            let {
              __scopeTabs,
              value: valueProp,
              onValueChange,
              defaultValue,
              orientation = "horizontal",
              dir,
              activationMode = "automatic",
              size: size2 = "$true",
              ...tabsProps
            } = props, direction = (0, import_use_direction.useDirection)(dir), [value, setValue] = (0, import_use_controllable_state.useControllableState)({
              prop: valueProp,
              onChange: onValueChange,
              defaultProp: defaultValue ?? ""
            }), [triggersCount, setTriggersCount] = React2.useState(0), registerTrigger = (0, import_web.useEvent)(() => setTriggersCount((v) => v + 1)), unregisterTrigger = (0, import_web.useEvent)(() => setTriggersCount((v) => v - 1));
            return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
              TabsProvider,
              {
                scope: __scopeTabs,
                baseId: React2.useId(),
                value,
                onChange: setValue,
                orientation,
                dir: direction,
                activationMode,
                size: size2,
                registerTrigger,
                triggersCount,
                unregisterTrigger,
                children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                  TabsFrame,
                  {
                    direction,
                    "data-orientation": orientation,
                    ...tabsProps,
                    ref: forwardedRef
                  }
                )
              }
            );
          }
        )
      ),
      {
        List: TabsList,
        /**
         * @deprecated Use Tabs.Tab instead
         */
        Trigger: TabsTrigger,
        Tab: TabsTrigger,
        Content: TabsContent
      }
    );
    Tabs.displayName = TABS_NAME;
    function makeTriggerId(baseId, value) {
      return `${baseId}-trigger-${value}`;
    }
    function makeContentId(baseId, value) {
      return `${baseId}-content-${value}`;
    }
  }
});

// ../tabs/dist/cjs/index.native.js
var require_index_native63 = __commonJS({
  "../tabs/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Tabs_native(), module2.exports);
  }
});

// ../theme/dist/cjs/_mutateTheme.native.js
var require_mutateTheme_native = __commonJS({
  "../theme/dist/cjs/_mutateTheme.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), mutateTheme_exports = {};
    __export2(mutateTheme_exports, {
      _mutateTheme: () => _mutateTheme,
      mutateThemes: () => mutateThemes2
    });
    module2.exports = __toCommonJS2(mutateTheme_exports);
    var import_constants = require_index_native2(), import_web = require_index_native9(), import_react2 = require("react");
    function mutateThemes2({
      themes,
      batch,
      insertCSS = !0,
      ...props
    }) {
      let allThemesProxied = {}, allThemesRaw = {};
      for (let { name, theme } of themes) {
        let res = _mutateTheme({
          ...props,
          name,
          theme,
          // we'll do one update at the end
          avoidUpdate: !0,
          // always add which also replaces but doesnt fail first time
          mutationType: "add"
        });
        res && (allThemesProxied[name] = res.theme, allThemesRaw[name] = res.themeRaw);
      }
      let cssRules = insertCSS ? insertThemeCSS(allThemesRaw, batch) : [];
      return (0, import_react2.startTransition)(() => {
        for (let themeName in allThemesProxied) {
          let theme = allThemesProxied[themeName];
          updateThemeConfig(themeName, theme), notifyThemeManagersOfUpdate(themeName, theme);
        }
      }), {
        themes: allThemesProxied,
        themesRaw: allThemesRaw,
        cssRules
      };
    }
    function _mutateTheme(props) {
      if (import_constants.isServer) {
        process.env.NODE_ENV === "development" && console.warn("Theme mutation is not supported on server side");
        return;
      }
      let config = (0, import_web.getConfig)(), { name: themeName, theme: themeIn, insertCSS, mutationType } = props;
      if (process.env.NODE_ENV === "development") {
        if (!config)
          throw new Error("No config");
        let theme2 = config.themes[props.name];
        if (mutationType !== "add" && !theme2)
          throw new Error(
            `${mutationType === "replace" ? "Replace" : "Update"} theme failed! Theme ${props.name} does not exist`
          );
      }
      let theme = {
        ...mutationType === "update" ? config.themes[themeName] ?? {} : {},
        ...themeIn
      };
      for (let key in theme)
        (0, import_web.ensureThemeVariable)(theme, key);
      let themeProxied = (0, import_web.proxyThemeToParents)(themeName, theme), response = {
        themeRaw: theme,
        theme: themeProxied,
        cssRules: []
      };
      return props.avoidUpdate || (insertCSS && (response.cssRules = insertThemeCSS({
        [themeName]: theme
      })), updateThemeConfig(themeName, themeProxied), notifyThemeManagersOfUpdate(themeName, themeProxied)), response;
    }
    function updateThemeConfig(themeName, theme) {
      let config = (0, import_web.getConfig)();
      config.themes[themeName] = theme, (0, import_web.updateConfig)("themes", config.themes);
    }
    function notifyThemeManagersOfUpdate(themeName, theme) {
      import_web.activeThemeManagers.forEach((manager) => {
        manager.state.name === themeName && manager.updateStateFromProps(
          {
            name: themeName,
            forceTheme: theme
          },
          !0
        );
      });
    }
    function insertThemeCSS(themes, batch = !1) {
      return [];
    }
  }
});

// ../theme/dist/cjs/addTheme.native.js
var require_addTheme_native = __commonJS({
  "../theme/dist/cjs/addTheme.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), addTheme_exports = {};
    __export2(addTheme_exports, {
      addTheme: () => addTheme
    });
    module2.exports = __toCommonJS2(addTheme_exports);
    var import_mutateTheme = require_mutateTheme_native();
    function addTheme(props) {
      return (0, import_mutateTheme._mutateTheme)({ ...props, insertCSS: !0, mutationType: "add" });
    }
  }
});

// ../theme/dist/cjs/updateTheme.native.js
var require_updateTheme_native = __commonJS({
  "../theme/dist/cjs/updateTheme.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), updateTheme_exports = {};
    __export2(updateTheme_exports, {
      updateTheme: () => updateTheme
    });
    module2.exports = __toCommonJS2(updateTheme_exports);
    var import_mutateTheme = require_mutateTheme_native();
    function updateTheme({
      name,
      theme
    }) {
      return (0, import_mutateTheme._mutateTheme)({ name, theme, insertCSS: !0, mutationType: "update" });
    }
  }
});

// ../theme/dist/cjs/replaceTheme.native.js
var require_replaceTheme_native = __commonJS({
  "../theme/dist/cjs/replaceTheme.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), replaceTheme_exports = {};
    __export2(replaceTheme_exports, {
      replaceTheme: () => replaceTheme
    });
    module2.exports = __toCommonJS2(replaceTheme_exports);
    var import_mutateTheme = require_mutateTheme_native();
    function replaceTheme({
      name,
      theme
    }) {
      return (0, import_mutateTheme._mutateTheme)({ name, theme, insertCSS: !0, mutationType: "replace" });
    }
  }
});

// ../theme/dist/cjs/index.native.js
var require_index_native64 = __commonJS({
  "../theme/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      mutateThemes: () => import_mutateTheme.mutateThemes
    });
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_addTheme_native(), module2.exports);
    __reExport2(src_exports2, require_updateTheme_native(), module2.exports);
    __reExport2(src_exports2, require_replaceTheme_native(), module2.exports);
    var import_mutateTheme = require_mutateTheme_native();
  }
});

// ../toggle-group/dist/cjs/Toggle.native.js
var require_Toggle_native = __commonJS({
  "../toggle-group/dist/cjs/Toggle.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Toggle_exports = {};
    __export2(Toggle_exports, {
      Toggle: () => Toggle,
      ToggleFrame: () => ToggleFrame
    });
    module2.exports = __toCommonJS2(Toggle_exports);
    var import_stacks3 = require_index_native19(), import_use_controllable_state = require_index_native12(), import_web = require_index_native9(), React2 = __toESM2(require("react")), import_jsx_runtime6 = require("react/jsx-runtime"), NAME = "Toggle", ToggleFrame = (0, import_web.styled)(import_stacks3.ThemeableStack, {
      name: NAME,
      tag: "button",
      variants: {
        unstyled: {
          false: {
            pressTheme: !0,
            backgroundColor: "$background",
            alignItems: "center",
            justifyContent: "center",
            display: "flex",
            borderColor: "$borderColor",
            borderWidth: 1,
            margin: -1,
            hoverStyle: {
              backgroundColor: "$backgroundHover"
            },
            pressStyle: {
              backgroundColor: "$backgroundPress"
            },
            focusStyle: {
              borderColor: "$borderColorFocus",
              outlineColor: "$borderColorFocus",
              outlineWidth: 2,
              outlineStyle: "solid"
            }
          }
        },
        active: {
          true: {
            zIndex: 1,
            hoverStyle: {
              backgroundColor: "$background"
            },
            focusStyle: {
              borderColor: "$borderColorPress",
              backgroundColor: "$backgroundPress"
            }
          }
        },
        orientation: {
          horizontal: {
            flexDirection: "row",
            spaceDirection: "horizontal"
          },
          vertical: {
            flexDirection: "column",
            spaceDirection: "vertical"
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), Toggle = ToggleFrame.extractable(
      React2.forwardRef((props, forwardedRef) => {
        let {
          pressed: pressedProp,
          defaultPressed = !1,
          onPressedChange,
          ...buttonProps
        } = props, [pressed = !1, setPressed] = (0, import_use_controllable_state.useControllableState)({
          prop: pressedProp,
          onChange: onPressedChange,
          defaultProp: defaultPressed
        });
        return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          ToggleFrame,
          {
            theme: pressed ? "active" : null,
            themeShallow: !0,
            active: props.unstyled ? void 0 : pressed,
            "aria-pressed": pressed,
            "data-state": pressed ? "on" : "off",
            "data-disabled": props.disabled ? "" : void 0,
            ...buttonProps,
            ref: forwardedRef,
            onPress: (0, import_web.composeEventHandlers)(props.onPress ?? void 0, (event) => {
              props.disabled || setPressed(!pressed);
            })
          }
        );
      })
    );
    Toggle.displayName = NAME;
  }
});

// ../toggle-group/dist/cjs/ToggleGroup.native.js
var require_ToggleGroup_native = __commonJS({
  "../toggle-group/dist/cjs/ToggleGroup.native.js"(exports, module2) {
    "use strict";
    var __create2 = Object.create, __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __getProtoOf2 = Object.getPrototypeOf, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: !0 }) : target,
      mod
    )), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), ToggleGroup_exports = {};
    __export2(ToggleGroup_exports, {
      ToggleGroup: () => ToggleGroup
    });
    module2.exports = __toCommonJS2(ToggleGroup_exports);
    var import_focusable2 = require_index_native44(), import_font_size = require_index_native40(), import_get_token2 = require_index_native17(), import_group = require_index_native50(), import_helpers_tamagui = require_index_native41(), import_roving_focus = require_index_native62(), import_use_controllable_state = require_index_native12(), import_use_direction = require_index_native22(), import_web = require_index_native9(), import_react2 = __toESM2(require("react")), import_Toggle = require_Toggle_native(), import_jsx_runtime6 = require("react/jsx-runtime"), TOGGLE_GROUP_NAME = "ToggleGroup", TOGGLE_GROUP_ITEM_NAME = "ToggleGroupItem", TOGGLE_GROUP_CONTEXT = "ToggleGroup", { Provider: ToggleGroupItemProvider, useStyledContext: useToggleGroupItemContext } = (0, import_web.createStyledContext)(), { Provider: ToggleGroupContext, useStyledContext: useToggleGroupContext } = (0, import_web.createStyledContext)(), ToggleGroupItem = import_Toggle.ToggleFrame.extractable(
      import_react2.default.forwardRef(
        (props, forwardedRef) => {
          let { __scopeToggleGroup, ...rest } = props, valueContext = useToggleGroupValueContext(__scopeToggleGroup), context = useToggleGroupContext(__scopeToggleGroup), pressed = valueContext.value.includes(props.value), disabled = context.disabled || props.disabled || !1, ref = import_react2.default.useRef(null), groupItemProps = (0, import_group.useGroupItem)({ disabled }), size2 = props.size ?? context.size, sizeProps = props.unstyled ? {} : {
            width: void 0,
            height: void 0,
            padding: (0, import_web.getVariableValue)(size2) * 0.6
          }, iconSize = (typeof size2 == "number" ? size2 * 0.7 : (0, import_font_size.getFontSize)(size2)) * 1.2, theme = (0, import_web.useTheme)(), getThemedIcon = (0, import_helpers_tamagui.useGetThemedIcon)({ size: iconSize, color: theme.color }), children = import_react2.default.Children.toArray(props.children).map((child) => props.disablePassStyles || !import_react2.default.isValidElement(child) ? child : getThemedIcon(child)), commonProps = { pressed, disabled, ...sizeProps, ...props, children };
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(ToggleGroupItemProvider, { scope: __scopeToggleGroup, children: context.rovingFocus ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            import_roving_focus.RovingFocusGroup.Item,
            {
              asChild: "except-style",
              __scopeRovingFocusGroup: __scopeToggleGroup || TOGGLE_GROUP_CONTEXT,
              focusable: !disabled,
              active: pressed,
              children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                import_Toggle.ToggleFrame,
                {
                  asChild: "except-style",
                  focusable: !disabled,
                  disabled,
                  ref,
                  children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                    ToggleGroupItemImpl,
                    {
                      __scopeToggleGroup,
                      ...commonProps,
                      ref: forwardedRef,
                      ...groupItemProps
                    }
                  )
                }
              )
            }
          ) : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            import_Toggle.ToggleFrame,
            {
              asChild: "except-style",
              focusable: !disabled,
              disabled,
              ref,
              children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                ToggleGroupItemImpl,
                {
                  __scopeToggleGroup,
                  ...commonProps,
                  ref: forwardedRef
                }
              )
            }
          ) });
        }
      )
    );
    ToggleGroupItem.displayName = TOGGLE_GROUP_ITEM_NAME;
    var ToggleGroupItemImpl = import_Toggle.ToggleFrame.extractable(
      import_react2.default.forwardRef(
        (props, forwardedRef) => {
          let { __scopeToggleGroup, value, ...itemProps } = props, valueContext = useToggleGroupValueContext(__scopeToggleGroup), singleProps = {
            "aria-pressed": void 0
          }, typeProps = valueContext.type === "single" ? singleProps : void 0;
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            import_Toggle.Toggle,
            {
              ...typeProps,
              ...itemProps,
              ref: forwardedRef,
              onPressedChange: (pressed) => {
                pressed ? valueContext.onItemActivate(value) : valueContext.onItemDeactivate(value);
              }
            }
          );
        }
      )
    ), ToggleGroup = (0, import_web.withStaticProperties)(
      import_react2.default.forwardRef(
        (props, forwardedRef) => {
          let { type, ...toggleGroupProps } = props;
          if (import_web.isWeb || import_react2.default.useEffect(() => {
            if (props.id)
              return (0, import_focusable2.registerFocusable)(props.id, {
                // TODO: would be nice to focus on the first child later - could be done with reforest
                // for now leaving it empty
                focus: () => {
                }
              });
          }, [props.id]), type === "single")
            return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(ToggleGroupImplSingle, { ...toggleGroupProps, ref: forwardedRef });
          if (type === "multiple")
            return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(ToggleGroupImplMultiple, { ...toggleGroupProps, ref: forwardedRef });
          throw new Error(`Missing prop \`type\` expected on \`${TOGGLE_GROUP_NAME}\``);
        }
      ),
      {
        Item: ToggleGroupItem
      }
    );
    ToggleGroup.displayName = TOGGLE_GROUP_NAME;
    var {
      Provider: ToggleGroupValueProvider,
      useStyledContext: useToggleGroupValueContext
    } = (0, import_web.createStyledContext)(), ToggleGroupImplSingle = import_react2.default.forwardRef((props, forwardedRef) => {
      let {
        value: valueProp,
        defaultValue,
        onValueChange = () => {
        },
        disableDeactivation = !1,
        ...toggleGroupSingleProps
      } = props, [value, setValue] = (0, import_use_controllable_state.useControllableState)({
        prop: valueProp,
        defaultProp: defaultValue,
        onChange: onValueChange
      });
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        ToggleGroupValueProvider,
        {
          scope: props.__scopeToggleGroup,
          type: "single",
          value: value ? [value] : [],
          defaultValue: value,
          onItemActivate: setValue,
          onItemDeactivate: import_react2.default.useCallback(
            () => disableDeactivation ? null : setValue(""),
            [setValue, disableDeactivation]
          ),
          children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(ToggleGroupImpl, { ...toggleGroupSingleProps, ref: forwardedRef })
        }
      );
    }), ToggleGroupImplMultiple = import_react2.default.forwardRef((props, forwardedRef) => {
      let {
        value: valueProp,
        defaultValue,
        onValueChange = () => {
        },
        ...toggleGroupMultipleProps
      } = props, [value = [], setValue] = (0, import_use_controllable_state.useControllableState)({
        prop: valueProp,
        defaultProp: defaultValue,
        onChange: onValueChange
      }), handleButtonActivate = import_react2.default.useCallback(
        (itemValue) => setValue((prevValue = []) => [...prevValue, itemValue]),
        [setValue]
      ), handleButtonDeactivate = import_react2.default.useCallback(
        (itemValue) => setValue((prevValue = []) => prevValue.filter((value2) => value2 !== itemValue)),
        [setValue]
      );
      return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        ToggleGroupValueProvider,
        {
          scope: props.__scopeToggleGroup,
          type: "multiple",
          value,
          defaultValue: value,
          onItemActivate: handleButtonActivate,
          onItemDeactivate: handleButtonDeactivate,
          children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(ToggleGroupImpl, { ...toggleGroupMultipleProps, ref: forwardedRef })
        }
      );
    });
    ToggleGroup.displayName = TOGGLE_GROUP_NAME;
    var ToggleGroupImplElementFrame = (0, import_web.styled)(import_group.Group, {
      name: TOGGLE_GROUP_NAME,
      variants: {
        unstyled: {
          false: {
            backgroundColor: "$background"
          }
        },
        orientation: {
          vertical: {
            flexDirection: "column",
            spaceDirection: "vertical"
          },
          horizontal: {
            flexDirection: "row",
            spaceDirection: "horizontal"
          }
        }
      },
      defaultVariants: {
        unstyled: !1
      }
    }), ToggleGroupImpl = ToggleGroupImplElementFrame.extractable(
      import_react2.default.forwardRef(
        (props, forwardedRef) => {
          let {
            __scopeToggleGroup,
            disabled = !1,
            orientation = "horizontal",
            dir,
            rovingFocus = !0,
            loop = !0,
            unstyled = !1,
            size: sizeProp = "$true",
            sizeAdjust = 0,
            ...toggleGroupProps
          } = props, direction = (0, import_use_direction.useDirection)(dir), commonProps = {
            role: "group",
            dir: direction,
            ...toggleGroupProps
          }, adjustedSize = (0, import_web.getVariableValue)(
            (0, import_get_token2.getSize)(sizeProp, {
              shift: sizeAdjust
            })
          ), size2 = Math.round(adjustedSize * 0.45);
          return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
            ToggleGroupContext,
            {
              scope: __scopeToggleGroup,
              rovingFocus,
              disabled,
              size: size2,
              children: rovingFocus ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                import_roving_focus.RovingFocusGroup,
                {
                  asChild: "except-style",
                  __scopeRovingFocusGroup: __scopeToggleGroup || TOGGLE_GROUP_CONTEXT,
                  orientation,
                  dir: direction,
                  loop,
                  children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                    ToggleGroupImplElementFrame,
                    {
                      "aria-orientation": orientation,
                      orientation,
                      axis: orientation,
                      ref: forwardedRef,
                      "data-disabled": disabled ? "" : void 0,
                      unstyled,
                      ...commonProps
                    }
                  )
                }
              ) : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
                ToggleGroupImplElementFrame,
                {
                  "aria-orientation": orientation,
                  ref: forwardedRef,
                  orientation,
                  "data-disabled": disabled ? "" : void 0,
                  unstyled,
                  ...commonProps
                }
              )
            }
          );
        }
      )
    );
  }
});

// ../toggle-group/dist/cjs/index.native.js
var require_index_native65 = __commonJS({
  "../toggle-group/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_ToggleGroup_native(), module2.exports);
  }
});

// ../tooltip/dist/cjs/Tooltip.native.js
var require_Tooltip_native = __commonJS({
  "../tooltip/dist/cjs/Tooltip.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), Tooltip_native_exports = {};
    __export2(Tooltip_native_exports, {
      Tooltip: () => Tooltip
    });
    module2.exports = __toCommonJS2(Tooltip_native_exports);
    var import_core13 = require_index_native15(), RenderChildren = (props) => props.children, RenderNull = (props) => null, Tooltip = (0, import_core13.withStaticProperties)(RenderChildren, {
      Anchor: RenderChildren,
      Arrow: RenderNull,
      Close: RenderNull,
      Content: RenderNull,
      Trigger: RenderChildren
    });
  }
});

// ../tooltip/dist/cjs/TooltipSimple.native.js
var require_TooltipSimple_native = __commonJS({
  "../tooltip/dist/cjs/TooltipSimple.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), TooltipSimple_native_exports = {};
    __export2(TooltipSimple_native_exports, {
      TooltipSimple: () => TooltipSimple
    });
    module2.exports = __toCommonJS2(TooltipSimple_native_exports);
    var RenderChildren = (props) => props.children, TooltipSimple = RenderChildren;
  }
});

// ../tooltip/dist/cjs/index.native.js
var require_index_native66 = __commonJS({
  "../tooltip/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_Tooltip_native(), module2.exports);
    __reExport2(src_exports2, require_TooltipSimple_native(), module2.exports);
  }
});

// ../use-debounce/dist/cjs/index.native.js
var require_index_native67 = __commonJS({
  "../use-debounce/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      debounce: () => debounce,
      useDebounce: () => useDebounce,
      useDebounceValue: () => useDebounceValue
    });
    module2.exports = __toCommonJS2(src_exports2);
    var import_react2 = require("react");
    function debounce(func, wait, leading) {
      let timeout, isCancelled = !1;
      function debounced() {
        isCancelled = !1;
        let context = this, args = arguments;
        leading && !timeout && func.apply(context, args), clearTimeout(timeout), timeout = setTimeout(function() {
          timeout = null, leading || isCancelled || func.apply(context, args), isCancelled = !1;
        }, wait);
      }
      return debounced.cancel = () => {
        isCancelled = !0;
      }, debounced;
    }
    var defaultOpts = { leading: !1 };
    function useDebounce(fn, wait, options = defaultOpts, mountArgs = []) {
      let dbEffect = (0, import_react2.useRef)(null);
      return (0, import_react2.useEffect)(() => () => {
        var _a;
        (_a = dbEffect.current) == null || _a.cancel();
      }, []), (0, import_react2.useMemo)(() => (dbEffect.current = debounce(fn, wait, options.leading), dbEffect.current), [options.leading, ...mountArgs]);
    }
    function useDebounceValue(val, amt = 0) {
      let [state, setState] = (0, import_react2.useState)(val);
      return (0, import_react2.useEffect)(() => {
        let tm = setTimeout(() => {
          setState((prev) => prev === val ? prev : val);
        }, amt);
        return () => {
          clearTimeout(tm);
        };
      }, [val]), state;
    }
  }
});

// ../use-window-dimensions/dist/cjs/index.native.js
var require_index_native68 = __commonJS({
  "../use-window-dimensions/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    __export2(src_exports2, {
      configureInitialWindowDimensions: () => configureInitialWindowDimensions,
      useWindowDimensions: () => useWindowDimensions
    });
    module2.exports = __toCommonJS2(src_exports2);
    var import_constants = require_index_native2(), import_react2 = require("react"), import_react_native4 = require("react-native"), initialValue = {
      height: 800,
      width: 600
    };
    function configureInitialWindowDimensions(next) {
      Object.assign(initialValue, next);
    }
    import_react_native4.Dimensions.addEventListener("change", () => {
      cbs.forEach((cb) => cb(window));
    });
    var cbs = /* @__PURE__ */ new Set();
    function subscribe(cb) {
      return cbs.add(cb), () => cbs.delete(cb);
    }
    function useWindowDimensions({
      serverValue = initialValue
    } = {}) {
      return (0, import_react2.useSyncExternalStore)(
        subscribe,
        () => import_react_native4.Dimensions.get("window"),
        () => import_constants.isWeb ? serverValue : import_react_native4.Dimensions.get("window")
      );
    }
  }
});

// ../visually-hidden/dist/cjs/VisuallyHidden.native.js
var require_VisuallyHidden_native = __commonJS({
  "../visually-hidden/dist/cjs/VisuallyHidden.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __export2 = (target, all) => {
      for (var name in all)
        __defProp2(target, name, { get: all[name], enumerable: !0 });
    }, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), VisuallyHidden_exports = {};
    __export2(VisuallyHidden_exports, {
      VisuallyHidden: () => VisuallyHidden
    });
    module2.exports = __toCommonJS2(VisuallyHidden_exports);
    var import_web = require_index_native9(), VisuallyHidden = (0, import_web.styled)(import_web.Stack, {
      position: "absolute",
      width: 1,
      height: 1,
      margin: -1,
      zIndex: -1e4,
      overflow: "hidden",
      opacity: 1e-8,
      pointerEvents: "none",
      variants: {
        preserveDimensions: {
          true: {
            position: "relative",
            width: "auto",
            height: "auto"
          }
        },
        visible: {
          true: {
            position: "relative",
            width: "auto",
            height: "auto",
            margin: 0,
            zIndex: 1,
            overflow: "visible",
            opacity: 1,
            pointerEvents: "auto"
          }
        }
      }
    });
    VisuallyHidden.isVisuallyHidden = !0;
  }
});

// ../visually-hidden/dist/cjs/index.native.js
var require_index_native69 = __commonJS({
  "../visually-hidden/dist/cjs/index.native.js"(exports, module2) {
    "use strict";
    var __defProp2 = Object.defineProperty, __getOwnPropDesc2 = Object.getOwnPropertyDescriptor, __getOwnPropNames2 = Object.getOwnPropertyNames, __hasOwnProp2 = Object.prototype.hasOwnProperty, __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from == "object" || typeof from == "function")
        for (let key of __getOwnPropNames2(from))
          !__hasOwnProp2.call(to, key) && key !== except && __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      return to;
    }, __reExport2 = (target, mod, secondTarget) => (__copyProps2(target, mod, "default"), secondTarget && __copyProps2(secondTarget, mod, "default")), __toCommonJS2 = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: !0 }), mod), src_exports2 = {};
    module2.exports = __toCommonJS2(src_exports2);
    __reExport2(src_exports2, require_VisuallyHidden_native(), module2.exports);
  }
});

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Anchor: () => Anchor,
  Article: () => Article,
  Aside: () => Aside,
  ComponentContext: () => import_core12.ComponentContext,
  Configuration: () => import_core12.Configuration,
  EnsureFlexed: () => EnsureFlexed,
  Fieldset: () => Fieldset,
  FontLanguage: () => import_core12.FontLanguage,
  Footer: () => Footer,
  Header: () => Header,
  Input: () => Input,
  InputFrame: () => InputFrame,
  Main: () => Main,
  Nav: () => Nav,
  Section: () => Section,
  Spacer: () => import_core12.Spacer,
  Spinner: () => Spinner,
  Stack: () => import_core12.Stack,
  TamaguiProvider: () => TamaguiProvider,
  Text: () => Text2,
  TextArea: () => TextArea,
  TextAreaFrame: () => TextAreaFrame,
  Theme: () => import_core12.Theme,
  Unspaced: () => import_core12.Unspaced,
  View: () => import_core12.View,
  createComponent: () => import_core12.createComponent,
  createFont: () => import_core12.createFont,
  createShorthands: () => import_core12.createShorthands,
  createStyledContext: () => import_core12.createStyledContext,
  createTamagui: () => createTamagui,
  createTheme: () => import_core12.createTheme,
  createTokens: () => import_core12.createTokens,
  createVariable: () => import_core12.createVariable,
  defaultStyles: () => defaultStyles,
  getConfig: () => import_core12.getConfig,
  getMedia: () => import_core12.getMedia,
  getStylesAtomic: () => import_core12.getStylesAtomic,
  getThemes: () => import_core12.getThemes,
  getToken: () => import_core12.getToken,
  getTokenValue: () => import_core12.getTokenValue,
  getTokens: () => import_core12.getTokens,
  getVariable: () => import_core12.getVariable,
  getVariableName: () => import_core12.getVariableName,
  getVariableValue: () => import_core12.getVariableValue,
  insertFont: () => import_core12.insertFont,
  isChrome: () => import_core12.isChrome,
  isClient: () => import_core12.isClient,
  isServer: () => import_core12.isServer,
  isTamaguiComponent: () => import_core12.isTamaguiComponent,
  isTamaguiElement: () => import_core12.isTamaguiElement,
  isTouchable: () => import_core12.isTouchable,
  isVariable: () => import_core12.isVariable,
  isWeb: () => import_core12.isWeb,
  isWebTouchable: () => import_core12.isWebTouchable,
  matchMedia: () => import_core12.matchMedia,
  mediaObjectToString: () => import_core12.mediaObjectToString,
  mediaQueryConfig: () => import_core12.mediaQueryConfig,
  mediaState: () => import_core12.mediaState,
  setupDev: () => import_core12.setupDev,
  setupReactNative: () => import_core12.setupReactNative,
  spacedChildren: () => import_core12.spacedChildren,
  styled: () => import_core12.styled,
  themeable: () => import_core12.themeable,
  useConfiguration: () => import_core12.useConfiguration,
  useDidFinishSSR: () => import_core12.useDidFinishSSR,
  useEvent: () => import_core12.useEvent,
  useGet: () => import_core12.useGet,
  useInputProps: () => useInputProps,
  useIsTouchDevice: () => import_core12.useIsTouchDevice,
  useIsomorphicLayoutEffect: () => import_core12.useIsomorphicLayoutEffect,
  useMedia: () => import_core12.useMedia,
  useProps: () => import_core12.useProps,
  usePropsAndStyle: () => import_core12.usePropsAndStyle,
  useStyle: () => import_core12.useStyle,
  useTheme: () => import_core12.useTheme,
  useThemeName: () => import_core12.useThemeName,
  variableToString: () => import_core12.variableToString,
  withStaticProperties: () => import_core12.withStaticProperties
});
module.exports = __toCommonJS(src_exports);
__reExport(src_exports, __toESM(require_index_native23()), module.exports);
__reExport(src_exports, __toESM(require_index_native24()), module.exports);
__reExport(src_exports, __toESM(require_index_native36()), module.exports);
__reExport(src_exports, __toESM(require_index_native11()), module.exports);
__reExport(src_exports, __toESM(require_index_native39()), module.exports);
__reExport(src_exports, __toESM(require_index_native42()), module.exports);
__reExport(src_exports, __toESM(require_index_native43()), module.exports);
__reExport(src_exports, __toESM(require_index_native47()), module.exports);
__reExport(src_exports, __toESM(require_index_native5()), module.exports);
__reExport(src_exports, __toESM(require_index_native25()), module.exports);
__reExport(src_exports, __toESM(require_index_native35()), module.exports);
__reExport(src_exports, __toESM(require_index_native40()), module.exports);
__reExport(src_exports, __toESM(require_index_native48()), module.exports);
__reExport(src_exports, __toESM(require_index_native50()), module.exports);
__reExport(src_exports, __toESM(require_index_native41()), module.exports);
__reExport(src_exports, __toESM(require_index_native37()), module.exports);
__reExport(src_exports, __toESM(require_index_native45()), module.exports);
__reExport(src_exports, __toESM(require_index_native51()), module.exports);
__reExport(src_exports, __toESM(require_index_native55()), module.exports);
__reExport(src_exports, __toESM(require_index_native54()), module.exports);
__reExport(src_exports, __toESM(require_index_native29()), module.exports);
__reExport(src_exports, __toESM(require_index_native56()), module.exports);
__reExport(src_exports, __toESM(require_index_native57()), module.exports);
__reExport(src_exports, __toESM(require_index_native33()), module.exports);
__reExport(src_exports, __toESM(require_index_native59()), module.exports);
__reExport(src_exports, __toESM(require_index_native58()), module.exports);
__reExport(src_exports, __toESM(require_index_native38()), module.exports);
__reExport(src_exports, __toESM(require_index_native34()), module.exports);
__reExport(src_exports, __toESM(require_index_native60()), module.exports);
__reExport(src_exports, __toESM(require_index_native19()), module.exports);
__reExport(src_exports, __toESM(require_index_native61()), module.exports);
__reExport(src_exports, __toESM(require_index_native63()), module.exports);
__reExport(src_exports, __toESM(require_index_native21()), module.exports);
__reExport(src_exports, __toESM(require_index_native64()), module.exports);
__reExport(src_exports, __toESM(require_index_native65()), module.exports);
__reExport(src_exports, __toESM(require_index_native66()), module.exports);
__reExport(src_exports, __toESM(require_index_native12()), module.exports);
__reExport(src_exports, __toESM(require_index_native67()), module.exports);
__reExport(src_exports, __toESM(require_index_native()), module.exports);
__reExport(src_exports, __toESM(require_index_native68()), module.exports);
__reExport(src_exports, __toESM(require_index_native69()), module.exports);

// src/createTamagui.ts
var import_core = __toESM(require_index_native15()), createTamagui = process.env.NODE_ENV !== "development" ? import_core.createTamagui : (conf) => {
  let sizeTokenKeys = ["$true"], hasKeys = (expectedKeys, obj) => expectedKeys.every((k) => typeof obj[k] < "u"), tamaguiConfig = (0, import_core.createTamagui)(conf);
  for (let name of ["size", "space"]) {
    let tokenSet = tamaguiConfig.tokensParsed[name];
    if (!tokenSet)
      throw new Error(
        `Expected tokens for "${name}" in ${Object.keys(
          tamaguiConfig.tokensParsed
        ).join(", ")}`
      );
    if (!hasKeys(sizeTokenKeys, tokenSet))
      throw new Error(`
createTamagui() missing expected tokens.${name}:

Received: ${Object.keys(tokenSet).join(", ")}

Expected: ${sizeTokenKeys.join(", ")}

Tamagui expects a "true" key that is the same value as your default size. This is so 
it can size things up or down from the defaults without assuming which keys you use.

Please define a "true" or "$true" key on your size and space tokens like so (example):

size: {
  sm: 2,
  md: 10,
  true: 10, // this means "md" is your default size
  lg: 20,
}

`);
  }
  let expected = Object.keys(tamaguiConfig.tokensParsed.size);
  for (let name of ["radius", "zIndex"]) {
    let tokenSet = tamaguiConfig.tokensParsed[name], received = Object.keys(tokenSet);
    if (!received.some((rk) => expected.includes(rk)))
      throw new Error(`
createTamagui() invalid tokens.${name}:

Received: ${received.join(", ")}

Expected a subset of: ${expected.join(", ")}

`);
  }
  return tamaguiConfig;
};

// src/views/TamaguiProvider.tsx
var import_core2 = __toESM(require_index_native15()), import_portal = __toESM(require_index_native29()), import_jsx_runtime = require("react/jsx-runtime"), TamaguiProvider = ({ children, ...props }) => /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_core2.TamaguiProvider, { ...props, children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_portal.PortalProvider, { shouldAddRootHost: !0, children }) });

// src/views/Anchor.tsx
var import_core3 = __toESM(require_index_native15()), import_text = __toESM(require_index_native21()), import_react_native = require("react-native"), import_jsx_runtime2 = require("react/jsx-runtime"), AnchorFrame = (0, import_core3.styled)(import_text.SizableText, {
  name: "Anchor",
  tag: "a",
  accessibilityRole: "link"
}), Anchor = AnchorFrame.styleable(
  ({ href, target, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
    AnchorFrame,
    {
      ...props,
      ...import_core3.isWeb ? {
        href,
        target
      } : {
        onPress: (event) => {
          var _a;
          (_a = props.onPress) == null || _a.call(props, event), href !== void 0 && import_react_native.Linking.openURL(href);
        }
      },
      ref
    }
  )
);

// src/views/EnsureFlexed.tsx
var import_core4 = __toESM(require_index_native15()), EnsureFlexed = (0, import_core4.styled)(import_core4.Text, {
  opacity: 0,
  lineHeight: 0,
  height: 0,
  display: "flex",
  fontSize: 200,
  children: "wwwwwwwwwwwwwwwwwww",
  hoverStyle: {
    backgroundColor: "red"
  },
  pointerEvents: "none"
});
EnsureFlexed.isVisuallyHidden = !0;

// src/views/Fieldset.tsx
var import_core5 = __toESM(require_index_native15()), import_stacks = __toESM(require_index_native19()), Fieldset = (0, import_core5.styled)(import_stacks.YStack, {
  name: "Fieldset",
  tag: "fieldset",
  variants: {
    horizontal: {
      true: {
        flexDirection: "row",
        alignItems: "center"
      }
    }
  }
});

// src/views/Input.tsx
var import_core7 = __toESM(require_index_native15()), import_focusable = __toESM(require_index_native44()), import_react_native2 = require("react-native");

// src/helpers/inputHelpers.tsx
var import_core6 = __toESM(require_index_native15()), import_get_button_sized = __toESM(require_index_native18()), import_get_font_sized = __toESM(require_index_native20()), import_get_token = __toESM(require_index_native17()), inputSizeVariant = (val = "$true", extras) => {
  if (extras.props.multiline || extras.props.numberOfLines > 1)
    return textAreaSizeVariant(val, extras);
  let buttonStyles = (0, import_get_button_sized.getButtonSized)(val, extras), paddingHorizontal = (0, import_get_token.getSpace)(val, {
    shift: -1,
    bounds: [2]
  }), fontStyle = (0, import_get_font_sized.getFontSized)(val, extras);
  return !import_core6.isWeb && fontStyle && delete fontStyle.lineHeight, {
    ...fontStyle,
    ...buttonStyles,
    paddingHorizontal
  };
}, textAreaSizeVariant = (val = "$true", extras) => {
  let { props } = extras, buttonStyles = (0, import_get_button_sized.getButtonSized)(val, extras), fontStyle = (0, import_get_font_sized.getFontSized)(val, extras), lines = props.rows ?? props.numberOfLines, height = typeof lines == "number" ? lines * (0, import_core6.getVariableValue)(fontStyle.lineHeight) : "auto", paddingVertical = (0, import_get_token.getSpace)(val, {
    shift: -2,
    bounds: [2]
  }), paddingHorizontal = (0, import_get_token.getSpace)(val, {
    shift: -1,
    bounds: [2]
  });
  return {
    ...buttonStyles,
    ...fontStyle,
    paddingVertical,
    paddingHorizontal,
    height
  };
};

// src/views/Input.tsx
var import_jsx_runtime3 = require("react/jsx-runtime"), defaultStyles = {
  size: "$true",
  fontFamily: "$body",
  borderWidth: 1,
  outlineWidth: 0,
  color: "$color",
  ...import_core7.isWeb ? {
    tabIndex: 0
  } : {
    focusable: !0
  },
  borderColor: "$borderColor",
  backgroundColor: "$background",
  // this fixes a flex bug where it overflows container
  minWidth: 0,
  hoverStyle: {
    borderColor: "$borderColorHover"
  },
  focusStyle: {
    outlineColor: "$borderColorFocus",
    outlineWidth: 2,
    outlineStyle: "solid",
    borderColor: "$borderColorFocus"
  }
}, InputFrame = (0, import_core7.styled)(import_react_native2.TextInput, {
  name: "Input",
  variants: {
    unstyled: {
      false: defaultStyles
    },
    size: {
      "...size": inputSizeVariant
    }
  },
  defaultVariants: {
    unstyled: !1
  }
}), Input = InputFrame.styleable((propsIn, ref) => {
  let props = useInputProps(propsIn, ref);
  return /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(InputFrame, { ...props });
});
function useInputProps(props, ref) {
  var _a, _b;
  let theme = (0, import_core7.useTheme)(), { onChangeText, ref: combinedRef } = (0, import_focusable.useFocusable)({
    props,
    ref,
    isInput: !0
  }), placeholderColorProp = props.placeholderTextColor, placeholderTextColor = ((_a = theme[placeholderColorProp]) == null ? void 0 : _a.get()) ?? placeholderColorProp ?? ((_b = theme.placeholderColor) == null ? void 0 : _b.get());
  return {
    ref: combinedRef,
    editable: !props.disabled,
    ...props,
    placeholderTextColor,
    onChangeText
  };
}

// src/views/Layouts.tsx
var import_core8 = __toESM(require_index_native15()), Section = (0, import_core8.styled)(import_core8.Stack, {
  name: "Section",
  tag: "section",
  flexDirection: "column",
  accessibilityRole: "summary"
}), Article = (0, import_core8.styled)(import_core8.Stack, {
  name: "Article",
  tag: "article",
  flexDirection: "column"
}), Main = (0, import_core8.styled)(import_core8.Stack, {
  name: "Main",
  tag: "main",
  flexDirection: "column"
}), Header = (0, import_core8.styled)(import_core8.Stack, {
  name: "Header",
  tag: "header",
  accessibilityRole: "header",
  flexDirection: "column"
}), Aside = (0, import_core8.styled)(import_core8.Stack, {
  name: "Aside",
  tag: "aside",
  flexDirection: "column"
  // accessibilityRole: 'complementary',
}), Footer = (0, import_core8.styled)(import_core8.Stack, {
  name: "Footer",
  tag: "footer",
  flexDirection: "column"
  // accessibilityRole: 'contentinfo',
}), Nav = (0, import_core8.styled)(import_core8.Stack, {
  name: "Nav",
  tag: "nav",
  flexDirection: "column"
  // accessibilityRole: 'navigation',
});

// src/views/Spinner.tsx
var import_core9 = __toESM(require_index_native15()), import_stacks2 = __toESM(require_index_native19()), React = __toESM(require("react")), import_react_native3 = require("react-native"), import_jsx_runtime4 = require("react/jsx-runtime"), Spinner = import_stacks2.YStack.extractable(
  (0, import_core9.themeable)(
    React.forwardRef((props, ref) => {
      let { size: size2, color: colorProp, ...stackProps } = props, theme = (0, import_core9.useTheme)(), color = colorProp;
      return color && color[0] === "$" && (color = (0, import_core9.variableToString)(theme[color])), /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(import_stacks2.YStack, { ref, ...stackProps, children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(import_react_native3.ActivityIndicator, { size: size2, color }) });
    }),
    {
      componentName: "Spinner"
    }
  )
);

// src/views/TextArea.tsx
var import_core10 = __toESM(require_index_native15());
var import_jsx_runtime5 = require("react/jsx-runtime"), TextAreaFrame = (0, import_core10.styled)(InputFrame, {
  name: "TextArea",
  multiline: !0,
  // this attribute fixes firefox newline issue
  whiteSpace: "pre-wrap",
  variants: {
    unstyled: {
      false: {
        height: "auto",
        ...defaultStyles
      }
    },
    size: {
      "...size": textAreaSizeVariant
    }
  },
  defaultVariants: {
    unstyled: !1
  }
}), TextArea = TextAreaFrame.styleable((propsIn, ref) => {
  let props = useInputProps(propsIn, ref), linesProp = {
    // web uses rows now, but native not caught up :/
    [import_core10.isWeb ? "rows" : "numberOfLines"]: propsIn.unstyled ? void 0 : 4
  };
  return /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(TextAreaFrame, { ...linesProp, ...props });
});

// src/views/Text.tsx
var import_core11 = __toESM(require_index_native15()), Text2 = (0, import_core11.styled)(import_core11.Text, {
  variants: {
    unstyled: {
      false: {
        color: "$color"
      }
    }
  },
  defaultVariants: {
    unstyled: !1
  }
});

// src/index.ts
var import_core12 = __toESM(require_index_native15());
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Anchor,
  Article,
  Aside,
  ComponentContext,
  Configuration,
  EnsureFlexed,
  Fieldset,
  FontLanguage,
  Footer,
  Header,
  Input,
  InputFrame,
  Main,
  Nav,
  Section,
  Spacer,
  Spinner,
  Stack,
  TamaguiProvider,
  Text,
  TextArea,
  TextAreaFrame,
  Theme,
  Unspaced,
  View,
  createComponent,
  createFont,
  createShorthands,
  createStyledContext,
  createTamagui,
  createTheme,
  createTokens,
  createVariable,
  defaultStyles,
  getConfig,
  getMedia,
  getStylesAtomic,
  getThemes,
  getToken,
  getTokenValue,
  getTokens,
  getVariable,
  getVariableName,
  getVariableValue,
  insertFont,
  isChrome,
  isClient,
  isServer,
  isTamaguiComponent,
  isTamaguiElement,
  isTouchable,
  isVariable,
  isWeb,
  isWebTouchable,
  matchMedia,
  mediaObjectToString,
  mediaQueryConfig,
  mediaState,
  setupDev,
  setupReactNative,
  spacedChildren,
  styled,
  themeable,
  useConfiguration,
  useDidFinishSSR,
  useEvent,
  useGet,
  useInputProps,
  useIsTouchDevice,
  useIsomorphicLayoutEffect,
  useMedia,
  useProps,
  usePropsAndStyle,
  useStyle,
  useTheme,
  useThemeName,
  variableToString,
  withStaticProperties
});
/*! Bundled license information:

use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js:
  (**
   * @license React
   * use-sync-external-store-shim.native.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

use-sync-external-store/cjs/use-sync-external-store-shim.native.development.js:
  (**
   * @license React
   * use-sync-external-store-shim.native.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js:
  (**
   * @license React
   * use-sync-external-store-shim/with-selector.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js:
  (**
   * @license React
   * use-sync-external-store-shim/with-selector.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=native.js.map
